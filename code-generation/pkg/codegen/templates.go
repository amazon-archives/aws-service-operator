// Code generated by go-bindata.
// sources:
// assets/aws-service-operator.yaml.templ
// assets/base.go.templ
// assets/cft.go.templ
// assets/operator.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsServiceOperatorYamlTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x76\x03\x14\x28\x2a\x39\xee\xa9\x10\x76\x17\xd8\xda\x6e\x6a\x64\xeb\x5d\xd8\x4e\xaf\xc9\x98\x1a\xcb\xac\x29\x92\x20\x29\x3b\x8e\xe0\xff\x5e\x50\x5f\xfe\xf6\x2e\xda\x44\x27\x71\xf4\x38\xef\xcd\xe3\x70\x74\x0b\x0f\xd5\x03\xfd\x67\x18\x3d\x4f\x61\xd0\x1f\x4e\x61\xfa\xe7\x70\x02\x7f\x0c\x9f\x06\x70\xd7\x3e\xc1\x2d\x4c\x17\xdc\xc2\x9c\x0b\x02\x6e\x01\x73\xa7\x52\x92\x64\xd0\x51\x02\x2b\x8e\xf0\x05\xd7\x36\x54\xda\x47\x94\x81\xe6\xdb\x97\xe0\x16\x86\x73\xd8\xa8\xfc\xa7\x04\x04\x5f\x12\xb8\x05\x01\x5b\xa0\x4c\x09\x50\x6e\xdc\x82\xcb\x14\x70\xa6\x72\x07\xae\x25\xc8\x70\x49\x40\x09\x77\x16\x9c\x2a\x77\x44\x8e\x32\x2d\x82\xdb\x5a\x80\x2c\x83\x7a\x99\x76\x98\x4a\x28\x25\xd9\x41\x6b\xc9\x59\x48\xb8\x21\xe6\x94\xd9\x44\x41\x80\x9a\xff\x4d\xc6\x72\x25\x63\x58\x75\x83\x25\x97\x49\x0c\x4f\xdc\xba\x80\x3b\xca\x6c\x1c\x84\x50\xc5\x46\x98\x91\xd5\xc8\x28\x00\x38\xda\x04\x90\x91\xc3\x04\x1d\xc6\x01\x00\x80\xc4\x8c\x62\xf0\xa5\x5a\x32\x2b\xce\xa8\x2d\x39\x28\x0a\x53\x56\xf5\x8e\xcb\x84\xbe\xfe\x02\xef\x48\x50\x46\xd2\x41\x7c\x0f\xd1\xd0\x33\x6e\xb7\x41\x78\x40\x80\x9a\xd3\x57\x47\xd2\xaf\x6c\xb4\xfc\xcd\x46\x5c\x75\x56\xdd\x19\x39\xf4\xd4\x95\xba\x5e\x6e\x9d\xca\xc6\x64\x55\x6e\x18\xf5\x69\xce\x25\x77\x5c\xc9\x0b\xda\x8a\xa2\x21\x8e\x26\x9a\x58\xd4\x6c\x8c\x5e\x44\x6e\x50\x6c\xb7\xd1\xb1\xf2\x08\xd7\x36\x00\xb0\x9a\x58\x95\x28\x35\x2a\xd7\x31\x5c\xc0\x55\x44\xb6\x82\x36\x22\x8f\x59\x3f\x72\x99\x6c\xb7\x35\x44\x70\xeb\x3e\x5e\x81\x95\x67\x52\x41\x75\x29\xf2\x0d\x55\xd4\x78\xbb\x50\xc6\x8d\xf6\xf5\x14\x45\x08\x67\x0e\xc2\x9f\xc2\x85\x94\x13\x9f\xa3\xac\xa9\x4d\x1b\x36\x02\x22\x9f\xbb\x0d\xfb\xdc\xb4\x57\x98\xe5\x32\xcd\x05\x9a\xb7\xea\xb5\x4c\xe9\x6b\x47\x34\xf1\xdf\x6b\xec\x6a\xd7\x85\x28\xf4\x02\xbb\x41\x51\x54\xdc\x4d\xdb\xf6\x44\x6e\x1d\x99\xb1\x12\xc7\x8d\x6b\x66\xc8\x22\xcc\xdd\x42\x19\xfe\x0d\x7d\xb3\x9c\x36\xd7\x9b\xfb\x1a\xc0\xe4\xa2\xf2\xb7\xec\xde\x0f\xbe\x3b\x6a\xbb\x43\xb8\xb9\x29\x5f\x4c\x5d\x42\x1b\xb7\xc4\x0c\x39\x5b\xaf\xb4\x4a\x9a\x57\xa6\xe4\x9c\xa7\x19\x6a\xdb\x22\x4b\xc2\x66\x49\x2b\x92\xf5\xbe\x15\x99\x59\x9b\x30\x25\x57\xbf\x89\xa6\x5d\x42\x58\xa3\x63\x8b\x26\xb1\x21\x74\x54\x2f\x12\x12\xd4\x2e\x72\x9d\xec\xbe\xe8\x7a\xcb\x99\x5a\xce\x5d\xc7\xf3\xd5\xb1\xf2\x4e\x36\xe1\xa4\xbd\x93\xdf\x4f\xf7\x19\x79\x17\xef\xe3\x89\xbc\x9b\x9f\x6f\x4e\x85\xf8\x60\xdb\x3b\x93\x2a\xd7\x23\x63\x2a\x97\xee\x7f\xcd\xbd\x76\x22\xf8\x09\x7a\x01\x73\xae\x67\x7f\xe7\x32\xe1\x32\xfd\xc1\xad\xab\x04\x8d\x69\x5e\x21\x1b\x47\xaf\xb0\x04\xbb\x91\x76\x78\xbd\x5e\xe1\xb1\xf9\xec\x1f\x62\xae\xbe\x25\x17\x3c\xfe\x7e\x36\xf6\x49\x0b\xb5\xf1\x13\xe4\xc8\x3e\xd4\xda\xfe\x37\xa7\x5e\x67\xdf\xff\x45\x18\xd2\x82\x33\xb4\x31\x74\xcb\x75\xf9\x7b\x46\x47\xcd\x14\x3e\x24\x2e\xcd\x97\x52\xb9\xd2\x6a\xbb\x0b\x02\x70\xcc\x22\xcc\xf0\x9b\x92\xb8\xb6\x11\x53\x59\xc7\x1f\xd9\x15\x95\xe5\x0f\x05\x67\x24\x0e\xd2\xa0\xd6\x57\xf7\xec\x94\x97\xab\x83\x93\x19\x5d\xb7\xc5\x3f\x4c\x49\x87\x5c\x92\xd9\x23\x0d\x5f\xf3\xb3\x2e\x30\xc3\xb4\x42\xd5\xa0\x06\xd3\x39\xb7\x31\x5e\xbd\x8f\xde\x47\xdd\xb0\x1c\xf9\xbf\x1e\xa7\x79\xc9\x85\x78\x51\x82\xb3\x4d\x0c\x8f\x62\x8d\x1b\xbb\x6f\x81\x49\x0f\x2c\x69\x46\x06\x99\xa3\x60\x18\xb2\xaa\xb5\x43\x5f\xc0\xfd\x5d\xef\xe9\xd3\x64\x3a\x18\x7f\x1e\x3d\xfe\x35\x78\x38\xc1\x1a\x4a\xb9\x92\xf7\x77\xe3\xc1\x87\xe1\xf3\xe8\xf4\x3b\x56\x26\x86\x3c\xb9\xbf\x7b\xec\xf5\x9e\x3f\x8d\xa6\x9f\x87\xfd\x87\x7f\x03\x00\x00\xff\xff\x1b\x6a\x36\x65\x5b\x0a\x00\x00")

func awsServiceOperatorYamlTemplBytes() ([]byte, error) {
	return bindataRead(
		_awsServiceOperatorYamlTempl,
		"aws-service-operator.yaml.templ",
	)
}

func awsServiceOperatorYamlTempl() (*asset, error) {
	bytes, err := awsServiceOperatorYamlTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-service-operator.yaml.templ", size: 2651, mode: os.FileMode(436), modTime: time.Unix(1540275354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x3f\xcf\x9b\x30\x10\x87\xe7\xf8\x53\x9c\xa2\x57\x15\x44\x60\x76\xd4\x4e\xed\xd2\xa1\xa9\xda\x77\xe8\x50\x75\x30\xce\xc5\x41\x09\x36\xb5\x8f\x86\x0a\xf9\xbb\x57\x36\xd0\x90\xe1\x15\xc9\x74\xf1\xff\xdf\xf3\xe4\x68\x85\x3c\x0b\x85\x50\x09\x87\x8c\xd5\x4d\x6b\x2c\x41\xc2\x00\xb6\xd2\x68\xc2\x9e\xb6\xe1\xb7\xaa\xe9\xd4\x55\x5c\x9a\xa6\x10\x57\x77\x11\x95\x0b\x35\x77\x68\xff\xd4\x12\x73\xd3\xa2\x15\x64\x6c\xd1\x9e\x55\x21\x8d\x3e\xd6\xea\xe9\x63\xbf\x3b\xec\xb0\x11\x5a\x28\xb4\xe1\xf0\x30\xe4\x60\x85\x56\x08\x2f\xb5\x3e\x60\x9f\xc1\x0b\x5e\xb0\x41\x4d\x50\x7e\x00\xfe\x99\xb0\x71\xde\x3f\xfb\xca\x3c\x70\xc5\x30\xcc\xf7\xf1\xd7\x16\x25\xff\x8e\xce\x74\x56\x22\xdf\x8b\x06\xbd\x9f\x23\xa0\x3e\x78\xcf\x52\xc6\xe8\x6f\x3b\x5a\x02\x47\xb6\x93\x04\x03\x03\x18\x59\xa7\xc2\x3f\xc6\xc2\x00\x22\xcb\x97\x91\x05\x76\x4b\x32\xfe\x6d\xb1\xf4\x0c\xe5\x4a\x5c\xd8\xad\x6c\xe0\x5f\x27\xf2\x3b\x2e\xcf\xd8\xb1\xd3\x12\xf6\x78\x4d\xde\xc0\xc9\x1e\xe7\xc9\x58\x0a\xbb\xa8\x28\xb8\xb1\x48\x9d\xd5\xf0\x2e\x4c\x84\xf1\x7c\x7d\x39\xd5\x2c\xce\x2d\xaf\x2e\xef\x46\xe3\xfa\xc3\x82\x56\x15\x95\x6b\x1b\xf8\x1e\xaf\xb3\xa5\x64\xca\x78\x97\x28\xbd\x45\x1a\xf5\x01\xdc\x14\x26\xd5\xc8\x9e\xc2\x0f\x41\xf2\x94\x48\xea\x61\xfa\x84\x82\xc9\x50\x33\xd0\xa2\x41\xd7\x0a\x19\x9b\xa8\xd6\x2a\x8d\xa6\x1e\x66\xac\x8f\x10\xfa\x3c\xfe\x3b\x73\x78\xf7\x73\xbb\xd6\xca\xbf\xe2\x2b\x1b\x65\xa0\xe2\x6b\x0e\x5e\x49\x58\xfa\x4f\xb0\x48\x9c\x46\xda\xcd\x0d\x9e\x6d\xde\xe7\x92\x7a\xfe\xc9\x68\x4c\x52\xe6\xff\x05\x00\x00\xff\xff\x59\xfb\x37\x1f\x4a\x04\x00\x00")

func baseGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_baseGoTempl,
		"base.go.templ",
	)
}

func baseGoTempl() (*asset, error) {
	bytes, err := baseGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.go.templ", size: 1098, mode: os.FileMode(436), modTime: time.Unix(1543405073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\x9b\xc8\x13\x7f\x0d\x9f\x62\xfe\x56\xd5\x3f\x44\x0e\xbe\xbe\xb5\x2e\x27\xf5\x9a\x3e\x44\xad\x92\x2a\x76\xdb\x17\x51\xd4\xae\x61\x8c\xb7\xc1\x2c\xc7\x2e\xf1\xf9\x2c\xbe\xfb\x69\x1f\x30\x0b\x36\x76\xdc\xf6\xda\xeb\xc9\xa8\x95\x61\x99\xf9\xcd\xe3\xce\xec\x84\xc1\x00\x7e\xd3\x17\x9c\x5f\xc1\xe5\xd5\x18\x9e\x9f\x5f\x8c\x61\xfc\xea\x62\x04\x2f\x2e\xde\x3c\x87\x5f\xd7\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa0\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8e\x40\xe0\x3c\x4b\x24\x9a\xd6\x24\x55\xab\xd9\x5d\x3c\x30\x12\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\xde\xee\x26\xe0\x98\xdf\xd3\x10\x07\x61\xc2\x8a\x68\xca\xf2\x39\x11\x94\xa5\x3d\xd7\x21\x0b\xfe\xfe\x09\x49\xb2\x19\x79\x02\x2d\xfe\x84\x4c\x0c\x86\x66\x5e\xfb\x72\x20\xad\x23\x19\xe5\x83\xf6\x9b\x40\x8a\xbd\x37\x78\x9b\x1a\xed\x46\x0c\x59\x3a\xa5\xf1\xa1\x5c\x33\x4c\x32\x94\xfe\xf1\x5d\x19\x84\x4b\x5c\x40\x95\x06\x1c\x08\xa4\xb8\x00\x36\xf9\x8c\xa1\x70\xa7\x45\x1a\xca\xf7\x9e\x16\x04\xfa\x27\x78\xa6\x7e\xfa\x5d\xb1\x80\x13\xcb\x45\x41\x45\xf4\x9a\xa6\x51\x59\xf6\x41\xb0\x8c\x86\x4f\xaf\x2f\x81\x8b\x9c\xa6\xb1\x0f\x27\xcf\x1a\x1e\x86\x95\xeb\xe4\x28\x8a\x3c\x85\xc7\xcd\x37\x2b\xd7\x71\x9a\x68\xc3\x2e\x15\xfa\xae\xe3\x68\x65\x87\x8e\xbc\xf4\x7d\xdf\x05\x80\xb5\x02\x43\xd0\x57\xf5\xdc\x77\x9d\xd2\x2d\x95\x4b\x5a\x1a\x45\x38\xa5\x29\x72\x95\xa6\x5d\x36\x87\x53\xc1\x5d\xb1\xcc\xb0\xcd\xcc\x45\x5e\x84\x42\x5a\x65\x9c\x58\x5d\x0d\x67\xba\x2d\xcb\x76\xf9\xd0\xad\x75\x36\x50\xda\x95\x46\xf9\x91\x20\xe1\x9d\xd4\x0a\xb4\x1b\xb5\xde\xa9\x5c\x60\x53\x75\xcf\x25\x05\x4c\x08\xc7\x08\x98\xde\x7d\xad\x8d\xaf\x54\x52\xd1\xf7\x78\x3b\x40\x7e\x2d\xc1\xf3\x8d\x68\x2b\x68\x26\xbb\x82\x9a\x88\x07\x95\xa9\x49\xc1\x05\xe6\x72\xb1\x0f\xbd\x0e\x4f\xf6\xfa\xc0\x5b\x06\x07\x9a\x63\xeb\x32\xcf\x48\x88\xbe\x31\xfd\x25\x8a\xab\x42\x64\x85\xe0\xc6\x76\xcb\x5c\x66\x5e\x4c\x73\x36\x57\xcb\xe7\xc8\xc3\x9c\x4e\x50\x29\xca\x21\x24\x49\xd2\x6d\x72\x8d\xec\xf9\xe0\xcd\x49\x76\xa3\x0d\xbf\xd5\x3f\x7d\x50\x35\xc7\x97\x7e\xa8\x04\x0d\xcf\x60\x83\x6e\x55\xba\x0e\x47\xae\x5e\xae\xdd\xf2\xf4\xc3\x68\x84\x9c\x53\x96\xba\x0e\xbf\x0f\xe5\xbb\x66\xd1\x09\xe4\x16\x94\x6c\xbe\xeb\x3a\xca\x9a\x8b\xb4\x12\xd1\xa2\x6c\x1a\xa5\xc8\xe4\xb6\x59\x07\x43\x26\x3d\x59\xc8\xe8\x48\x75\x3c\x3b\x4c\xbe\xaf\x76\x40\x65\x80\x32\x49\xe9\x79\x1f\xb6\x60\xbd\xc7\x96\x12\xbe\xeb\xd0\xa9\xa2\xfd\xdf\x19\xa4\x34\x91\x2e\xa8\x72\x21\xa5\x89\x82\x91\xb8\x8e\x2c\x35\x4c\x00\x2f\x72\x04\x3a\xd5\x1d\x82\x72\xc0\x7b\xd9\x62\x18\xe7\x74\x92\xa0\xc2\x4a\x30\xf5\xb4\x0e\x5a\x3b\xee\x4b\xe8\x27\xdb\x80\x59\xce\x95\x73\x7a\x29\xd3\x61\xae\x02\x8f\x11\x2c\xa8\x98\x81\x98\x11\x61\x12\x40\xee\x80\x9e\xaf\x4d\x9c\xb2\x1c\x3e\xf6\x65\x4e\x48\x0b\x73\xd5\xc1\x1a\x22\x6f\x7e\xb9\x0d\xaa\x54\x92\x72\x4d\x50\x6f\x4e\x58\x21\xcc\x8b\xd7\xb8\xbc\x85\x33\xb0\x56\xde\x93\xa4\x40\x2d\xc0\xe8\x69\xd8\xb4\x13\x4c\x6d\xc9\x91\x08\xed\x48\x58\xd0\x24\x81\x50\x2d\x58\x99\x6a\x14\x47\xe0\x45\x96\x25\x14\x23\xc8\x48\x4e\xe6\xbc\x3b\x3b\x2d\x4c\x99\x9e\x5a\x2a\x9c\xb4\x72\xc3\xa2\xba\xb2\x42\x5c\x67\xee\x57\x66\x66\x38\x55\x8d\x5d\x1a\x33\x3c\x5b\xd7\x81\x97\x28\x94\xba\x2f\x2a\x9e\xb1\x21\x5a\xd7\x85\xc3\x6a\x41\xf5\x38\x5e\x66\x58\x96\xc1\x76\xec\x8e\x82\xf1\x60\x5e\x53\x55\xf6\xed\x36\xcb\xa3\x87\x6f\x35\xa7\x12\xf8\xee\xfa\xcd\xd0\xa6\xac\xfd\xa8\xc8\x2e\x99\xa0\x53\x1a\x2a\x89\x4f\xaf\x2f\xf9\x10\x6e\x6e\x4f\x4c\x39\x71\x1d\xc7\x69\xc8\xa8\x1a\x83\xe2\x2c\xfb\x55\x32\x6a\xaf\xaa\xa6\x60\x85\x46\xab\xff\x56\x26\x97\xd7\xbb\xb6\x88\xba\x6a\xb0\x5f\x63\xbd\xc7\x5c\xe6\xc5\x5e\x38\x43\xb7\x0d\xb1\x45\xe2\xbb\x4e\x5a\xb9\xbe\x13\x76\x1d\x9c\x2e\x15\x4d\xe4\x9c\xb0\xee\x35\x9d\x60\x56\x3f\x52\x70\x9b\x6d\xca\x77\x57\xab\x53\x53\x1f\x1e\x09\x96\x49\x28\x2d\xf2\x77\x16\x2d\x83\x51\x38\xc3\x39\x09\xde\xe6\xb2\x75\x0a\x8a\xbc\x2c\x65\x23\x3f\x95\xf5\x6d\xcb\xaa\xc1\x49\x91\xcb\x03\xb7\x84\x6a\xd0\xd4\xac\x26\x33\xe8\x5f\x18\x69\x5e\x29\x3b\x78\x8d\xcb\xb2\x5c\xad\x0c\xbf\x7e\x94\x94\x12\xa9\x57\xaf\x57\x69\x55\x96\x3d\x8d\x88\x09\xc7\x87\xc3\xc8\x7f\x65\x19\x5c\x4d\x3e\x07\xab\xd5\xa3\xc6\x7e\x31\x00\x23\x75\xa2\x51\x7c\x2a\x02\xf5\xa3\x62\xed\xd5\x82\xd3\x7d\xea\xab\x8a\xb9\xee\x34\x55\x90\x6a\xf3\xbd\x3d\x3a\xf7\xd7\x3c\xe7\x44\x90\xd5\xd5\xe4\xf3\x50\xa5\xc5\xa3\xe6\x99\x53\x9f\xb1\x86\x50\x57\x9c\x57\x9a\x6d\xb8\xe6\x97\x85\xcc\x2f\x77\x35\x33\xab\x2d\xca\x6d\x05\xb0\x43\xb7\xce\x94\xdb\x0c\x93\xa2\xef\xf5\xad\x73\x93\xdc\xca\x74\xba\xdc\x65\xbb\xf2\x9b\xef\xb7\xdc\x6c\x87\x5a\x25\x92\x87\x7f\xa8\xb4\x55\x01\x84\x9e\x5d\x07\x7a\x7e\x3b\x34\xbb\x74\x56\x18\x7b\x15\xde\xf0\xbc\x2e\x1a\x7e\x43\xb7\x07\x65\xb9\xc9\x47\xa7\x2d\x7b\x67\x4e\x5b\x4c\x07\x25\xf1\xfe\xac\x3d\x28\x4d\x7f\x70\x5e\x7e\xe3\x98\x6e\xb8\x61\x5b\xd6\xa9\xdb\xfa\xce\x75\xd4\x81\x05\x05\xe6\xaa\x6b\xde\xdc\xb6\x8f\x22\x6f\xab\xf7\xf2\x40\x6c\x11\x9f\x01\xc9\x32\x4c\x23\xaf\x5e\xeb\x83\x9d\xb6\xfe\xc3\xc9\xeb\xb6\xb2\x8f\x23\xb5\xfa\xc6\x3e\xda\xf0\x07\x35\x87\xbd\x8a\xed\xa8\x16\xdd\x75\xe2\x10\x50\xbf\x2b\xd8\xd6\x19\x29\x18\xa1\x58\xc7\x96\x5b\x50\x7e\xeb\x18\x32\x26\xf1\x66\x6e\x8e\x49\xfc\xa5\xe7\x90\xfd\x78\x5f\x76\x10\xe9\xc6\xfd\x92\x93\x48\x37\xda\x43\x8e\x22\xae\x23\x48\xdc\xb1\xa1\xc6\x44\xcd\x96\x8a\x60\x1d\x49\xf9\xd4\xdc\x3e\x63\x12\xfb\xbb\xa9\x6a\x7f\x76\x10\xda\xae\xe9\x20\x69\x5a\xec\x6f\xa6\xc8\x98\xc4\x5c\xd1\xfa\xae\x0b\x76\x01\x03\x3d\x6e\xda\xf3\x4c\x6b\xd6\xd4\x45\xcf\xcc\x52\xef\xb2\xa8\x39\x4b\x15\x6a\x41\x0d\x4f\xf8\x27\xe5\x82\xa6\xb1\x1e\xaa\xba\x67\x27\x0b\xc3\xd3\xec\xd1\xae\x3f\xbe\x74\x8f\x57\x16\xd0\xcf\x33\x5e\x19\x8b\x0f\x99\xaa\x0e\x66\x79\xe0\x30\x65\xf9\xef\x38\x4c\x1d\x87\xa9\xe3\x30\xf5\x6f\x18\xa6\xcc\x66\xff\x0e\x47\xd5\xe3\x04\xf5\x4f\x4c\x50\xf0\x5f\x9a\xa0\xbe\x5f\x32\x1e\xe7\xa6\xe3\xdc\x74\x9c\x9b\x8e\x73\xd3\x4f\x36\x37\xd9\xb3\xcc\xae\xb9\xe9\x1c\x13\x6c\xcc\x4d\x91\x5a\xa8\xbf\x41\x75\x8f\x4b\x16\xab\xe7\x83\xf7\x4d\x27\x9c\x7d\x9f\x36\xd7\x92\xf5\x7c\x50\x6e\xf8\xc7\xfe\xe6\x6c\x0f\x08\xd2\x5b\x1f\x6d\x47\xd9\x56\xec\x72\xd4\x07\x42\xc5\xbb\x54\xd0\x44\x91\x6a\xae\xe8\x50\x97\x6d\x05\xf9\xee\xce\xfb\xea\xef\xc2\x60\xf9\x6f\x9b\x49\xcf\xd8\x3c\x93\xbf\x9d\x0e\xfd\x3b\x00\x00\xff\xff\xd3\x02\x8f\xa7\xac\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9388, mode: os.FileMode(436), modTime: time.Unix(1543403773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\xb6\xb2\x7f\x26\x3f\x05\xca\xdb\xa6\x64\xaa\x90\xcd\xdb\x1d\xcf\xf5\xed\xb8\xb6\xda\x7a\xea\xd8\x3e\xb6\xd3\x3c\x64\x32\x29\x4c\xae\x24\xc6\x24\xc0\x02\x90\x15\x57\xd5\x77\x3f\xb3\x58\x80\x22\x65\x49\x96\x9a\x4c\xcf\x99\x73\xea\x17\xf1\x0f\xb0\xd8\xdd\xdf\x6f\x17\xbb\xa0\xb3\x8c\xfd\x3f\xfd\xb1\x93\x0b\x76\x7e\x71\xc3\x86\x27\xa7\x37\xec\xe6\xa7\xd3\x6b\xf6\xc3\xe9\xd9\x90\xfd\x5f\xfb\x17\x66\x19\xbb\x99\x94\x9a\x8d\xca\x0a\x58\xa9\x19\x9f\x1a\x39\x06\x01\x8a\x1b\x28\xd8\x7d\xc9\xd9\xaf\x7c\xa6\x5f\xc8\x06\x9f\x48\xc5\xfc\xbb\x5f\x71\xe6\xe9\x88\x3d\xc8\xe9\xd7\x05\xab\xca\x3b\x60\x66\x02\x2c\x9f\x70\x31\x06\xc6\xc5\x83\x99\x94\x62\xcc\xf8\xad\x9c\x1a\x66\xda\x15\x6a\x7e\x07\x0c\x8a\xd2\x68\x66\xa4\x9d\x91\x1a\xa8\x9b\x0a\xa5\x91\x0a\xc2\x3e\x6d\xee\xc6\x59\x2e\x0b\x18\x83\xc8\xb8\xd6\x60\x34\x2b\x4a\x05\xb9\x91\xea\x21\x0d\xc3\x86\xe7\x77\x7c\x0c\x6c\x3e\x4f\xaf\x1b\xc8\xd3\x2b\xd0\x72\xaa\x72\x48\xcf\x79\x0d\x8b\x45\x18\x96\x75\x23\x95\x61\x71\x18\x44\xb9\x14\x06\x3e\x9a\x28\x0c\xe6\xf3\x17\xac\x1c\x31\x9a\x72\xaa\x8f\xa7\xda\xc8\xba\xfc\x1d\x8a\xc5\x22\x0c\x58\x0d\x86\xdf\xbf\x64\xd1\xdd\xff\xea\xb4\x94\x19\x6f\xca\x9a\xe7\x93\x52\x80\x7a\xc8\x50\x1d\xde\x94\x3a\xc3\x41\xd9\xfd\xcb\x28\x0c\xa2\x71\x69\x26\xd3\xdb\x34\x97\x75\xc6\x67\xba\xe2\xb7\x1a\x7f\x5f\x68\x50\xf7\x65\x0e\xad\xc7\xec\xdc\x09\x54\x0d\x28\x8d\xd3\x14\x8c\x2a\xc8\xbd\x3a\x20\x70\xf1\x3d\xa5\xe5\x52\x8c\xca\x71\x14\x32\xb6\xd7\xb4\xdf\xa6\x30\x85\x9a\x0b\x3e\x06\x85\x93\x7b\xee\xf8\x07\xbe\x5c\x2c\x42\xc6\x72\xa9\xa0\xef\x87\x0c\x1f\x59\xab\xfb\x2b\x96\x5c\xe4\xb2\x42\x91\x99\x36\x2a\xe7\x1a\xec\x08\x6d\x54\x29\xc6\x68\x2c\x9f\xe9\xbc\x2a\x41\x98\xfd\x14\xa5\x39\xee\x47\x83\xc9\xee\x41\xe9\x52\x0a\x28\x32\xf3\xd0\x40\x91\xad\xce\x4a\xf9\x4c\x67\xf7\x2f\x79\xd5\x4c\xf8\xde\xd8\x58\xb7\xf4\xe0\xd8\x6f\xbe\xbf\xc1\x75\x9d\xcf\x48\xf3\x17\x63\x99\x19\x29\x2b\x9d\xe5\x3c\x9f\x40\x14\x5a\x87\xfc\xe2\xd4\xdc\xcf\x25\x96\x7c\x4f\x99\xdd\x03\xd4\xb3\x9b\x9b\x52\x0a\x9d\x5e\x52\xc4\x58\x84\x23\x1f\x36\x9b\xc6\xf4\xbc\x91\x84\x18\x9c\x17\x3e\x01\x28\x68\x14\x68\x04\x86\x71\x86\xb1\xa5\x64\x55\x81\x62\xf2\xf6\x03\xe4\x86\x8d\x64\x7b\xa9\x8d\x54\xc0\x72\xbb\x06\x53\x2e\x42\x75\x88\x10\x2e\xc5\x69\xa3\xa6\xb9\x61\xf3\x30\x20\x56\x33\xfa\xa3\x9b\xf4\xd8\xfe\x84\x81\x91\x4d\x99\x1f\x5d\x9d\xdb\x77\xc4\xaf\x30\xb0\xc0\xbd\x22\x3e\xb3\xe7\x5d\x76\x13\x9b\xdd\xab\x70\x61\x0d\x38\x87\x59\xbb\x68\xae\x80\x1b\xe8\x6a\x8f\x6a\xcf\xb8\xc9\x6d\xd2\xda\xaa\xbf\x9b\x5c\x84\xa3\xa9\xc8\xbb\x52\x63\x67\x40\x4f\xf5\x01\xdb\x51\xcb\x84\x3d\x6f\xd5\x9b\xaf\x40\xe9\x63\x93\x2c\xce\x8d\xaa\xd8\xc1\x21\x09\x4e\xcf\x61\xe6\x16\x1e\xf8\x95\x8f\xde\x5c\x1f\xfb\xd0\x19\xb0\x97\xdf\x26\x4b\xff\x0d\xd8\xfb\x76\x2a\xca\x49\xaf\x60\x5c\x6a\x03\x2a\x8e\x36\xa4\xd2\x28\xe9\x3b\x3a\x3d\x2a\x8a\x78\x29\xae\x67\xcf\x4f\x5c\x14\x15\xa8\x1f\xa6\x22\x8f\xad\xce\xaf\x9b\x82\x1b\x50\x49\xd2\x4f\x76\x0a\xcc\x54\x09\xf6\xcc\x1b\x3c\x0f\x03\x87\xfe\x41\x0f\xfe\x41\x18\x6c\x70\x44\x6b\xd0\x01\x6b\x75\x71\x83\x5d\x08\xf7\x94\x3e\xe8\xa1\x30\x08\x83\x85\x23\xc5\xb5\xe1\xca\xbc\x41\xdc\x09\x7d\xd0\x96\x09\xa5\xd0\x86\x0b\x04\x5b\x8e\xd8\x05\xb1\xe1\x7a\x3d\x1b\xb8\x28\x18\xcf\x8d\x66\xd2\x6e\x5c\x35\xd1\x22\xce\x97\x70\x26\x9d\x55\xe2\xdc\x7c\x64\x6e\x43\x42\x86\xe0\xef\x80\x09\x5e\x83\x6e\x78\x0e\x8e\xda\x09\x32\xc0\x2f\xe1\x9c\xaa\x11\x37\x9b\x47\x5a\x84\x86\xf7\x20\x4c\xc7\xe7\x1a\xfd\x78\x54\x14\x78\x6d\x1d\x99\xa7\x52\x1c\x15\x05\x7a\x86\x90\xa0\x37\xf8\x98\xee\xf1\xcd\x09\x54\xd0\x7d\x43\xf7\xd6\x47\x61\x80\x99\x06\x17\x6e\x33\x0e\xd2\xed\x31\x55\x2e\xab\xa9\xe2\xd5\x62\x11\x75\x6c\x19\xb0\x55\x0b\x06\x2c\x4f\xd7\x50\x34\xbd\x1a\x5e\xdf\xd0\x5d\x8c\x4c\xc1\xb5\x52\xf2\xd6\xb3\x4e\xbe\x4c\xfd\xaa\x3f\x97\x88\xf0\x7c\x31\x60\xb9\xf9\x98\x9e\x48\x01\x38\x6d\x11\x86\x6b\xa9\x92\x65\xac\x4b\x45\x36\x2b\xab\x8a\x19\xee\xca\x95\x1a\xb4\xe6\x63\x44\x5d\xc9\xda\x3e\xb1\x44\xb1\xa8\x36\x4a\xe6\xa0\x75\x07\xd5\xae\xa0\x0d\xd1\x5e\xeb\xf1\x4a\x90\xbf\xa2\x25\xbe\x97\xc5\x43\xc2\x40\x29\x8a\xef\x4a\x8e\xc7\xe4\x5a\x27\xe0\xcc\x3e\x08\x83\x7b\xae\xac\x0f\x1f\xb3\x22\x0c\xca\x11\xca\x4f\xad\x06\xfc\xb6\x02\x14\x14\xe0\x30\x76\x68\x5f\x78\x3c\x30\x72\xdd\x1b\x12\x40\xaf\xcf\xfd\x7d\x18\x2c\x18\x54\x9a\xe6\xd3\x5e\x75\x8d\xa9\xc2\xe6\x86\x76\xcf\x46\xac\x7f\x90\x8a\x2c\x73\xe6\x12\x56\xf6\x32\x09\x83\x96\xa3\x7a\x80\x96\x59\x6b\xbc\xb4\x16\x2e\xe2\x06\x25\x93\x38\x8a\x92\xf4\xac\xd4\x26\xa6\x62\xcb\x5e\x5f\x34\x76\xf7\x99\x2f\x50\x62\x39\xb2\x92\xbe\x38\x64\xa2\xac\xac\x7e\xce\x55\xe9\x9b\xd2\x4c\x86\xe8\xbe\x18\x94\x4a\x52\xba\x8c\xc8\xa1\x63\x30\x06\x13\xf7\x66\x62\xa2\x6c\x9f\x77\x40\xa9\x30\x08\x30\x47\x60\xac\xbf\x5f\x12\x15\x0d\x50\xb6\x7e\x6d\x0d\x4b\x4f\x0d\xd4\x9a\x14\x29\x47\xed\xf3\xf4\xda\x70\x33\xd5\xf8\x93\xdf\x9d\x9e\xb0\x43\xf2\xf0\x25\x57\x1a\x0a\x87\xf8\xdb\x88\xde\x16\xd1\x3b\x9a\xef\xa1\x52\xdd\x0c\xdb\xbe\xf0\x48\xf5\xde\x3a\xb8\x48\xdb\x05\xc5\x64\x39\xb2\xd4\x40\x1f\x45\x11\x7b\xf6\xac\x43\x14\x7a\x84\x8b\x71\x21\xa4\xa1\x6d\x1d\xad\xaa\x79\xf3\x96\x58\xf4\x8e\x7e\xac\x42\x4e\xc1\x93\xe8\x60\xab\xf6\x83\xe5\x58\xd4\x69\xcb\x68\xfb\xda\x8d\xf7\x18\xdc\x3c\x34\x1b\xa6\xf4\x46\xd8\x59\x0b\x62\xc0\x96\xb1\xe4\xf7\xe8\x1d\x7a\x3c\xba\xba\x38\x3b\xfb\xfe\xe8\xf8\xe7\xf7\xc7\x17\xaf\x2e\xcf\x86\x37\x43\xb2\x3d\x90\xb7\x1f\x5a\x42\x16\x36\x9d\x59\xed\xda\x7d\x72\x25\xbe\x06\x5b\xad\x4f\x1c\xf4\xab\xb4\xec\xb3\xc9\xaa\x1e\xf8\x20\x81\x5c\xaa\x02\xf7\x4a\x42\x01\x0a\x9b\xaa\x47\xb1\x55\xac\x03\xcd\xc0\x15\xdb\xa9\x7d\x8f\x7e\x78\xc3\x95\x28\xc5\x78\xc0\x5c\x41\x9d\xde\xc8\x63\x5e\x43\x15\xbb\xa2\x3a\xbd\x91\x67\x72\x06\x2a\xde\xc1\x47\x49\xb2\xd6\xb2\xfe\xb0\x2b\xe0\x5a\x0a\x32\xd3\x65\x85\x3d\x10\x38\x19\xa2\xdb\xb7\xf9\x7f\x6a\xd3\x25\x4d\xfa\x73\x00\xec\x60\xc4\x4e\x83\xba\x96\xfe\x97\x00\x1a\xa0\x8d\x87\xac\x14\xb9\x82\x1a\x84\xb9\x92\x55\x75\xcb\xf3\xbb\x63\x39\x15\x66\x13\x1a\x7b\xf8\xa7\xb3\x8d\xfc\x0d\x7a\x07\xf4\x73\xa9\x6a\x5e\xfd\x8b\x82\x38\xa4\x6d\xc2\x19\x26\xca\x2a\x5c\x84\x9d\xea\x7b\x4d\x7d\x6a\xab\x44\x34\x8b\x95\xc2\x80\x1a\xf1\x1c\xe6\x0b\x5b\x84\xda\xcd\x43\xde\x7e\x48\xe3\xe7\x9b\x4b\xb1\x24\x3d\x01\x68\x8e\x65\xf3\x10\x27\x61\xdb\xba\x08\x69\xd6\x77\xa2\x47\x45\x61\xbb\xd0\x72\xc4\xb4\xdf\x47\xfb\xe6\xd8\xd4\x12\xb1\x3f\xfe\xd8\x3a\x60\x4d\xee\xb1\x45\xef\xc8\xa0\xd2\xb6\x2f\x4a\x3d\xf7\x6c\xed\xe9\x3b\x85\xc4\x8e\x93\x53\xd3\x4c\xcd\xb2\x70\x19\x99\xf4\xd8\x76\x76\xb4\x57\xd0\xa0\x55\xc6\xb8\xee\x24\xed\x15\x6d\x6b\x4b\x93\x91\xaf\x4d\x6c\xbb\xb8\xb6\x38\xa1\x9a\x88\x7d\xfd\x95\xfe\x3a\x1a\x30\x6d\xef\x13\xb7\x04\xa1\x67\x6f\x16\xe1\xba\x35\x4f\xc5\x48\x8e\xe2\x88\x17\x05\x14\x5b\x45\xb3\x59\x69\x26\x4c\xbb\x42\xa5\xb7\xd8\xc0\x55\x96\xf1\x73\x72\x86\x2b\x67\x8a\x24\xd9\xb6\xe4\x7d\x09\x33\xc6\x0d\x9b\x18\xd3\xe8\x83\x2c\xcb\xa5\xd0\xb2\x82\x94\xcf\x74\xca\x6b\xfe\xbb\x14\xf6\x48\x23\xaf\xe4\xb4\x18\x61\x20\x20\xec\xd9\x44\xd6\xf0\xdd\xff\x64\x56\x8f\xac\x00\xc3\xcb\xea\x3b\x52\xaa\x38\xfc\x4a\x47\x5b\x54\x09\x83\xe0\x3d\xc1\xb4\x9a\x58\x96\xf0\x7a\x73\x96\x45\xd3\x46\x81\x03\x16\x1d\x5f\x0d\x8f\x6e\x86\xef\x4f\xcf\xdf\x5f\x5e\x5d\xfc\x78\x35\xbc\xbe\x8e\x06\x2c\x8a\x36\xd4\x9f\xbb\xa0\xed\xc1\xb6\xfa\x21\xd8\x9a\xc2\x97\x02\x12\x31\xa4\xde\xb4\xd2\xb6\x7d\xdd\x70\xfe\x62\x23\xa3\x6b\x56\xaf\x6f\xde\x14\xbb\xd4\x90\xc4\xb2\x2a\x2e\x30\x31\x09\x98\x5d\xac\x89\x64\x29\x6d\x28\xdb\x41\xbb\x47\x73\x20\xec\x34\x92\xb9\x4f\x12\xb0\x09\x60\xbf\xe0\x45\x4f\x53\x26\x12\x32\xb1\x3e\x7b\x3a\x97\x90\xed\x3e\x9d\xb8\x53\xd6\xf4\x54\x5b\xb0\x8f\x65\xdd\x60\xf1\x17\xcb\x0d\x9a\x0c\xd8\x88\x57\x1a\x12\x2c\xa2\xbf\x70\xe7\xb2\xd6\x8c\xe1\x6f\x53\x5e\xe1\x34\x6f\x23\x26\xf5\xc5\x62\x80\x36\xf5\x1f\x25\xdb\xb2\x8e\x94\x3b\xa5\x9d\xd7\x9e\xd4\xf9\x9d\x33\xfd\xb3\x24\x9e\x96\x8b\x4f\x67\x07\x01\x33\xd6\x70\xc5\x6b\xcd\xbe\xfa\xe6\xde\x76\xbf\xb2\x2a\xf0\x3a\xb2\x36\x53\x74\x09\x89\x26\xed\x9b\xa1\x28\x64\x77\xc9\x51\x4e\x03\x97\xa2\xda\x65\xff\x43\x72\x94\xf4\xf6\xb8\x8b\x27\xb3\xd4\xeb\xcb\x93\xbf\x3c\x4b\xd1\x47\x81\x27\xd2\x94\x0f\xba\x15\xa6\x23\x75\x77\x48\x57\x74\xbe\xf4\x97\x55\x1b\xb4\x1c\x5a\xb3\x4b\x61\x10\x74\xc2\xf2\xa4\xd3\x39\x26\xe1\x1a\x9f\xef\x15\x8d\xb6\x0f\xdd\xa3\x0c\xf0\x95\x29\x15\x73\x1b\x68\x4e\xcd\xed\xf6\xd8\xea\xca\xdc\x01\x5c\xef\xaf\x6d\xdb\x50\xb8\xed\x43\x9a\x05\x7d\x6b\xc7\xb1\x7a\x66\x66\x4f\x33\x28\x0e\xd6\x9d\x85\x3e\x7d\x66\xf6\x09\x47\x58\xfe\xb4\x65\xd7\x03\xac\x65\x97\x94\xfe\x08\x26\xa6\x9e\xc6\x1d\x66\xfd\x08\xbd\xb3\xac\xc7\x84\xf9\x6c\x27\x59\xdd\xa6\x85\x6a\x7d\x1a\x85\x51\x61\x0f\xb1\xfc\xac\xee\x56\xde\x1d\xe4\x84\x77\xc1\xe9\x1c\x3d\x6d\x18\xf1\xcd\xcb\x30\x5c\xa6\xb9\xdd\x1d\xe5\x0a\x94\xae\xf4\x3f\xeb\x9e\x36\x73\x79\x61\x6b\xdc\xd1\xef\x7c\x88\x8f\x6b\x1a\xd2\xbd\x58\x38\x68\x0b\xe8\xce\x3d\xd6\x32\xfe\x56\xd9\x0e\xac\xe5\xec\xb6\x04\x36\x20\x46\x27\x7f\x53\x7a\x0d\xa5\x45\x59\x0d\x3e\x89\xd7\xeb\x2b\x4e\x07\xd7\x2e\x83\xa9\x97\xb6\xd1\x80\x17\xeb\xa7\xb4\xe7\xbe\x9e\x17\x54\xf2\x6e\x2a\x40\x75\xbf\xdc\xb4\x9b\x47\x67\x37\x72\x0c\xec\x2e\xe4\x77\x7a\x2a\x0b\x74\xaf\x5e\x44\x50\xe8\x71\xfc\xe9\x47\xe6\x6e\x81\xc8\x1f\x1d\xd8\x4c\x4f\x87\xe0\x5f\x36\x4a\x36\xb8\x28\xe1\x76\xe1\x2a\x94\x7c\x02\x35\x4f\x2f\x95\x6c\x40\x99\x12\x34\xb3\x9f\xdb\xdc\x96\x60\xe7\xa4\x37\x50\x37\x15\x37\xfe\x5f\x2b\x82\xf9\x9c\x9e\xff\x0c\x0f\xc8\x7f\xcb\x68\xef\xab\xe5\xd8\x38\xf2\xe3\xdc\x33\xb0\x5f\x94\xfc\xc0\x13\x6e\xf8\xfc\xe2\xf6\xc3\xc1\x8a\xa3\x8e\xdd\x97\x43\x72\xe3\xa2\xfb\x5d\xc2\x42\xe6\xf4\xf6\xb2\xaf\xed\x07\x67\xab\x09\x3b\x64\x3d\xcd\xfc\x17\x44\xb7\x43\xee\x21\xc6\x79\xf1\xed\x23\x0b\xec\x80\xe8\xdd\xca\xb7\xc9\xce\xf5\xe2\xdf\x3b\xa7\xf6\xe3\x71\x3f\x8a\x93\x4d\xfa\x41\xe4\x47\x45\x51\x62\x16\xe1\x95\x8f\x35\xbd\x96\xf5\x7b\xd1\x19\x6b\x20\x6f\x03\x2e\xd2\x35\xc1\xf3\xb9\xb3\x1d\xf4\x49\xd3\xdd\x1c\x1e\x7f\x22\xf8\xa4\xbd\xe1\xef\xec\xff\x99\xb2\xff\x96\x14\xe9\xd2\xa3\x8b\x9a\x5d\x8a\xf5\xb5\x2b\x2c\xe7\xbf\xe1\xa5\x79\x2d\x4c\x59\x59\x11\x24\xad\xa0\xdd\xa5\xc7\x1e\x9a\xec\x99\xb3\x9d\xdb\xab\x2c\xd2\x6c\x5b\x5b\xc3\xd0\x79\x1d\x72\xfc\x85\x1c\xe8\x1c\x9b\x11\x0b\xfc\x79\xda\xae\x3c\x78\x54\x80\xb9\xef\xa9\xeb\x77\x6c\xec\x26\x96\xed\xc3\x1a\xff\xa5\xd7\xf4\x8f\x4e\xb8\xb5\x68\x7f\x79\x70\xc8\xde\xfa\x8f\x97\x8b\xf9\xdc\xa5\xcf\xce\x6e\xd5\xfd\x8a\xbb\x93\xe8\xb6\x79\x84\xdf\x96\xb3\xed\xb9\x0e\x8b\x86\x1f\x0d\x28\x41\x1e\x8a\x68\xe8\x97\x6a\xa5\xbb\xea\x6c\x62\x74\x72\xdc\x9d\xe4\xd6\x89\x3b\x8d\xe6\xda\x53\xca\xa8\x2b\xb8\x2b\xc0\xee\x7d\xf3\x79\x5c\x8a\x02\x3e\x76\xf4\xbb\x94\xca\x68\xf6\x6d\x62\x2f\x16\x88\x47\xeb\xa2\x43\xc6\x9b\x06\x44\x11\xfb\x27\x28\x60\x55\xed\x5e\x33\xd7\xbf\xdc\x15\x93\x56\xe2\xd6\x71\x87\xcc\xab\xe1\xd1\x7a\x1a\x78\xa2\xf0\x2b\xde\xe0\x32\xe4\xba\x1a\x6f\x3e\x13\xf8\x3d\xf1\xeb\x30\xc5\x1a\x63\xe3\xf7\xf2\xce\x72\xa5\x81\x1a\xc7\x2d\xe7\xdb\x99\x76\x73\x47\x44\xf1\x3d\xd5\x14\xd1\x01\x6b\x1f\xfc\xc2\xab\xa9\xc5\x75\xb5\x04\xd8\x89\x5d\xad\xf2\x4f\x72\x6a\xbd\x5d\x89\xff\x17\x3b\xeb\xd1\x96\x2b\xcb\x67\xbb\xb0\x65\x77\xf4\xb6\x92\xa4\x33\xd2\x6f\x7e\xa8\x41\x4b\x94\xdd\x6b\xa2\x5e\xee\x5a\xa9\x8a\x76\xc8\x55\xfe\x1c\xf3\xd1\x77\xb2\x7f\x06\x00\x00\xff\xff\x63\x45\xf4\x5b\x44\x2d\x00\x00")

func operatorGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_operatorGoTempl,
		"operator.go.templ",
	)
}

func operatorGoTempl() (*asset, error) {
	bytes, err := operatorGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "operator.go.templ", size: 11588, mode: os.FileMode(436), modTime: time.Unix(1543404126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\xdb\x36\x10\x3d\x8b\xbf\x62\x2a\x04\xa8\x05\x78\x45\xec\xad\x08\x9a\x1e\xda\x6c\x12\x23\xc1\x6e\x91\x35\x90\x63\x43\x4b\x63\x69\x60\x8a\x24\xc8\x91\x1d\x43\xd0\x7f\x2f\x48\x7d\x04\xd8\x22\xdd\x8d\x2e\x94\x46\x9c\xf7\xe6\x3d\xce\x50\x4a\xf8\x63\x7a\xe0\xed\x03\xdc\x3f\xec\xe1\xee\xed\x6e\x0f\xfb\x0f\xbb\x47\x78\xb7\xfb\x74\x07\xbf\xaf\x8f\x90\x12\xf6\x2d\x05\x38\x92\x46\xa0\x00\xaa\x67\xdb\xa0\x41\xaf\x18\x6b\x38\x93\x82\xaf\xea\x12\x6e\xac\x8b\x11\xeb\x6f\x2a\x5b\x63\x83\x06\x9c\xb7\x15\x86\xf0\x35\x02\xec\x8e\x70\xb5\xfd\xaf\x35\x68\x3a\x21\x70\x8b\x50\xb5\xca\x34\x08\xca\x5c\xb9\x25\xd3\x80\x3a\xd8\x9e\x81\x57\xa2\x4e\x9d\x10\xb0\x26\x0e\xc0\x36\x65\x94\x8c\x9d\xd3\x11\x6d\xaa\xc4\xa4\xa8\x3b\x35\x72\x66\x94\x2a\x04\xe4\x00\x35\x79\xac\xd8\xfa\x6b\x29\x84\x53\xd5\x49\x35\x08\x2d\x6a\x87\x3e\x08\x41\x9d\xb3\x9e\x61\x23\x32\x75\x09\x95\x26\x34\x0c\x79\x43\xdc\xf6\x87\xb2\xb2\x9d\x54\x97\xa0\xd5\x21\xc4\xf5\x26\xa0\x3f\x53\x85\xab\x34\x99\xc8\x52\xce\xbc\x04\x64\x79\x46\x1f\xc8\x1a\xac\x25\x5f\x1d\xd6\xf2\x69\x56\xa9\x2e\x41\x9e\x6f\x95\x76\xad\xba\xcd\x45\xf6\x73\x6c\xd6\x1c\xa9\xc9\x45\xd6\x21\xab\xf3\x2d\xe4\xa7\xdf\x42\x49\x56\x2a\x47\x9d\xaa\x5a\x32\xe8\xaf\x69\xa3\x72\x14\x64\xdc\x24\xcf\xb7\xb9\x28\x44\xf4\xe9\x1e\x2f\xf0\x85\xb4\x06\x8f\xdc\x7b\xb3\x98\x10\x0d\x3d\x20\xb8\x68\x57\x0d\x64\x66\x7f\x93\xbd\x8a\x31\x88\x63\x6f\xaa\x98\xbc\x29\xe0\xc3\x9c\x32\x88\x6c\x06\x99\x23\x83\xc8\x00\x3e\xf6\x07\xf4\x06\x19\xc3\x67\x0c\xb6\xf7\x15\xde\xab\x0e\x5f\xff\x20\xbe\x15\x59\x36\x0c\x37\xe0\xd3\xc9\xbf\x22\x53\xe3\xb7\x2d\xbc\x42\x8d\x5d\x3c\x85\xd7\x6f\xa0\xdc\x31\x76\x01\xc6\x51\x64\xd9\x7b\xe4\x61\x58\x7e\x96\x8f\x0e\xab\xf2\x23\x99\x7a\x1c\xff\xbc\x4e\x24\xcf\x6c\x58\xd8\x30\x86\x44\x36\x8a\x31\x79\xb2\x08\xaa\xf1\x48\x06\x03\x28\xad\x93\xfa\x29\x0e\x51\x3a\x93\x35\x01\xb8\x55\x0c\xca\x23\xe0\x37\x67\xa3\x51\xff\xb1\x29\x1e\xf7\x8a\x17\xd8\xf7\x15\xc3\x20\x7e\xe4\x4a\x82\xde\x04\xf6\x64\x9a\x02\x96\x17\xf1\x72\x47\x9e\xd1\x3b\xe1\x4f\xfd\x52\xfe\x95\x96\x2d\x4c\x2c\xcb\x5a\xc0\x86\x0c\xa3\x3f\xaa\x0a\x87\x71\x0b\xe8\xbd\xf5\x73\x09\x93\x4d\xa3\x10\x2f\xad\x47\xca\xe7\x4e\x00\x2e\xb1\xf7\x8e\x64\xea\x64\x9c\x9f\xcd\x80\xc3\x15\x8c\xea\x70\x6a\xb3\x67\x30\x66\x41\xf0\x44\x57\xcc\x5f\xc5\xc5\x8f\xe0\x54\x85\xff\x2b\x33\xb6\xb0\xb6\x4d\x83\x3e\xea\x98\xf1\x3e\xa5\x80\xc8\xa6\x69\x7e\x44\xde\xc2\x3f\xf1\xf7\x7a\x37\x94\xf7\x78\x79\x67\xfd\xc4\xbb\xb8\xfb\xf9\xee\x71\x3f\x45\x8a\x38\x16\x93\xac\xc4\x93\xa0\x17\xac\xf2\xa9\xb0\xbf\x75\xef\x95\x8e\xb2\xc6\x71\xb3\x56\x5d\x94\xef\x91\xd3\xe7\x16\xa6\x29\x8f\x81\x07\x97\xda\x70\x18\x0b\x91\xd1\x31\x61\xff\xf2\x06\x0c\xe9\xa8\x63\x16\x52\x7e\x21\x6e\xef\xa2\xba\x0d\x7a\x5f\x94\xd3\x6b\x9e\xf4\x42\x83\xcc\xf1\x62\x0d\xb1\x97\xad\xa3\x2a\x2f\x44\xb6\x0c\x71\x9e\xa7\x72\xe3\x58\xac\x83\xfd\x5d\x88\x21\x2d\x46\xf1\xbd\x2b\xfe\x0d\x00\x00\xff\xff\x2d\x5b\xdf\x7e\x2e\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1582, mode: os.FileMode(436), modTime: time.Unix(1543403903, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(436), modTime: time.Unix(1538540481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-service-operator.yaml.templ": awsServiceOperatorYamlTempl,
	"base.go.templ": baseGoTempl,
	"cft.go.templ": cftGoTempl,
	"operator.go.templ": operatorGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"aws-service-operator.yaml.templ": &bintree{awsServiceOperatorYamlTempl, map[string]*bintree{}},
	"base.go.templ": &bintree{baseGoTempl, map[string]*bintree{}},
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"operator.go.templ": &bintree{operatorGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

