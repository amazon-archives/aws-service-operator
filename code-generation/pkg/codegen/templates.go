// Code generated by go-bindata.
// sources:
// assets/aws-service-operator.yaml.templ
// assets/base.go.templ
// assets/cft.go.templ
// assets/operator.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsServiceOperatorYamlTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x76\x03\x14\x28\x2a\x39\xee\xa9\x10\x76\x17\xd8\xda\x6e\x6a\x64\xeb\x5d\xd8\x4e\xaf\xc9\x98\x1a\xcb\xac\x29\x92\x20\x29\x3b\x8e\xe0\xff\x5e\x50\x5f\xfe\xf6\x2e\xda\x44\x27\x71\xf4\x38\xef\xcd\xe3\x70\x74\x0b\x0f\xd5\x03\xfd\x67\x18\x3d\x4f\x61\xd0\x1f\x4e\x61\xfa\xe7\x70\x02\x7f\x0c\x9f\x06\x70\xd7\x3e\xc1\x2d\x4c\x17\xdc\xc2\x9c\x0b\x02\x6e\x01\x73\xa7\x52\x92\x64\xd0\x51\x02\x2b\x8e\xf0\x05\xd7\x36\x54\xda\x47\x94\x81\xe6\xdb\x97\xe0\x16\x86\x73\xd8\xa8\xfc\xa7\x04\x04\x5f\x12\xb8\x05\x01\x5b\xa0\x4c\x09\x50\x6e\xdc\x82\xcb\x14\x70\xa6\x72\x07\xae\x25\xc8\x70\x49\x40\x09\x77\x16\x9c\x2a\x77\x44\x8e\x32\x2d\x82\xdb\x5a\x80\x2c\x83\x7a\x99\x76\x98\x4a\x28\x25\xd9\x41\x6b\xc9\x59\x48\xb8\x21\xe6\x94\xd9\x44\x41\x80\x9a\xff\x4d\xc6\x72\x25\x63\x58\x75\x83\x25\x97\x49\x0c\x4f\xdc\xba\x80\x3b\xca\x6c\x1c\x84\x50\xc5\x46\x98\x91\xd5\xc8\x28\x00\x38\xda\x04\x90\x91\xc3\x04\x1d\xc6\x01\x00\x80\xc4\x8c\x62\xf0\xa5\x5a\x32\x2b\xce\xa8\x2d\x39\x28\x0a\x53\x56\xf5\x8e\xcb\x84\xbe\xfe\x02\xef\x48\x50\x46\xd2\x41\x7c\x0f\xd1\xd0\x33\x6e\xb7\x41\x78\x40\x80\x9a\xd3\x57\x47\xd2\xaf\x6c\xb4\xfc\xcd\x46\x5c\x75\x56\xdd\x19\x39\xf4\xd4\x95\xba\x5e\x6e\x9d\xca\xc6\x64\x55\x6e\x18\xf5\x69\xce\x25\x77\x5c\xc9\x0b\xda\x8a\xa2\x21\x8e\x26\x9a\x58\xd4\x6c\x8c\x5e\x44\x6e\x50\x6c\xb7\xd1\xb1\xf2\x08\xd7\x36\x00\xb0\x9a\x58\x95\x28\x35\x2a\xd7\x31\x5c\xc0\x55\x44\xb6\x82\x36\x22\x8f\x59\x3f\x72\x99\x6c\xb7\x35\x44\x70\xeb\x3e\x5e\x81\x95\x67\x52\x41\x75\x29\xf2\x0d\x55\xd4\x78\xbb\x50\xc6\x8d\xf6\xf5\x14\x45\x08\x67\x0e\xc2\x9f\xc2\x85\x94\x13\x9f\xa3\xac\xa9\x4d\x1b\x36\x02\x22\x9f\xbb\x0d\xfb\xdc\xb4\x57\x98\xe5\x32\xcd\x05\x9a\xb7\xea\xb5\x4c\xe9\x6b\x47\x34\xf1\xdf\x6b\xec\x6a\xd7\x85\x28\xf4\x02\xbb\x41\x51\x54\xdc\x4d\xdb\xf6\x44\x6e\x1d\x99\xb1\x12\xc7\x8d\x6b\x66\xc8\x22\xcc\xdd\x42\x19\xfe\x0d\x7d\xb3\x9c\x36\xd7\x9b\xfb\x1a\xc0\xe4\xa2\xf2\xb7\xec\xde\x0f\xbe\x3b\x6a\xbb\x43\xb8\xb9\x29\x5f\x4c\x5d\x42\x1b\xb7\xc4\x0c\x39\x5b\xaf\xb4\x4a\x9a\x57\xa6\xe4\x9c\xa7\x19\x6a\xdb\x22\x4b\xc2\x66\x49\x2b\x92\xf5\xbe\x15\x99\x59\x9b\x30\x25\x57\xbf\x89\xa6\x5d\x42\x58\xa3\x63\x8b\x26\xb1\x21\x74\x54\x2f\x12\x12\xd4\x2e\x72\x9d\xec\xbe\xe8\x7a\xcb\x99\x5a\xce\x5d\xc7\xf3\xd5\xb1\xf2\x4e\x36\xe1\xa4\xbd\x93\xdf\x4f\xf7\x19\x79\x17\xef\xe3\x89\xbc\x9b\x9f\x6f\x4e\x85\xf8\x60\xdb\x3b\x93\x2a\xd7\x23\x63\x2a\x97\xee\x7f\xcd\xbd\x76\x22\xf8\x09\x7a\x01\x73\xae\x67\x7f\xe7\x32\xe1\x32\xfd\xc1\xad\xab\x04\x8d\x69\x5e\x21\x1b\x47\xaf\xb0\x04\xbb\x91\x76\x78\xbd\x5e\xe1\xb1\xf9\xec\x1f\x62\xae\xbe\x25\x17\x3c\xfe\x7e\x36\xf6\x49\x0b\xb5\xf1\x13\xe4\xc8\x3e\xd4\xda\xfe\x37\xa7\x5e\x67\xdf\xff\x45\x18\xd2\x82\x33\xb4\x31\x74\xcb\x75\xf9\x7b\x46\x47\xcd\x14\x3e\x24\x2e\xcd\x97\x52\xb9\xd2\x6a\xbb\x0b\x02\x70\xcc\x22\xcc\xf0\x9b\x92\xb8\xb6\x11\x53\x59\xc7\x1f\xd9\x15\x95\xe5\x0f\x05\x67\x24\x0e\xd2\xa0\xd6\x57\xf7\xec\x94\x97\xab\x83\x93\x19\x5d\xb7\xc5\x3f\x4c\x49\x87\x5c\x92\xd9\x23\x0d\x5f\xf3\xb3\x2e\x30\xc3\xb4\x42\xd5\xa0\x06\xd3\x39\xb7\x31\x5e\xbd\x8f\xde\x47\xdd\xb0\x1c\xf9\xbf\x1e\xa7\x79\xc9\x85\x78\x51\x82\xb3\x4d\x0c\x8f\x62\x8d\x1b\xbb\x6f\x81\x49\x0f\x2c\x69\x46\x06\x99\xa3\x60\x18\xb2\xaa\xb5\x43\x5f\xc0\xfd\x5d\xef\xe9\xd3\x64\x3a\x18\x7f\x1e\x3d\xfe\x35\x78\x38\xc1\x1a\x4a\xb9\x92\xf7\x77\xe3\xc1\x87\xe1\xf3\xe8\xf4\x3b\x56\x26\x86\x3c\xb9\xbf\x7b\xec\xf5\x9e\x3f\x8d\xa6\x9f\x87\xfd\x87\x7f\x03\x00\x00\xff\xff\x1b\x6a\x36\x65\x5b\x0a\x00\x00")

func awsServiceOperatorYamlTemplBytes() ([]byte, error) {
	return bindataRead(
		_awsServiceOperatorYamlTempl,
		"aws-service-operator.yaml.templ",
	)
}

func awsServiceOperatorYamlTempl() (*asset, error) {
	bytes, err := awsServiceOperatorYamlTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-service-operator.yaml.templ", size: 2651, mode: os.FileMode(420), modTime: time.Unix(1539863354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x6a\x1b\x31\x10\x3d\x7b\xbe\xe2\xd5\x84\xb2\x1b\x6c\xf9\x1e\xc8\x29\xa7\x5e\x5c\x68\x0e\x3d\x94\x1e\x64\x65\xbc\x16\xf1\x4a\x62\xa4\xad\x5b\x16\xfd\x7b\x91\xd6\x4a\xa1\x50\xdc\x9c\x86\x11\x6f\xde\xbc\xf7\x46\x41\x9b\x57\x3d\x30\x0e\x3a\x32\x91\x1d\x83\x97\x84\x8e\x80\xf5\x60\xd3\x69\x3a\x28\xe3\xc7\x9d\xbe\xc4\xb3\x3e\xc4\x52\xb7\x91\xe5\x87\x35\xbc\xf5\x81\x45\x27\x2f\xbb\xf0\x3a\xec\x8c\x77\x47\x3b\xac\x09\x98\xe7\x2d\x44\xbb\x81\x71\x67\xdd\x0b\xff\xdc\xe0\x8e\xcf\x3c\xb2\x4b\x78\x78\x84\xfa\x94\x78\x8c\x39\xbf\x97\xbf\x35\x71\x37\xcf\x8d\x4f\x3d\x07\x36\xea\x0b\x47\x3f\x89\x61\xb5\xd7\x23\xe7\xdc\x24\xb0\x7b\xc9\x99\x7a\xa2\xf4\x2b\x2c\xe6\x10\x93\x4c\x26\x61\x26\x60\x91\x8b\xfb\xa5\xaa\xa7\x5a\x28\x13\x1d\x27\x67\xb0\xe7\x4b\xf7\x2f\xd0\x86\x7a\xdc\x57\xba\xc2\x23\x9c\x26\x71\xf8\x58\x1e\x4a\xdf\x86\x1e\xae\x75\x43\x40\x7e\xe3\xed\x0e\xcb\x68\x8f\xaf\x3a\x99\x53\xe7\xf4\xc8\x31\x68\x53\xa5\x59\x37\x6c\x10\x93\x0f\x4f\x27\x98\x93\x76\x57\xb9\x73\xee\xd1\xb1\x08\x58\xc4\x4b\x5f\xb7\xfe\x77\xc4\xf6\x88\x92\x6f\x95\xdf\x72\x8a\xdf\xd6\xb7\x22\xfc\x8e\xc5\xcb\x0d\x5c\xbb\x49\x59\x7a\x03\xaa\xf6\x7c\xf9\x7c\x85\x77\x4d\x52\x4f\xc0\xaa\x58\xbb\x39\xde\x36\xa9\xe7\xa4\x25\xfd\x15\x5e\x4b\xad\xd2\xd9\x63\x09\x0a\x1f\x1e\xe1\xec\xb9\xda\x58\xbd\x5d\x89\x45\x4a\x9f\xeb\x4d\x56\x7f\x3e\x09\xad\xae\x00\x67\xcf\x94\x7f\x07\x00\x00\xff\xff\x18\xc5\x20\xc3\x10\x03\x00\x00")

func baseGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_baseGoTempl,
		"base.go.templ",
	)
}

func baseGoTempl() (*asset, error) {
	bytes, err := baseGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.go.templ", size: 784, mode: os.FileMode(420), modTime: time.Unix(1539689959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6f\xdb\xc8\x11\x7f\xe6\x7e\x8a\x29\x71\xb8\x92\x86\x4c\x35\xaf\x42\x53\x20\x8d\x2f\x77\x46\x02\x3b\xb0\xe5\xdc\x83\x61\xdc\xad\xc8\x11\xb5\x31\xc5\x65\xb9\x4b\xbb\xaa\xc0\xef\x5e\xec\x1f\x92\x2b\x4a\x94\xac\x24\x97\x43\x0b\x11\x09\x44\x2e\x67\x7e\xf3\x7f\x76\xc7\x1c\x8f\xe1\x1f\xe6\x82\x8b\x6b\xb8\xba\x9e\xc2\x4f\x17\x97\x53\x98\xfe\x72\x79\x0b\xef\x2e\x3f\xfc\x04\x7f\x6f\x2f\x32\x1e\xc3\x74\xc1\x04\xcc\x59\x86\xc0\x04\xd0\x4a\xf2\x14\x73\x2c\xa9\xc4\x04\x9e\x18\x85\xdf\xe9\xb3\x38\xe7\x85\x5a\xe1\xe5\x79\xcc\x13\x4c\x31\x87\xa2\xe4\x31\x0a\xf1\xbb\x02\xb8\x9c\xc3\x8a\x57\x7f\x4d\x20\x63\x8f\x08\x72\x81\x10\x2f\x68\x9e\x22\xd0\x7c\x25\x17\x2c\x4f\x81\xce\x78\x25\x41\xb6\x82\x96\xf4\x11\x01\x13\x26\x05\x48\xae\x39\x22\x89\xcb\x22\x53\x68\x46\x93\x5c\xaf\x16\x8f\xe9\xd8\x4a\x1c\x53\x21\x50\x0a\x48\x58\x89\xb1\xe4\xe5\x2a\x22\xa4\xa0\xf1\x23\x4d\x11\xd6\xeb\xe8\xb6\xc0\x38\xba\x41\xc1\xab\x32\xc6\xe8\x8a\x2e\xb1\xae\x09\x61\xcb\x82\x97\x12\x02\xe2\xf9\x58\x96\xbc\x14\x3e\xf1\x88\xe7\xa7\x4c\x2e\xaa\x59\x14\xf3\xe5\x98\x3e\x0b\xf5\xff\x5c\x24\x8f\xe7\x29\x57\xb7\xfe\x5e\x02\x81\xe5\x13\x8b\x71\x1c\x67\xbc\x4a\xe6\xbc\x5c\x52\xc9\x78\xee\x13\x8f\x3e\x8b\x4f\xaf\x68\x56\x2c\xe8\x2b\xe8\xf1\x67\x74\x66\x31\x0c\x73\xeb\xcd\xb1\xb2\x8f\x16\x4c\x8c\xfb\x6f\x22\x25\xf6\xc9\xe2\x6d\x6b\xb4\x1f\x31\xe6\xf9\x9c\xa5\xc7\x72\x2d\x30\x2b\x50\x79\x28\x24\x2a\x0c\x57\xf8\x0c\x4d\x22\x08\xa0\x90\xe3\x33\xf0\xd9\x67\x8c\x25\x99\x57\x79\xac\xde\x07\x46\x10\x9c\x99\xdf\xe8\xad\xfe\x19\x0d\x85\x03\xce\x1c\x1f\x45\x0d\xd1\x7b\x96\x27\x75\x3d\x02\xc9\x0b\x16\xbf\xb9\xb9\x02\x21\x4b\x96\xa7\x21\x9c\xbd\xdd\x70\x31\xac\x89\x57\xa2\xac\xca\x1c\x7e\xdc\x7c\xb3\x26\x9e\xb7\x89\x36\x19\x52\x61\x44\x3c\xcf\x28\x3b\xf1\xd4\x65\xee\x47\x04\x00\x5a\x05\x26\x60\xae\xe6\x79\x44\xbc\x9a\xd4\xda\x27\x3d\x8d\x12\x9c\xb3\x1c\x85\xce\xd4\x21\x9b\xe3\xb9\x14\x44\xae\x0a\xec\x33\x0b\x59\x56\xb1\x54\x56\x59\x2f\x36\xd7\xa6\x37\x49\xcf\xb4\x7d\x4e\x24\x9d\xd2\x16\xcb\xf8\xd2\x6a\x7f\x2b\x69\xfc\xa8\xd4\x02\xe3\x47\xa3\x78\xae\x16\xf8\x5c\xdf\x0b\x45\x01\x33\x2a\x30\x01\x6e\x2a\xb0\x57\xfc\x5a\x25\x1d\xff\x40\xf4\x23\x14\x76\x12\x82\xd0\x8a\x76\xa2\x66\xf3\x2b\xea\x88\x44\xd4\x98\x9a\x55\x42\x62\xa9\x16\x47\xe0\x0f\xb8\xd2\x1f\x81\xe8\x19\x1c\x19\x8e\x9d\xcb\xa2\xa0\x31\x86\xd6\xf4\x9f\x51\x5e\x57\xb2\xa8\xa4\xb0\xb6\x3b\xe6\x72\xfb\x62\x5e\xf2\xa5\x5e\xbe\x40\x11\x97\x6c\x86\x5a\x51\x01\x31\xcd\xb2\x61\x93\x3b\xe4\x20\x84\x60\x49\x8b\x7b\x63\xf8\x83\xf9\x19\x81\xee\x3b\xa1\xf2\x43\x23\x68\xf2\x1a\xb6\xe8\xd6\x35\xf1\x04\x0a\xfd\xb2\x75\xcb\x9b\x5f\x6f\x6f\x51\x08\xc6\x73\xe2\x89\xa7\x58\xbd\xdb\x6c\x3b\x91\x2a\x42\xc5\x16\x12\xe2\x69\x6b\x2e\xf3\x46\x44\x8f\x72\xd3\x28\x4d\xa6\xea\xa6\x0d\x86\xca\x7a\xfa\xac\xa2\xa3\xd4\x09\xdc\x30\x85\xa1\x2e\x81\xc6\x00\x6d\x92\xd6\xf3\x29\xee\xc1\x06\x3f\x3a\x4a\x84\xc4\x63\x73\x4d\xfb\x97\xd7\x90\xb3\x4c\xb9\xa0\xc9\x85\x9c\x65\x1a\x46\xe1\x7a\xaa\xd9\x70\x09\xa2\x2a\x11\xd8\xdc\xec\x12\x4c\x00\x3e\xa9\x6d\x86\x0b\xc1\x66\x19\x6a\xac\x0c\xf3\xc0\xe8\x60\xb4\x13\xa1\x82\x7e\xb5\x0b\x98\x97\x42\x3b\xc7\xcf\xb9\x09\x73\x13\x78\x4c\xe0\x99\xc9\x05\xc8\x05\x95\x36\x01\x54\x05\xf8\xa1\x31\x71\xce\x4b\xf8\x6d\xa4\x72\x42\x59\x58\xea\x5d\x6c\x43\xe4\xfd\xdf\x1e\xa2\x26\x95\x94\x5c\x1b\xd4\xfb\x33\x5e\x49\xfb\xe2\x3d\xae\x1e\xe0\x35\x38\x2b\x9f\x68\x56\xa1\x11\x60\xf5\xb4\x6c\xc6\x09\xb6\xb9\x94\x48\xa5\x71\x24\x3c\xb3\x2c\x83\x58\x2f\x38\x99\x6a\x15\x47\x10\x55\x51\x64\x0c\x13\x28\x68\x49\x97\x62\x38\x3b\x1d\x4c\x95\x9e\x46\x2a\x9c\xf5\x72\xc3\xa1\xba\x76\x42\xdc\x65\xee\x57\x66\x66\x3c\xd7\x9b\x3b\x95\x78\x77\xf3\x41\xd1\x36\xad\xe0\x67\x94\x5a\xe3\x77\x0d\xdb\xd4\xd2\xb5\xad\xe1\xb8\x76\xd0\x3c\x4e\x57\x05\xd6\x75\xb4\x1b\x7b\xa0\x67\xbc\x98\xd7\x36\x16\xd7\xac\xb6\x24\x1a\xc3\xde\xa1\x8c\x17\x6f\xf2\xe4\xa3\x39\x25\xb5\x66\x6d\x78\xc2\x28\xf1\x83\xab\xc5\xbe\x9a\x71\xaa\xcf\xa4\xd2\xfe\x82\x77\x82\x7a\x7c\xb5\x7b\x8d\xc6\xff\xe4\xc9\x6a\x02\x8e\xa5\xc4\xf3\xae\xb8\x64\x73\x16\x6b\x31\x6f\x6e\xae\xc4\x04\xee\x1f\xce\x6c\x1b\x23\x9e\xe7\x6d\x00\x37\x1b\x92\x46\xad\x47\x4d\x11\x98\x50\xea\xcd\xc8\x71\x9b\xd1\xf9\xa3\x4a\xea\xc0\xbf\x71\x88\x86\x7a\x7f\xd8\x61\x7d\xc2\x52\xe5\xe3\x41\x38\x4b\xb7\x0b\xb1\x47\x12\x12\x2f\x6f\xe2\x3d\x08\xdb\x66\xc4\x90\x8a\x36\x5d\xbc\xb8\xdb\xe3\x06\xc1\x9c\x7d\x50\xc3\x6d\x6f\x8f\x21\x59\xaf\xcf\x6d\x5f\xfa\x41\xf2\x42\x41\x19\x91\x2a\x52\xd1\x6d\xbc\xc0\x25\x8d\x3e\x96\x6a\xcb\x96\x0c\x45\x5d\xab\x03\xc4\xb9\xea\xab\x3b\x56\x2d\x4e\x8e\x42\x1d\xf6\x15\xd4\x06\x4d\xc7\x6a\xd3\x81\xfd\x07\x13\xc3\xab\x64\x47\xef\x71\x55\xd7\xeb\xb5\xe5\x37\x8f\x8a\x52\x21\xf9\xdd\x7a\x93\x4b\x75\xed\x1b\x44\xcc\x04\xbe\x1c\x46\xfd\xab\xeb\xe8\x7a\xf6\xb9\xab\x16\x5b\xa4\x16\xe0\x56\x1f\xa5\x34\x9f\x8e\x40\xf7\xa8\x59\xfd\x4e\x70\x7e\x48\x7d\xdd\xa9\xb7\xca\xb9\x33\x3f\x38\xa0\xf3\xa8\xe5\xb9\xa0\x92\xae\xaf\x67\x9f\x27\xdb\x55\x3e\x02\x73\xb6\x9b\x40\xd7\xe6\x7e\x31\x6c\x93\x96\x5f\x35\xd0\xf0\x98\x86\x00\xb0\x47\xb7\xc1\x94\xdb\x0e\x93\xa6\xf7\x47\xce\x79\x4d\x95\x32\x9b\xaf\xf6\xd9\xae\xfd\x16\x86\x3d\x37\xbb\xa1\xd6\x89\x14\xe0\xbf\x74\xda\xea\x00\x82\xef\xf6\x01\x3f\xec\x87\x66\x9f\xce\x1a\xe3\xa0\xc2\x5b\x9e\x37\x4d\x23\xdc\xd0\xed\x45\x59\x6e\xf3\xd1\xeb\xcb\xde\x9b\xd3\x0e\xd3\x51\x49\x7c\x38\x6b\x8f\x4a\xd3\x3f\x39\x2f\xbf\x71\x4c\xb7\xdc\xb0\x2b\xeb\xf4\x6d\x77\x47\x3c\x7d\x50\x42\x89\xa5\xde\x2a\xef\x1f\xfa\x47\xa0\x8f\xcd\x7b\x75\x10\x77\x88\x5f\x03\x2d\x0a\xcc\x93\xa0\x5b\x1b\x81\x9b\xb6\xe1\xcb\xc9\xbb\x6d\xe5\x10\x47\xee\xec\x1b\x87\x68\xe3\x3f\x69\x73\x38\xa8\xd8\x9e\x6e\x31\xdc\x27\x8e\x01\x0d\x87\x82\xed\x1c\x8c\xa2\x5b\x94\x6d\x6c\x85\x03\x15\xf6\x8e\x21\x53\x9a\x6e\xe7\xe6\x94\xa6\x5f\x7a\x0e\x39\x8c\xf7\x65\x07\x91\x61\xdc\x2f\x39\x89\x0c\xa3\xbd\xe4\x28\x42\x3c\x49\xd3\x81\x82\x9a\x52\x3d\xd3\x6a\x82\x36\x92\xea\x69\xb3\x7c\xa6\x34\x0d\xf7\x53\x75\xfe\x1c\x20\x74\x5d\x33\x40\xb2\x69\x71\xb8\x9d\x22\x53\x9a\x0a\x4d\x1b\x12\x02\x6e\x03\x03\x33\xe6\xba\x73\x54\x6f\xc6\x35\x4d\xcf\xce\x70\x77\x45\xb2\x39\xc3\x55\x7a\x41\x0f\x6d\xf8\x6f\x26\x24\xcb\x53\x33\xcc\x0d\xcf\x6c\x0e\x46\x60\xd8\x93\x7d\x7f\xf4\x19\x1e\xeb\x1c\xa0\x3f\x78\xac\xfb\x86\x33\x9d\xb5\xf8\x98\x51\xee\x68\x96\x76\x82\xdb\x3f\x41\x39\xfe\xfb\x8a\x09\xea\xee\xe6\xc3\xc4\xa5\xec\xbc\x16\x9e\x86\xa9\xd3\x30\x75\x1a\xa6\x8e\x1b\xa6\x6c\xb1\x7f\x87\xa3\xea\x69\x82\xfa\x23\x26\x28\xf8\x7f\x9a\xa0\xbe\x5f\x32\x9e\xe6\xa6\xd3\xdc\x74\x9a\x9b\x4e\x73\xd3\xff\xd8\xdc\xe4\xce\x32\xfb\xe6\xa6\x0b\xcc\x70\x63\x6e\x4a\xf4\x42\xf7\xed\x6b\x78\x5c\x72\x58\x83\x10\x82\x6f\x3a\xe1\x1c\xfa\xa4\xda\x4a\x36\xf3\x41\xbd\xe5\x1f\xf7\x5b\xb7\x3b\x20\x28\x6f\xfd\xe6\x3a\xca\xb5\x62\x9f\xa3\x7e\xa5\x4c\xde\xe5\x92\x65\x9a\xd4\x70\x25\xc7\xba\x6c\x27\xc8\x77\x77\xde\x57\x7f\x8f\x06\xc7\x7f\xbb\x4c\x7a\xcb\x97\x85\xfa\x1d\x74\xe8\x7f\x03\x00\x00\xff\xff\x39\xb9\xc6\x05\x28\x25\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9512, mode: os.FileMode(420), modTime: time.Unix(1540221187, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x73\xdb\x36\xf2\x7f\x4d\x7e\x0a\x94\xff\x36\x25\x53\x85\xfc\xe7\xdd\x4d\xe6\x7c\x1d\x57\x56\x5b\x4f\x5d\xdb\x67\x3b\xcd\x8b\x4c\xc6\x85\xc9\x95\xc4\x98\x04\x58\x00\xb2\xea\xaa\xfa\xee\x37\x8b\x05\x28\x52\x96\x14\xa9\xc9\xf4\x6e\xee\x9a\xc9\x8c\x48\x3c\x2c\xf6\xe1\xb7\x0f\x58\x3a\xcb\xd8\x3f\xe8\x1f\x3b\xb9\x60\xe7\x17\x37\x6c\x74\x72\x7a\xc3\x6e\xbe\x3f\xbd\x66\xdf\x9e\x9e\x8d\xd8\xdf\xdb\x7f\x61\x96\xb1\x9b\x69\xa9\xd9\xb8\xac\x80\x95\x9a\xf1\x99\x91\x13\x10\xa0\xb8\x81\x82\x3d\x94\x9c\xfd\xcc\xe7\xfa\x85\x6c\x70\x44\x2a\xe6\xe7\x7e\xc6\x9d\xa7\x63\xf6\x28\x67\x5f\x16\xac\x2a\xef\x81\x99\x29\xb0\x7c\xca\xc5\x04\x18\x17\x8f\x66\x5a\x8a\x09\xe3\x77\x72\x66\x98\x69\x4f\xa8\xf9\x3d\x30\x28\x4a\xa3\x99\x91\x76\x47\x6a\xa0\x6e\x2a\xa4\x46\x2c\x08\x3b\xda\xdc\x4f\xb2\x5c\x16\x30\x01\x91\x71\xad\xc1\x68\x56\x94\x0a\x72\x23\xd5\x63\x1a\x86\x0d\xcf\xef\xf9\x04\xd8\x62\x91\x5e\x37\x90\xa7\x57\xa0\xe5\x4c\xe5\x90\x9e\xf3\x1a\x96\xcb\x30\x2c\xeb\x46\x2a\xc3\xe2\x30\x58\x2c\x5e\xb0\x72\xcc\x68\xdd\xa9\x1e\xce\xb4\x91\x75\xf9\x1b\x14\xcb\x65\x18\xb0\x1a\x0c\x7f\x78\xc9\xa2\xfb\xbf\xe9\xb4\x94\x19\x6f\xca\x9a\xe7\xd3\x52\x80\x7a\xcc\x90\x07\xde\x94\x3a\xc3\x45\xd9\xc3\xcb\x28\x0c\xa2\x49\x69\xa6\xb3\xbb\x34\x97\x75\xc6\xe7\xba\xe2\x77\x1a\x7f\x5f\x68\x50\x0f\x65\x0e\xad\x9a\xec\xde\x29\x54\x0d\x28\x8d\xdb\x14\x8c\x2b\xc8\x4d\x44\xec\x80\xc0\xc3\x0f\xa4\x96\x4b\x31\x2e\x27\xd1\x9a\x40\xff\x9c\xc1\x0c\x05\x66\x8c\xb1\x83\xc8\xfd\x82\x1b\x23\xbb\x2f\x97\x0a\xfa\x3a\xc8\x70\xc8\x4a\xbc\x4e\xb7\xe4\x22\x97\x15\xd4\x5c\x64\xda\xa8\x9c\x6b\x47\x23\xd2\x46\x95\x62\x82\xc2\x06\x7c\xae\xf3\xaa\x04\x61\x0e\xe3\x88\xf6\xb8\x1f\x0d\x26\x7b\x00\xa5\x4b\x29\xa0\xc8\xcc\x63\x03\x45\xb6\xbe\x2b\xe5\x73\x9d\x3d\xbc\xe4\x55\x33\xe5\x2f\x7b\xaa\x3d\x4c\xb3\xfe\x05\x0d\xe5\x74\x40\x4c\xbc\x98\xc8\xcc\x48\x59\xe9\x2c\xe7\xf9\x14\xa2\x30\x44\xd9\x7e\x72\x27\x1e\x26\x9d\x05\xd2\x3e\x12\xb4\xa6\xf5\x48\xe5\xa6\x94\x42\xa7\x97\x04\x79\x6b\xeb\xc8\xe3\x7e\xdb\x9a\x9e\x36\x92\x10\xbd\xeb\xc2\x7b\xb0\x82\x46\x81\x46\x1d\x33\xce\x72\x29\x8c\x92\x55\x05\x8a\xc9\xbb\xf7\x90\x1b\x36\x96\xed\xa3\x36\x52\x01\xcb\xed\x19\x4c\x39\x17\xd3\x21\x5a\x63\x45\x4e\x1b\x35\xcb\x0d\x5b\x84\x01\x21\x94\xd1\xbf\xe7\xf4\x96\x0e\xed\x4f\x18\x18\xd9\x94\xf9\xf1\xd5\xb9\x9d\x24\xb0\x84\x4b\xcb\xd8\x39\xcc\x5b\x62\xb9\x02\x6e\xa0\xcb\x15\xb2\x33\xe7\x26\xb7\xd1\x64\x27\x5f\x6e\x73\x11\x8e\x67\x22\xef\x52\x8d\x1d\x63\x7d\x96\x12\xf6\xbc\x3d\x76\x11\x06\x0a\xcc\x4c\x09\xf6\xcc\x8f\x2d\xc2\xc0\x09\xf4\xca\x49\x44\x6f\x83\x30\x58\x3a\xc6\xaf\x0d\x57\xe6\x0d\xf2\x46\x1c\x82\xb6\xdc\x96\x42\x1b\x2e\x90\x21\x39\x66\x17\xc4\xf1\xf5\x66\x8e\xb9\x28\x18\xcf\x8d\x66\xd2\x46\xbd\x9a\x58\x8f\xf3\x15\x6b\x49\xe7\x94\x58\xf0\x1a\x74\xc3\x73\x70\x0a\x1c\xa0\x26\x9a\xe1\xd4\x46\x5d\x67\x88\xc5\x32\x61\xa0\x94\x17\x8a\x4e\xfa\x9e\x8b\xa2\x02\xa5\xd9\xab\x23\x66\xa1\xdc\x06\xcc\xd1\x03\x08\xe3\xa6\xbf\x9d\x89\x5c\xa3\xdc\xc7\x45\x81\xcf\x56\xf0\x3c\x95\xe2\xb8\x28\x06\x61\x10\xbc\x6e\x0a\x6e\x80\x66\x70\x98\xde\x71\xe6\x04\x2a\xe8\xce\xd0\xbb\x55\xd5\xe6\x70\x15\xd8\xf0\x93\x1b\x55\x21\x4b\xf6\x25\x3d\x87\x79\x9c\xa7\x4e\xcb\xcc\x3f\xa5\xc7\x6f\xae\x87\x3e\x24\x0c\xd8\xcb\x24\x0c\xf2\xd4\x83\x69\xc0\x6e\xe9\x3f\x73\x44\x90\x62\x7a\x05\x93\x52\x1b\x50\x71\xb4\x25\x3d\x44\x03\xf6\xac\xe3\xc8\xa9\x5f\xf6\x43\x89\xfe\xb2\x58\x26\x61\x30\x91\x1d\x82\x1d\x13\x10\xab\x1d\x85\xc5\x56\x24\x52\x85\x4a\xbc\x45\x92\x7e\xa0\x47\x7f\x47\x41\x5b\xbf\x47\x59\x9f\x72\x77\x59\xcd\x14\xaf\x2c\x7f\xad\xa9\x07\x6c\xdd\x88\x5b\x74\x93\x5e\x8d\xae\x6f\xe8\x2d\x4e\x48\x02\x3c\x2e\x25\xbe\x77\xca\xbb\xe2\xba\xf5\x03\x51\x56\x88\xf2\x8d\xc6\xcb\x32\xd6\x15\x9a\xcd\xcb\xaa\x62\x86\xbb\x0a\xa0\x06\xad\xf9\x04\x7d\x41\xc9\xda\x8e\x58\x9d\x59\xac\x37\x4a\xe6\xa0\x75\x07\xeb\x5d\x42\x9b\xfd\x74\xc0\x6a\x3d\x61\xcf\x49\xf1\x3f\x12\xf1\x6f\x64\xf1\xd8\x81\x79\x25\x27\x13\x52\xb0\xdb\x79\x66\x07\xc2\xe0\x81\x2b\xab\xc9\x8e\x3e\x7d\xec\x09\xca\x31\x12\x4e\xed\xd9\xfc\xae\x02\x24\x14\xe0\x32\x76\x64\x27\xbc\x55\x10\x32\x6e\x86\x08\xd0\xf4\xb9\x7f\x0f\x83\x25\x83\x4a\xd3\x7e\xca\x1b\xd7\x88\xd4\x5b\xe4\xa7\x4d\x85\x68\xf1\x6f\xa5\x22\x91\x9c\xa0\x64\x31\x0a\x46\x61\xd0\x3a\xab\x1e\xa0\x64\x56\x1a\x4f\xad\xb5\x18\x21\x84\x50\x1c\x47\x51\x92\x9e\x95\xda\xc4\x54\xc4\xd8\xe7\x8b\xc6\x66\x02\x8b\x61\x14\x11\x29\x7d\x76\x84\xe6\xb4\xfc\x39\x55\xa5\x6f\x4a\x33\x1d\xa1\xfa\x62\x50\x2a\x49\xe9\x31\x22\x85\x4e\xc0\x18\x0c\xb6\xdb\xe1\x89\xb4\x3d\x50\x40\xa9\x30\x40\x3f\x0f\x30\xf6\xdd\xae\xe0\x8a\x02\x28\x5b\x0c\xb6\x82\xa5\xa7\x06\x6a\x4d\x8c\x94\xe3\x76\x1c\xfd\xcb\xcc\x34\xfe\xe4\xf7\xa7\x27\xec\x88\x34\x7c\xc9\x95\x86\xc2\x59\xfc\x6d\x44\xb3\x45\xf4\x8e\xf6\x7b\x53\xa9\xae\x6b\xb7\x13\xde\x52\xbd\x59\x67\x2e\xe2\x76\x89\xc1\xc9\xa2\xc0\x12\xfa\xec\x88\x45\x11\x7b\xf6\xac\x03\x14\x1a\xc2\xc3\xb8\x10\xd2\x50\x8a\x45\xa9\x6a\xde\xbc\x25\x14\xbd\xa3\x1f\xcb\x90\x63\xf0\x24\x7a\xb5\x93\xfb\xc1\x6a\x2d\xf2\xb4\x63\xb5\x9d\x76\xeb\xbd\x0d\x6e\x1e\x9b\x2d\x5b\x7a\x2b\xec\xae\x25\x21\x60\xc7\x5a\xd2\x7b\xf4\x0e\x35\x1e\x5d\x5d\x9c\x9d\x7d\x73\x3c\xfc\xe1\x76\x78\xf1\xe3\xe5\xd9\xe8\x66\x44\xb2\x07\xf2\xee\x7d\x0b\xc8\xc2\xc6\x75\xcb\x5d\xec\x03\xf5\x9a\x7f\x0d\x76\x4a\x9f\x38\xd3\xaf\xc3\xb2\x8f\x26\xcb\x7a\xe0\x9d\x04\x72\xa9\x0a\x50\xe9\x31\x59\x01\x0a\x9b\xb3\xc6\xb1\x65\xac\x63\x9a\x81\x2b\x64\x53\x3b\x8f\x7a\x78\xc3\x95\x70\x69\xd2\x96\xaa\xe9\x8d\x1c\xf2\x1a\xaa\xd8\x15\xab\xe9\x8d\x3c\x93\x73\x50\xf1\x1e\x3a\x4a\x92\x8d\x92\xf5\x97\x5d\x01\xd7\x52\x90\x98\x2e\x2a\x1c\x60\x81\x93\x11\xaa\x7d\x97\xfe\x67\x36\x50\xd2\xa6\x3f\x66\x80\x3d\x84\xd8\x6b\x51\x57\xd2\xff\x11\x83\x06\x28\xe3\x11\x2b\x45\xae\xa0\x06\x61\xae\x64\x55\xdd\xf1\xfc\x7e\x28\x67\xc2\x6c\xb3\xc6\x01\xfa\xe9\xa4\x91\xbf\x8c\xde\x31\xfa\xb9\x54\x35\xaf\xfe\x4d\x4e\x1c\x52\x9a\xe8\x55\x45\x9d\xca\x6e\x43\xbd\x6e\xcb\x65\x14\x8b\x95\xc2\x80\x1a\xf3\x1c\xb0\x26\x5f\x84\x81\x4d\x1e\xf2\xee\x7d\x1a\x3f\xdf\x5e\x8d\x25\xe9\x09\x40\x33\x94\xcd\x63\x8c\xe5\x98\x2b\xc0\x84\x34\x9b\x6f\x85\xc7\x45\x61\x6f\x84\xe5\x98\x69\x9f\x47\xfb\xe2\xd8\xd0\x12\xb1\xdf\x7f\xdf\xb9\x60\x43\xec\xb1\xd5\xff\xd8\x20\xd3\xfd\xd2\xdc\x56\xa0\xbe\x04\x4f\xec\x3a\x39\x33\xcd\xcc\xac\x0a\x97\xb1\x49\x87\xf6\x36\x46\xb9\x82\x16\xad\x23\xc6\x5d\xab\xd2\x5e\xd1\xb6\xb1\x34\x19\xfb\xda\xc4\x5e\xf1\x36\x16\x27\x54\x13\xb1\x2f\xbf\xd0\x5f\x46\x03\xa6\xed\x7b\xe2\x8e\x20\xeb\xd9\x17\xea\x94\xac\x9f\x79\x2a\xc6\x72\x1c\x47\xbc\x28\xa0\xd8\x49\x9a\xcd\x4b\x33\x65\xda\x15\x2a\xbd\xc3\x06\xae\xb2\x8c\x9f\x93\x32\x5c\x39\x53\x24\xc9\xae\x23\x1f\x4a\x98\x33\x6e\xd8\xd4\x98\x46\xbf\xca\xb2\x5c\x0a\x2d\x2b\x48\xf9\x5c\xa7\xbc\xe6\xbf\x49\x61\xdb\x0b\x79\x25\x67\xc5\x18\x1d\x01\xcd\x9e\x4d\x65\x0d\x5f\xff\x5f\x66\xf9\xc8\x0a\x30\xbc\xac\xbe\x26\xa6\x8a\xa3\x2f\x74\xb4\x83\x95\x30\x08\x6e\xc9\x4c\xeb\x81\x65\x65\x5e\x2f\xce\xaa\x68\xda\x4a\x70\xc0\xa2\xe1\xd5\xe8\xf8\x66\x74\x7b\x7a\x7e\x7b\x79\x75\xf1\xdd\xd5\xe8\xfa\x3a\x1a\xb0\x28\xda\x52\x7f\xee\x63\x6d\x6f\x6c\xcb\x1f\x1a\x5b\x93\xfb\x92\x43\xa2\x0d\xe9\x72\x55\x69\x7b\x95\xdc\xd2\x0b\xb1\x9e\xd1\x15\xab\x77\x27\xdb\xe6\xbb\x74\x15\x89\x65\x55\x5c\x60\x60\x12\x30\xbf\xd8\xe0\xc9\x52\x5a\x57\xb6\x8b\xf6\xf7\xe6\x40\xd8\x6d\x44\xf3\x90\x20\x60\x03\xc0\x61\xce\x8b\x9a\xa6\x48\x24\x64\x62\x75\xf6\xe1\x58\x42\xb2\xfb\x70\xe2\xba\x97\xe9\xa9\xb6\xc6\x1e\xca\xba\xc1\xe2\x2f\x96\x5b\x38\x19\xb0\x31\xaf\x34\x24\x58\x44\x7f\xe6\xfa\x9d\x56\x8c\xd1\x2f\x33\x5e\xe1\x36\x2f\x23\x06\xf5\xe5\x72\x80\x32\xf5\x87\x92\x5d\x51\x47\xca\xbd\xc2\xce\x6b\x0f\xea\xfc\xde\x89\xfe\x49\x02\x4f\x8b\xc5\x0f\x47\x07\x01\x73\xd6\x70\xc5\x6b\xcd\xbe\xf8\xea\xc1\xde\x7b\x65\x55\xe0\x73\x64\x65\x26\xef\x12\x12\x45\x3a\x34\x42\x91\xcb\xee\x13\xa3\x1c\x07\x2e\x44\xb5\xc7\xfe\x97\xc4\x28\xe9\xe5\x71\x0f\x1f\x8c\x52\xaf\x2f\x4f\xfe\xf4\x28\xc5\xd8\x1e\x61\xca\x3b\xdd\x1a\xd2\x11\xba\x7b\x84\x2b\x6a\xb4\xfd\x69\xd5\x06\x1d\x87\xd2\xec\x53\x18\x04\x1d\xb7\x3c\xe9\xdc\x1c\x93\x70\x83\xce\x0f\xf2\x46\x7b\x0f\x3d\xa0\x0c\xf0\x95\x29\x15\x73\x5b\x60\x4e\x97\xdb\xdd\xbe\xd5\xa5\xb9\x87\x71\xbd\xbe\x76\xa5\xa1\x70\xd7\x07\x2a\x6b\xf4\x9d\x37\x8e\x27\xdd\x32\xdb\xce\xf0\xfd\xe1\xf5\xb6\xd7\x3e\x4d\xb3\x8f\xe8\x61\xf9\x76\xcb\xbe\x1d\xac\xd5\x35\x29\xfd\x0e\x4c\x4c\x97\x1a\xd7\xcd\xfa\x0e\x7a\xcd\xac\xa7\x88\xf9\x64\xad\xac\xee\xad\x85\x8a\x7d\x5a\x85\x6e\x61\xbb\x58\x7e\x57\x37\x97\x77\x17\x39\xe2\x5d\xeb\x74\x7a\x4f\x5b\x56\x7c\xf5\x32\x0c\x57\x71\x6e\x7f\x45\xb9\x0a\xa5\x4b\xfd\x8f\xaa\xa7\x0d\x5d\x9e\xd8\x06\x75\xac\x35\x84\x2d\x20\x37\xdc\x48\x0f\x83\xe1\xa0\x2d\xa1\x3b\xef\x58\xcd\xf8\x57\x65\xef\x60\x2d\x68\x77\x85\xb0\x01\x41\x3a\xf9\x0b\xd3\x1b\x30\x2d\xca\x6a\xf0\x51\xc0\xde\x5c\x73\x3a\x73\xed\xb3\x98\x6e\xd3\xd6\x1d\xf0\x61\xf3\x96\xb6\xf3\xeb\x71\x41\x45\xef\xb6\x12\x54\xf7\x0b\x4e\x9b\x3e\x3a\xf9\xc8\x21\xb0\x7b\x90\xcf\xf5\x54\x18\xe8\x5e\xc5\x88\x46\xa1\xe1\xf8\xe3\x9b\xe6\xee\x80\xc8\x37\x0f\x6c\xac\xa7\x36\xf8\xe7\x8d\x92\x0d\x1e\x4a\x76\xbb\x70\x35\x4a\x3e\x85\x9a\xa7\x97\x4a\x36\xa0\x4c\x09\x9a\x61\x3e\xf1\x99\xd8\xee\x49\x6f\xa0\x6e\x2a\x6e\xfc\x1f\x2d\x04\x8b\x05\x8d\xff\x00\x8f\x88\x7f\x8b\x68\xaf\xab\xd5\xda\x38\xf2\xeb\xdc\x18\x7d\xf9\xf2\x0b\x4f\xb8\xe1\x8b\x8b\xbb\xf7\xaf\xd6\x14\x35\x74\x1f\x3d\x49\x8d\xcb\xee\x97\x09\x6b\x32\xc7\xb7\xa7\x7d\x6d\xbf\x3a\x5a\x4e\xd8\x11\xeb\x71\xe6\xc4\xf0\x39\xf2\x00\x32\x4e\x8b\x6f\x9f\x48\x60\x17\x44\xef\x3c\x65\x51\xac\x4e\xa1\xe7\xe5\x7f\x76\x50\xed\xfb\xe3\x61\x10\x27\x99\xf4\xa3\xc8\x8f\x8b\xa2\xc4\x28\xc2\x2b\xef\x6b\x7a\x23\xea\x0f\x82\x33\x56\x41\x5e\x06\x3c\xa4\x2b\x82\xc7\x73\x27\x1f\xf4\x41\xd3\xcd\x0e\x4f\x3f\x12\x7c\x5c\x72\xf8\x2b\xfc\x7f\xa2\xf0\xbf\x23\x46\xba\xf8\xe8\xdc\x66\x9f\x7a\x7d\xe3\x09\xab\xfd\x6f\x78\x69\x5e\x0b\x53\x56\x96\x04\x51\x2b\x28\xbd\xf4\xe0\x43\x9b\x3d\x74\x76\x83\xfb\x09\x8c\x34\xdb\x75\xb5\x61\xa8\xbd\x0e\x3a\xfe\x44\x10\x74\x5a\x67\x04\x03\xdf\x53\xdb\x17\x08\x4f\x6a\x30\xf7\x4d\x75\x73\xce\xc6\x1b\xc5\xea\x0a\xb1\x41\x81\xe9\x35\xfd\xe1\x11\x26\x17\xed\x1f\x5f\x1d\xb1\xb7\xfe\x03\xe6\x72\xb1\x70\x01\xb4\x93\xaf\xba\x5f\x72\xf7\x22\xdd\x5e\x20\xe1\x97\xd5\x6e\xdb\xdb\x61\xd1\xe8\x57\x03\x4a\x90\x86\x22\x5a\xfa\xb9\x5a\xbb\x61\x75\xd2\x18\x75\x8f\xbb\x9b\xdc\x39\x71\xe7\xb2\xb9\xb1\x53\x19\x75\x09\x77\x09\xd8\xec\xb7\x58\xc4\xa5\x28\xe0\xd7\x0e\x7f\x97\x52\x19\xcd\xfe\x3f\xb1\x0f\x4b\xb4\x47\xab\xa2\x23\xc6\x9b\x06\x44\x11\xfb\x11\x24\xb0\xce\x76\xef\x42\xd7\x7f\xdc\xd7\x26\x2d\xc5\x9d\xeb\x8e\x98\x67\xc3\x5b\xeb\xc3\x86\x27\x08\xff\xc8\x1b\x3c\x86\x54\x57\xe3\xcb\x27\x32\x7e\x8f\xfc\x26\x9b\x62\x95\xb1\xf5\x9b\x79\xe7\xb8\xd2\x40\x8d\xeb\x56\xfb\xed\x4e\x9b\xde\xd1\xa2\x38\x4f\x55\x45\xf4\x8a\xb5\x03\x3f\xf1\x6a\x66\xed\xba\x5e\x04\xec\x85\xae\x96\xf9\x0f\x62\x6a\xb3\x5c\x89\xff\x93\x37\xab\xd1\x16\x2b\xab\xb1\x7d\xd0\xb2\xbf\xf5\x76\x82\xa4\xb3\xd2\x67\x3f\xe4\xa0\x05\xca\xfe\x55\x51\x2f\x76\xad\xd5\x45\x7b\xc4\x2a\xdf\xcb\x7c\xf2\xad\xec\x5f\x01\x00\x00\xff\xff\x42\xb2\x54\x80\x95\x2c\x00\x00")

func operatorGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_operatorGoTempl,
		"operator.go.templ",
	)
}

func operatorGoTempl() (*asset, error) {
	bytes, err := operatorGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "operator.go.templ", size: 11413, mode: os.FileMode(420), modTime: time.Unix(1539689959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\x15\x02\xd4\x2a\xbc\x22\xf6\x56\x04\x4d\x0f\x6d\x36\x89\x91\x60\xb7\xc8\x1a\xc8\xb1\xa1\xa5\xb1\x34\x30\x45\x12\xe4\xc8\x8e\x21\xe8\xdf\x0b\x92\xb2\x03\x6c\x91\xee\x56\x17\x4a\x23\xce\x7b\xf3\x1e\x67\x28\x25\xfc\x9e\x1f\x78\xfb\x00\xf7\x0f\x5b\xb8\x7b\xbb\xd9\xc2\xf6\xc3\xe6\x11\xde\x6d\x3e\xdd\xc1\x6f\xd7\x47\x48\x09\xdb\x9e\x02\xec\x49\x23\x50\x00\x35\xb2\xed\xd0\xa0\x57\x8c\x2d\x1c\x49\xc1\x57\x75\x0a\x37\xd6\xc5\x88\xf5\x37\x8d\x6d\xb1\x43\x03\xce\xdb\x06\x43\xf8\x1a\x01\x36\x7b\x38\xdb\xf1\xe7\x16\x34\x1d\x10\xb8\x47\x68\x7a\x65\x3a\x04\x65\xce\xdc\x93\xe9\x40\xed\xec\xc8\xc0\x57\xa2\x41\x1d\x10\xb0\x25\x0e\xc0\x36\x65\xd4\x8c\x83\xd3\x11\x2d\x57\x62\x52\xd4\x1d\x3a\xb9\x30\x4a\x15\x02\x72\x80\x96\x3c\x36\x6c\xfd\xb9\x16\xc2\xa9\xe6\xa0\x3a\x84\x1e\xb5\x43\x1f\x84\xa0\xc1\x59\xcf\xb0\x12\x85\x3a\x85\x46\x13\x1a\x86\xb2\x23\xee\xc7\x5d\xdd\xd8\x41\xaa\x53\xd0\x6a\x17\xe2\x7a\x13\xd0\x1f\xa9\xc1\xab\x34\x99\xc8\x52\xce\xb2\x04\x64\x79\x44\x1f\xc8\x1a\x6c\x25\x9f\x1d\xb6\xf2\x69\x56\xad\x4e\x41\x1e\x6f\x95\x76\xbd\xba\x2d\x45\xf1\xff\xd8\xac\xd9\x53\x57\x8a\x62\x40\x56\xc7\x5b\x28\x0f\xbf\x86\x9a\xac\x54\x8e\x06\xd5\xf4\x64\xd0\x9f\xd3\x46\xe5\x28\xc8\xb8\x49\x1e\x6f\x4b\x51\x89\xe8\xd3\x3d\x9e\xe0\x0b\x69\x0d\x1e\x79\xf4\xe6\x62\x42\x34\x74\x87\xe0\xa2\x5d\x2d\x90\x59\xfc\x4d\xf6\x2a\xc6\x20\xf6\xa3\x69\x62\xf2\xaa\x82\x0f\x4b\xca\x24\x8a\x05\x64\x89\x4c\xa2\x00\xf8\x38\xee\xd0\x1b\x64\x0c\x9f\x31\xd8\xd1\x37\x78\xaf\x06\x7c\xfd\x83\xf8\x5a\x14\xc5\x34\xdd\x80\x4f\x27\xff\x8a\x4c\x8b\xdf\xd6\xf0\x0a\x35\x0e\xf1\x14\x5e\xbf\x81\x7a\xc3\x38\x04\x98\x67\x51\x14\xef\x91\xa7\xe9\xf2\xb3\x7e\x74\xd8\xd4\x1f\xc9\xb4\xf3\xfc\xc7\x39\x93\x3c\xb3\xe1\xc2\x86\x31\x24\x8a\x59\xcc\xc9\x93\x8b\xa0\x16\xf7\x64\x30\x80\xd2\x3a\xa9\xcf\x71\x88\xd2\x99\xac\x09\xc0\xbd\x62\x50\x1e\x01\xbf\x39\x1b\x8d\xfa\x97\x4d\xf1\xb8\xaf\x78\x81\xfd\xd8\x30\x4c\xe2\x47\xae\x24\xe8\x55\x60\x4f\xa6\xab\xe0\xf2\x22\x5e\xee\xc8\x33\x7a\x33\xfe\x2f\xb9\x61\xea\x3f\xd3\xb2\x86\x4c\x73\x59\x2b\x58\x91\x61\xf4\x7b\xd5\xe0\x34\xaf\x01\xbd\xb7\x7e\xa9\x21\xfb\x34\x0b\xf1\xd2\x82\xa4\x7c\xee\x08\xe0\x14\x9b\x6f\x4f\xa6\x4d\xce\xf9\xc5\x0d\xd8\x9d\xc1\xa8\x01\x73\x9f\x3d\x83\xb1\xca\x82\xe0\xa9\xb0\x08\x70\x55\x17\x3f\x82\x53\x0d\xfe\xa7\xce\xd8\xc4\xda\x76\x1d\xfa\x28\x64\xc1\xfb\x94\x02\xa2\xc8\xf3\xfc\x88\xbc\x86\xbf\xe3\xef\xeb\xed\x50\xdf\xe3\xe9\x9d\xf5\x99\x77\xa9\xa6\xfe\x7c\xf7\xb8\xcd\x91\x2a\x0e\x46\xd6\x95\x78\x12\xf4\x05\xab\x7e\xaa\xec\x2f\x3d\x7a\xa5\xa3\xae\x79\x5e\x5d\xab\xae\xea\xf7\xc8\xe9\x73\x0d\x79\xce\x63\xe0\xc1\xa5\x46\x9c\xe6\x4a\x14\xb4\x4f\xd8\x3f\xbd\x01\x43\x3a\xea\x58\x84\xd4\x5f\x88\xfb\xbb\xa8\x6e\x85\xde\x57\x75\x7e\x2d\x93\x5e\xe8\x90\x39\x5e\xad\x21\x76\xb3\x75\xd4\x94\x95\x28\x2e\x63\x5c\x96\xa9\xdc\x38\x18\xd7\xd1\xfe\x2e\xc4\x90\x16\xb3\xf8\xde\x16\xff\x04\x00\x00\xff\xff\xe5\x13\x3f\x32\x30\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1584, mode: os.FileMode(420), modTime: time.Unix(1539863354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(420), modTime: time.Unix(1539689959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-service-operator.yaml.templ": awsServiceOperatorYamlTempl,
	"base.go.templ":                   baseGoTempl,
	"cft.go.templ":                    cftGoTempl,
	"operator.go.templ":               operatorGoTempl,
	"template_functions.go.templ":     template_functionsGoTempl,
	"types.go.templ":                  typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"aws-service-operator.yaml.templ": &bintree{awsServiceOperatorYamlTempl, map[string]*bintree{}},
	"base.go.templ":                   &bintree{baseGoTempl, map[string]*bintree{}},
	"cft.go.templ":                    &bintree{cftGoTempl, map[string]*bintree{}},
	"operator.go.templ":               &bintree{operatorGoTempl, map[string]*bintree{}},
	"template_functions.go.templ":     &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ":                  &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
