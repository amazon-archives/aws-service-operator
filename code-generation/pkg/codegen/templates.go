// Code generated by go-bindata.
// sources:
// assets/aws-service-operator.yaml.templ
// assets/base.go.templ
// assets/cft.go.templ
// assets/operator.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsServiceOperatorYamlTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\x48\x0a\x0c\x18\x26\xb9\x06\xf6\x30\x08\x49\x80\xcc\xf6\x3a\xa3\x99\x13\xd8\xee\x5e\xdb\x33\x75\x96\x39\x53\x24\x41\x52\x76\x5d\xc1\xff\xfb\x40\xfd\xf2\x6f\xa7\xd8\x52\x3d\xe9\x4e\x77\xf7\x7d\xf7\xf1\x78\xba\x85\x87\xea\x81\xfe\x33\x8c\x9e\xa7\x30\xe8\x0f\xa7\x30\xfd\x73\x38\x81\x3f\x86\x4f\x03\xb8\x6b\x9f\xe0\x16\xa6\x0b\x6e\x61\xce\x05\x01\xb7\x80\xb9\x53\x29\x49\x32\xe8\x28\x81\x15\x47\xf8\x82\x6b\x1b\x2a\xed\x3d\xca\x40\xf3\xed\x4b\x70\x0b\xc3\x39\x6c\x54\xfe\x53\x02\x82\x2f\x09\xdc\x82\x80\x2d\x50\xa6\x04\x28\x37\x6e\xc1\x65\x0a\x38\x53\xb9\x03\xd7\x02\x64\xb8\x24\xa0\x84\x3b\x0b\x4e\x95\x19\x91\xa3\x4c\x8b\xe0\xb6\x26\x20\x4b\xa7\x5e\xa6\x1d\xa6\x12\x4a\x49\x76\xd0\x5a\x72\x16\x12\x6e\x88\x39\x65\x36\x51\x10\xa0\xe6\x7f\x93\xb1\x5c\xc9\x18\x56\xdd\x60\xc9\x65\x12\xc3\x13\xb7\x2e\xe0\x8e\x32\x1b\x07\x21\x54\xbe\x11\x66\x64\x35\x32\x0a\x00\x8e\x92\x00\x32\x72\x98\xa0\xc3\x38\x00\x00\x90\x98\x51\x0c\xbe\x55\x4b\x66\xc5\x19\xb5\x2d\x07\x45\x61\xca\xae\xde\x71\x99\xd0\xd7\x5f\xe0\x1d\x09\xca\x48\x3a\x88\xef\x21\x1a\x7a\xc4\xed\x36\x08\x0f\x00\x50\x73\xfa\xea\x48\x7a\xcb\x46\xcb\xdf\x6c\xc4\x55\x67\xd5\x9d\x91\x43\x0f\x5d\xb1\xeb\xe5\xd6\xa9\x6c\x4c\x56\xe5\x86\x51\x9f\xe6\x5c\x72\xc7\x95\xbc\xc0\xad\x28\x1a\xe0\x68\xa2\x89\x45\x4d\x62\xf4\x22\x72\x83\x62\xbb\x8d\x8e\x99\x47\xb8\xb6\x01\x80\xd5\xc4\xaa\x42\xa9\x51\xb9\x8e\xe1\x42\x5c\x05\x64\xab\xd0\x86\xe4\x31\xea\x47\x2e\x93\xed\xb6\x0e\x11\xdc\xba\x8f\x57\xc2\xca\x33\xa9\x42\x75\x49\xf2\x3b\xba\xa8\xe3\xed\x42\x19\x37\xda\xe7\x53\x14\x21\x9c\x39\x08\x7f\x0a\x17\x4a\x4e\x7c\x8d\xb2\xa7\xb6\x6c\xd8\x10\x88\x7c\xed\xd6\xed\x6b\xd3\x5e\x63\x96\xcb\x34\x17\x68\xae\xf0\xdd\xcb\xb7\x4c\xe9\x6b\x07\x34\xf1\xdf\xeb\xd8\xd5\x6e\x06\x51\xe8\x05\x76\x83\xa2\xa8\x90\x9b\xa1\xed\x89\xdc\x3a\x32\x63\x25\x8e\xc7\xd6\xcc\x90\x45\x98\xbb\x85\x32\xfc\x1b\xfa\x51\x39\x1d\xad\xef\x9e\x6a\x00\x93\x8b\x4a\xdd\x72\x76\x3f\xf8\xd9\xa8\xc5\x0e\xe1\xe6\xa6\x7c\x31\x75\x0b\xad\xdf\x12\x33\xe4\x6c\x6d\x69\x95\x34\xaf\x4c\xc9\x39\x4f\x33\xd4\xb6\x8d\x2c\x01\x1b\x93\x56\x24\xeb\xbc\x15\x99\x59\x5b\x30\x25\x57\xbf\x89\x66\x58\x42\x58\xa3\x63\x8b\xa6\xb0\x21\x74\x54\x1b\x09\x09\x6a\x8d\x5c\x27\xbb\x2f\xba\x4e\x39\xd3\xcb\xb9\xcb\x78\xbe\x3b\x56\xde\xc8\xc6\x9d\xb4\x37\xf2\xed\x78\x9f\xa1\x77\xf1\x36\x9e\xd0\xbb\xf9\xf9\xe6\x94\x88\x77\xb6\xb3\x33\xa9\x6a\x3d\x32\xa6\x72\xe9\xfe\xd7\xd6\x6b\xf7\x81\xdf\x9f\x17\x62\xce\xcd\xec\xef\x5c\x26\x5c\xa6\x3f\x78\x74\x95\xa0\x31\xcd\xab\xc8\x46\xd1\x2b\x28\xc1\x6e\xa1\x1d\x5e\xaf\x57\x70\x6c\x3e\xfb\x87\x98\xab\x6f\xc9\x05\x8d\xdf\x4e\xc6\x3e\x69\xa1\x36\x7e\x83\x1c\xc9\x87\x5a\xdb\xff\xa6\xd4\xeb\xe8\xfb\x3f\x08\x43\x5a\x70\x86\x36\x86\x6e\x69\x97\x3f\x67\x74\xd4\xec\xe0\x43\xe0\x52\x7c\x29\x95\x2b\xa5\xb6\x3b\x27\x00\xc7\x2c\xc2\x0c\xbf\x29\x89\x6b\x1b\x31\x95\x75\xfc\x91\x5d\x61\x59\xfe\x4e\x70\x46\xe2\xa0\x0c\x6a\x7d\x35\x67\xc7\xbc\xb4\x0e\x4e\x66\x74\x5d\x16\xff\x30\x25\x1d\x72\x49\x66\x0f\x34\x7c\x4d\xcf\xba\xc1\x0c\xd3\x2a\xaa\x0e\x6a\x62\x3a\xe7\x12\xe3\xd5\xfb\xe8\x7d\xd4\x0d\xcb\x95\xff\xeb\x71\x99\x97\x5c\x88\x17\x25\x38\xdb\xc4\xf0\x28\xd6\xb8\xb1\xfb\x12\x98\xf4\x40\x92\x66\x65\x90\x39\x72\x86\x21\xab\x46\x3b\xf4\x0d\xdc\xdf\xf5\x9e\x3e\x4d\xa6\x83\xf1\xe7\xd1\xe3\x5f\x83\x87\x93\x58\x43\x29\x57\xf2\xfe\x6e\x3c\xf8\x30\x7c\x1e\x9d\x7e\xc7\x4a\xc4\x90\x27\xf7\x77\x8f\xbd\xde\xf3\xa7\xd1\xf4\xf3\xb0\xff\xf0\x6f\x00\x00\x00\xff\xff\xab\x23\xa7\xdf\x59\x0a\x00\x00")

func awsServiceOperatorYamlTemplBytes() ([]byte, error) {
	return bindataRead(
		_awsServiceOperatorYamlTempl,
		"aws-service-operator.yaml.templ",
	)
}

func awsServiceOperatorYamlTempl() (*asset, error) {
	bytes, err := awsServiceOperatorYamlTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-service-operator.yaml.templ", size: 2649, mode: os.FileMode(436), modTime: time.Unix(1553719645, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x3f\xcf\x9b\x30\x10\x87\xe7\xf8\x53\x9c\xa2\x57\x15\x44\x60\x76\xd4\x4e\xed\xd2\xa1\xa9\xda\x77\xe8\x50\x75\x30\xce\xc5\x41\x09\x36\xb5\x8f\x86\x0a\xf9\xbb\x57\x36\xd0\x90\xe1\x15\xc9\x74\xf1\xff\xdf\xf3\xe4\x68\x85\x3c\x0b\x85\x50\x09\x87\x8c\xd5\x4d\x6b\x2c\x41\xc2\x00\xb6\xd2\x68\xc2\x9e\xb6\xe1\xb7\xaa\xe9\xd4\x55\x5c\x9a\xa6\x10\x57\x77\x11\x95\x0b\x35\x77\x68\xff\xd4\x12\x73\xd3\xa2\x15\x64\x6c\xd1\x9e\x55\x21\x8d\x3e\xd6\xea\xe9\x63\xbf\x3b\xec\xb0\x11\x5a\x28\xb4\xe1\xf0\x30\xe4\x60\x85\x56\x08\x2f\xb5\x3e\x60\x9f\xc1\x0b\x5e\xb0\x41\x4d\x50\x7e\x00\xfe\x99\xb0\x71\xde\x3f\xfb\xca\x3c\x70\xc5\x30\xcc\xf7\xf1\xd7\x16\x25\xff\x8e\xce\x74\x56\x22\xdf\x8b\x06\xbd\x9f\x23\xa0\x3e\x78\xcf\x52\xc6\xe8\x6f\x3b\x5a\x02\x47\xb6\x93\x04\x03\x03\x18\x59\xa7\xc2\x3f\xc6\xc2\x00\x22\xcb\x97\x91\x05\x76\x4b\x32\xfe\x6d\xb1\xf4\x0c\xe5\x4a\x5c\xd8\xad\x6c\xe0\x5f\x27\xf2\x3b\x2e\xcf\xd8\xb1\xd3\x12\xf6\x78\x4d\xde\xc0\xc9\x1e\xe7\xc9\x58\x0a\xbb\xa8\x28\xb8\xb1\x48\x9d\xd5\xf0\x2e\x4c\x84\xf1\x7c\x7d\x39\xd5\x2c\xce\x2d\xaf\x2e\xef\x46\xe3\xfa\xc3\x82\x56\x15\x95\x6b\x1b\xf8\x1e\xaf\xb3\xa5\x64\xca\x78\x97\x28\xbd\x45\x1a\xf5\x01\xdc\x14\x26\xd5\xc8\x9e\xc2\x0f\x41\xf2\x94\x48\xea\x61\xfa\x84\x82\xc9\x50\x33\xd0\xa2\x41\xd7\x0a\x19\x9b\xa8\xd6\x2a\x8d\xa6\x1e\x66\xac\x8f\x10\xfa\x3c\xfe\x3b\x73\x78\xf7\x73\xbb\xd6\xca\xbf\xe2\x2b\x1b\x65\xa0\xe2\x6b\x0e\x5e\x49\x58\xfa\x4f\xb0\x48\x9c\x46\xda\xcd\x0d\x9e\x6d\xde\xe7\x92\x7a\xfe\xc9\x68\x4c\x52\xe6\xff\x05\x00\x00\xff\xff\x59\xfb\x37\x1f\x4a\x04\x00\x00")

func baseGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_baseGoTempl,
		"base.go.templ",
	)
}

func baseGoTempl() (*asset, error) {
	bytes, err := baseGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.go.templ", size: 1098, mode: os.FileMode(436), modTime: time.Unix(1544578164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x7b\x6f\xa3\x48\x12\xff\x1b\x3e\x45\x1d\x1a\xed\x41\xe4\xe0\x9b\x7f\xad\xcb\x49\xd9\x64\x1f\xd1\xcc\x25\x51\xe2\x99\xd5\x29\x8a\x66\xdb\x50\xc6\x3d\xc1\x34\x47\x37\xc9\xf9\x2c\xbe\xfb\xa9\x1f\x40\x83\x8d\x1d\xcf\xee\xcd\x6a\x47\x46\x33\x32\x34\x55\xbf\x7a\x76\x55\x57\x18\x8f\xe1\x1f\xfa\x82\xcb\x1b\xb8\xbe\x99\xc2\x0f\x97\x57\x53\x98\xfe\x7c\x75\x0f\x3f\x5e\xbd\xff\x01\xfe\xde\x5c\xee\x78\x0c\xd3\x05\xe5\x30\xa7\x29\x02\xe5\x40\x4a\xc1\x12\xcc\xb0\x20\x02\x63\x78\xa6\x04\x7e\x25\x2f\xfc\x94\xe5\x72\x85\x15\xa7\x11\x8b\x31\xc1\x0c\xf2\x82\x45\xc8\xf9\xaf\x12\xe0\x6a\x0e\x2b\x56\xfe\x35\x86\x94\x3e\x21\x88\x05\x42\xb4\x20\x59\x82\x40\xb2\x95\x58\xd0\x2c\x01\x32\x63\xa5\x00\xd1\x08\x5a\x92\x27\x04\x8c\xa9\xe0\x20\x98\xe2\x08\x05\x2e\xf3\x54\xa2\x69\x4d\x32\xb5\x9a\x3f\x25\x63\x23\x71\x4c\x38\x47\xc1\x21\xa6\x05\x46\x82\x15\xab\xd0\x75\x73\x12\x3d\x91\x04\x61\xbd\x0e\xef\x73\x8c\xc2\x3b\xe4\xac\x2c\x22\x0c\xaf\xc9\x12\xab\xca\x75\xe9\x32\x67\x85\x00\xdf\x75\x3c\x2c\x0a\x56\x70\xcf\x75\xbc\x84\x8a\x45\x39\x0b\x23\xb6\x1c\x93\x17\x2e\xff\x9f\xf2\xf8\xe9\x34\x61\xf2\x76\x37\x01\xc7\xe2\x99\x46\x38\x8e\x52\x56\xc6\x73\x56\x2c\x89\xa0\x2c\xf3\x5c\x87\xbc\xf0\x8f\x6f\x49\x9a\x2f\xc8\x5b\xe8\xf1\xa7\x64\x66\x30\x34\x73\xe3\xcb\xb1\xb4\x8e\xe4\x94\x8f\xfb\x6f\x42\x29\xf6\xd9\xe0\x6d\x6a\xb4\x1b\x31\x62\xd9\x9c\x26\x87\x72\x2d\x30\xcd\x51\xfa\x27\x70\x65\x10\xae\xf1\x05\xea\x34\xe0\x40\x20\xc3\x17\x60\xb3\xcf\x18\x09\x77\x5e\x66\x91\x7c\xef\x6b\x41\xa0\x7f\xc2\x0b\xf5\x33\x1a\x8a\x05\x9c\x58\x2e\x0a\x6b\xa2\x77\x34\x8b\xab\x6a\x04\x82\xe5\x34\x3a\xbf\xbb\x06\x2e\x0a\x9a\x25\x01\x9c\x5c\x74\x3c\x0c\x6b\xd7\x29\x50\x94\x45\x06\xdf\x75\xdf\xac\x5d\xc7\xe9\xa2\x4d\x86\x54\x18\xb9\x8e\xa3\x95\x9d\x38\xf2\xd2\xf7\x23\x17\x00\x1a\x05\x26\xa0\xaf\xfa\x79\xe4\x3a\x95\x5b\x29\x97\xf4\x34\x8a\x71\x4e\x33\xe4\x2a\x4d\x87\x6c\x8e\xe6\x82\xbb\x62\x95\x63\x9f\x99\x8b\xa2\x8c\x84\xb4\xca\x38\xb1\xbe\x3a\xce\x74\x7b\x96\xed\xf2\xa1\xdb\xea\x6c\xa0\xb4\x2b\x8d\xf2\xf7\x82\x44\x4f\x52\x2b\xd0\x6e\xd4\x7a\x67\x72\x81\xcd\xd5\x3d\x97\x14\x30\x23\x1c\x63\x60\x7a\xf7\xf5\x36\xbe\x52\x49\x45\xdf\xe7\xfd\x00\x05\xad\x04\x3f\x30\xa2\xad\xa0\x99\xec\x0a\x5b\x22\x1e\xd6\xa6\xa6\x25\x17\x58\xc8\xc5\x11\x78\x03\x9e\xf4\x46\xc0\x7b\x06\x87\x9a\x63\xeb\x32\xcf\x49\x84\x81\x31\xfd\x27\x14\x37\xa5\xc8\x4b\xc1\x8d\xed\x96\xb9\xcc\xbc\x98\x17\x6c\xa9\x96\x2f\x91\x47\x05\x9d\xa1\x52\x94\x43\x44\xd2\x74\xd8\xe4\x16\xd9\x0f\xc0\x5f\x92\xfc\x41\x1b\xfe\xa8\x7f\x46\xa0\x6a\x4e\x20\xfd\x50\x0b\x9a\x9c\xc1\x06\xdd\xba\x72\x1d\x8e\x5c\xbd\x6c\xdc\x72\xfe\xcb\xfd\x3d\x72\x4e\x59\xe6\x3a\xfc\x39\x92\xef\xba\x45\x27\x94\x5b\x50\xb2\x05\xae\xeb\x28\x6b\xae\xb2\x5a\x44\x8f\xb2\x6b\x94\x22\x93\xdb\xa6\x09\x86\x4c\x7a\xf2\x22\xa3\x23\xd5\xf1\xed\x30\x05\x81\xda\x01\xb5\x01\xca\x24\xa5\xe7\x73\xd4\x83\xf5\xbf\xb3\x94\x08\x5c\x87\xce\x15\xed\x5f\xce\x20\xa3\xa9\x74\x41\x9d\x0b\x19\x4d\x15\x8c\xc4\x75\x64\xa9\x61\x02\x78\x59\x20\xd0\xb9\xee\x10\x94\x03\x3e\xcb\x16\xc3\x38\xa7\xb3\x14\x15\x56\x8a\x99\xaf\x75\xd0\xda\xf1\x40\x42\xbf\xdd\x06\xcc\x0a\xae\x9c\xe3\x65\x4c\x87\xb9\x0e\x3c\xc6\xf0\x42\xc5\x02\xc4\x82\x08\x93\x00\x72\x07\x78\x81\x36\x71\xce\x0a\xf8\x34\x92\x39\x21\x2d\x2c\x54\x07\xeb\x88\x7c\xf8\xdb\x63\x58\xa7\x92\x94\x6b\x82\xfa\x70\xc2\x4a\x61\x5e\xbc\xc3\xd5\x23\x9c\x81\xb5\xf2\x91\xa4\x25\x6a\x01\x46\x4f\xc3\xa6\x9d\x60\x6a\x4b\x81\x44\x68\x47\xc2\x0b\x4d\x53\x88\xd4\x82\x95\xa9\x46\x71\x04\x5e\xe6\x79\x4a\x31\x86\x9c\x14\x64\xc9\x87\xb3\xd3\xc2\x94\xe9\xa9\xa5\xc2\x49\x2f\x37\x2c\xaa\x1b\x2b\xc4\x6d\xe6\xfe\xc6\xcc\x8c\xe6\xaa\xb1\x4b\x63\x26\x67\x4d\x1d\xf8\x09\x85\x52\xf7\xc7\x9a\x67\x6a\x88\x9a\xba\x70\x58\x2d\xa8\x1f\xa7\xab\x1c\xab\x2a\xdc\x8e\x3d\x50\x30\x5e\xcd\x6b\xaa\xca\xbe\xdd\x66\x79\xf4\xf0\xad\xe6\xd4\x02\x3f\xdc\xbd\x9f\xd8\x94\xad\x1f\x15\xd9\x35\x13\x74\x4e\x23\x25\xf1\xfc\xee\x9a\x4f\xe0\xe1\xf1\xc4\x94\x13\xd7\x71\x9c\x8e\x8c\xba\x31\x28\x4e\xd5\x06\x2f\x48\x4e\x66\x34\xa5\x82\xe2\x2e\x56\xef\xe2\xfc\xf6\xfc\xfb\xab\xf7\x57\xd3\x7f\x7d\xba\x3a\xff\xa7\xd7\x00\xe8\x6c\xd6\x61\x51\x5d\xc5\x8a\xad\xb6\xff\x56\x66\xa7\xef\xdd\x59\x44\x43\x45\x3c\x68\xb1\x3e\x62\x21\x13\x6b\x2f\x9c\xa1\xdb\x86\xd8\x23\x09\x5c\x27\xab\x63\x37\x08\xdb\x44\x77\x48\x45\x13\x7a\x27\x6a\x9b\xd5\x20\x98\xd5\xd0\x14\xdc\x66\x9f\x0b\xdc\xf5\xfa\xd4\x14\x98\x37\x82\xe5\x12\x4a\x8b\xfc\x9e\xc5\xab\xf0\x3e\x5a\xe0\x92\x84\xb7\x85\xec\xbd\x32\x42\x55\x25\x4f\x02\xa7\xb2\x40\x6e\x59\x35\x38\x19\x72\x79\x62\x97\x50\x1d\x9a\x96\xd5\xa4\x16\xfd\x2f\xc6\x9a\x57\xca\x0e\xdf\xe1\xaa\xaa\xd6\x6b\xc3\xaf\x1f\x25\xa5\x44\xf2\xda\xf5\x3a\x2f\xab\xca\xd3\x88\x98\x72\x7c\x3d\x8c\xfc\x57\x55\xe1\xcd\xec\x73\xb8\x5e\xbf\xe9\x6c\x38\x03\x70\xaf\x8e\x44\x8a\x4f\x45\xa0\x7d\x54\xac\x5e\x2b\x38\xdb\xa7\xbe\x2a\xb9\x4d\xab\xaa\x83\xd4\x9a\xef\xef\xd1\x79\xd4\xf0\x5c\x12\x41\xd6\x37\xb3\xcf\x13\x95\x16\x6f\xba\x87\x56\x7d\x48\x9b\x40\x5b\xb2\x7e\xd6\x6c\x93\x86\x5f\x56\xc2\xa0\xda\xd5\x0d\xad\xbe\x2a\xb7\x15\xc0\x0e\xdd\x06\x53\x6e\x33\x4c\x8a\xde\x1b\x59\x07\x2f\xb9\xa1\xe9\x7c\xb5\xcb\x76\xe5\xb7\x20\xe8\xb9\xd9\x0e\xb5\x4a\x24\x1f\xff\xad\xd2\x56\x05\x10\x3c\xbb\x0e\x78\x41\x3f\x34\xbb\x74\x56\x18\x7b\x15\xde\xf0\xbc\x2e\x1a\x41\x47\xb7\x57\x65\xb9\xc9\x47\xa7\x2f\x7b\x67\x4e\x5b\x4c\x07\x25\xf1\xfe\xac\x3d\x28\x4d\xff\xe0\xbc\xfc\x9d\x63\xba\xe1\x86\x6d\x59\xa7\x6e\xdb\x3b\xd7\x51\x27\x1e\x14\x58\xa8\xb6\xfb\xf0\xd8\x3f\xcb\xdc\xd6\xef\xe5\x89\xda\x22\x3e\x03\x92\xe7\x98\xc5\x7e\xbb\x36\x02\x3b\x6d\x83\xd7\x93\xb7\x6d\x65\x1f\x47\x66\xf5\x8d\x7d\xb4\xd1\x1f\xd4\x1c\xf6\x2a\xb6\xa3\x5a\x0c\xd7\x89\x43\x40\x83\xa1\x60\x5b\x87\xac\xf0\x1e\x45\x13\x5b\x6e\x41\x05\xbd\x63\xc8\x94\x24\x9b\xb9\x39\x25\xc9\x97\x9e\x43\xf6\xe3\x7d\xd9\x41\x64\x18\xf7\x4b\x4e\x22\xc3\x68\xaf\x39\x8a\xb8\x8e\x20\xc9\xc0\x86\x9a\x12\x35\x9c\x2a\x82\x26\x92\xf2\xa9\xbb\x7d\xa6\x24\x09\x76\x53\xb5\xfe\x1c\x20\xb4\x5d\x33\x40\xd2\xb5\x38\xd8\x4c\x91\x29\x49\xb8\xa2\x0d\x5c\x17\xec\x02\x06\x7a\x5e\xb5\x07\xa2\xde\xb0\xaa\x8b\x9e\x19\xc6\x3e\xe4\x71\x77\x18\x2b\xd5\x82\x9a\xbe\xf0\x3f\x94\x0b\x9a\x25\x7a\x2a\x1b\x1e\xbe\x2c\x0c\x5f\xb3\xc7\xbb\xfe\x7a\x33\x3c\x9f\x59\x40\x7f\x9e\xf9\xcc\x58\x7c\xc8\x58\x76\x30\xcb\x2b\xa7\x31\xcb\x7f\xc7\x69\xec\x38\x8d\x1d\xa7\xb1\x6f\x62\x1a\x33\xd5\xe2\x2b\x9c\x75\x8f\x23\xd8\xff\x63\x04\x83\x6f\x69\x04\xfb\x7a\xc9\x78\x1c\xbc\x8e\x83\xd7\x71\xf0\x3a\x0e\x5e\x7f\xb2\xc1\xcb\x1e\x86\x76\x0d\x5e\x97\x98\x62\x67\xf0\x8a\xd5\x42\xfb\x15\x6c\x78\xde\xb2\x58\xfd\x00\xfc\xdf\x75\x44\xda\xf7\x71\xb5\x91\xac\x07\x8c\x6a\xc3\x3f\xf6\x57\x6f\x7b\xc2\x90\xde\xfa\x64\x3b\xca\xb6\x62\x97\xa3\x7e\x21\x54\x7c\xc8\x04\x4d\x15\xa9\xe6\x8a\x0f\x75\xd9\x56\x90\xaf\xee\xbc\xdf\xfc\x65\x1a\x2c\xff\x6d\x33\xe9\x82\x2d\x73\xf9\x3b\xe8\xd0\xff\x05\x00\x00\xff\xff\x03\x49\x27\x73\x2e\x25\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9518, mode: os.FileMode(436), modTime: time.Unix(1553733152, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\xb6\xb2\x7f\x26\x3f\x05\xca\xdb\xa6\x64\xca\x90\xcd\xdb\x1d\xcf\xf5\xed\xb8\xb6\xda\x7a\xea\xd8\x3e\xb6\xd3\x3c\x64\x32\x29\x4c\xae\x24\xc4\x24\xc0\x02\x90\x15\x57\xd5\x77\x3f\x03\x2c\x40\x91\x32\x25\x4b\x4d\xa6\xe7\xcc\x39\xf5\x8b\xf8\x07\x58\xec\xee\xef\xb7\x8b\x5d\xd0\x79\x4e\xfe\x1f\xff\xc8\xc9\x05\x39\xbf\xb8\x21\xa3\x93\xd3\x1b\x72\xf3\xd3\xe9\x35\xf9\xe1\xf4\x6c\x44\xfe\xaf\xfd\x0b\xf3\x9c\xdc\x4c\x99\x22\x63\x56\x01\x61\x8a\xd0\x99\x16\x13\xe0\x20\xa9\x86\x92\xdc\x33\x4a\x7e\xa5\x73\xf5\x42\x34\xe6\x89\x90\xc4\xbf\xfb\xd5\xcc\x3c\x1d\x93\x07\x31\xfb\xba\x24\x15\xbb\x03\xa2\xa7\x40\x8a\x29\xe5\x13\x20\x94\x3f\xe8\x29\xe3\x13\x42\x6f\xc5\x4c\x13\xdd\xae\x50\xd3\x3b\x20\x50\x32\xad\x88\x16\x76\x46\xa6\xa1\x6e\x2a\x23\x0d\x55\xe0\xf6\x69\x73\x37\xc9\x0b\x51\xc2\x04\x78\x4e\x95\x02\xad\x48\xc9\x24\x14\x5a\xc8\x87\x2c\x0c\x1b\x5a\xdc\xd1\x09\x90\xc5\x22\xbb\x6e\xa0\xc8\xae\x40\x89\x99\x2c\x20\x3b\xa7\x35\x2c\x97\x61\xc8\xea\x46\x48\x4d\xe2\x30\x88\x0a\xc1\x35\x7c\xd4\x51\x18\x2c\x16\x2f\x08\x1b\x13\x9c\x72\xaa\x8e\x67\x4a\x8b\x9a\xfd\x0e\xe5\x72\x19\x06\xa4\x06\x4d\xef\x5f\x92\xe8\xee\x7f\x55\xc6\x44\x4e\x1b\x56\xd3\x62\xca\x38\xc8\x87\xdc\xa8\x43\x1b\xa6\x72\x33\x28\xbf\x7f\x19\x85\x41\x34\x61\x7a\x3a\xbb\xcd\x0a\x51\xe7\x74\xae\x2a\x7a\xab\xcc\xef\x0b\x05\xf2\x9e\x15\xd0\x7a\xcc\xce\x9d\x42\xd5\x80\x54\x66\x9a\x84\x71\x05\x85\x57\x07\xb8\x59\x7c\x4f\x69\x85\xe0\x63\x36\x89\x42\x42\xf6\x9a\xf6\xdb\x0c\x66\x50\x53\x4e\x27\x20\xcd\xe4\x9e\x3b\xfe\x61\x5e\x2e\x97\x21\x21\x85\x90\xd0\xf7\x43\x6e\x1e\x59\xab\xfb\x2b\x32\xca\x0b\x51\x19\x91\xb9\xd2\xb2\xa0\x0a\xec\x08\xa5\x25\xe3\x13\x63\x2c\x9d\xab\xa2\x62\xc0\xf5\x7e\x8a\xe2\x1c\xf7\xa3\x40\xe7\xf7\x20\x15\x13\x1c\xca\x5c\x3f\x34\x50\xe6\xeb\xb3\x32\x3a\x57\xf9\xfd\x4b\x5a\x35\x53\xba\x37\x36\xd6\x2d\x3d\x38\xf6\x9b\xef\x6f\xcc\xba\xce\x67\xa8\xf9\x8b\x89\xc8\xb5\x10\x95\xca\x0b\x5a\x4c\x21\x0a\xad\x43\x7e\x71\x6a\xee\xe7\x12\x4b\xbe\xa7\xcc\xee\x01\xea\xd9\x4d\x35\x13\x5c\x65\x97\x18\x31\x16\xe1\xc8\x87\xcd\xa6\x31\x3d\x6f\x24\xa1\x09\xce\x0b\x9f\x00\x24\x34\x12\x94\x01\x86\x50\x62\x62\x4b\x8a\xaa\x02\x49\xc4\xed\x07\x28\x34\x19\x8b\xf6\x52\x69\x21\x81\x14\x76\x0d\x22\x5d\x84\xaa\xd0\x40\xb8\x12\xa7\xb4\x9c\x15\x9a\x2c\xc2\x00\x59\x4d\xf0\x0f\x6f\xb2\x63\xfb\x13\x06\x5a\x34\xac\x38\xba\x3a\xb7\xef\x90\x5f\x61\x60\x81\x7b\x85\x7c\x26\xcf\xbb\xec\x46\x36\xbb\x57\xe1\xd2\x1a\x70\x0e\xf3\x76\xd1\x42\x02\xd5\xd0\xd5\xde\xa8\x3d\xa7\xba\xb0\x49\x6b\xab\xfe\x6e\x72\x19\x8e\x67\xbc\xe8\x4a\x8d\x9d\x01\x3d\xd5\x53\xb2\xa3\x96\x09\x79\xde\xaa\xb7\x58\x83\xd2\xc7\x26\x5a\x5c\x68\x59\x91\x83\x43\x14\x9c\x9d\xc3\xdc\x2d\x9c\xfa\x95\x8f\xde\x5c\x1f\xfb\xd0\x49\xc9\xcb\x6f\x93\x95\xff\x52\xf2\xbe\x9d\x6a\xe4\x64\x57\x30\x61\x4a\x83\x8c\xa3\x0d\xa9\x34\x4a\xfa\x8e\xce\x8e\xca\x32\x5e\x89\xeb\xd9\xf3\x13\xe5\x65\x05\xf2\x87\x19\x2f\x62\xab\xf3\xeb\xa6\xa4\x1a\x64\x92\xf4\x93\x9d\x04\x3d\x93\x9c\x3c\xf3\x06\x2f\xc2\xc0\xa1\x7f\xd0\x83\x3f\x0d\x83\x0d\x8e\x68\x0d\x3a\x20\xad\x2e\x6e\xb0\x0b\xe1\x9e\xd2\x07\x3d\x14\xd2\x30\x58\x3a\x52\x5c\x6b\x2a\xf5\x1b\x83\x3b\xa2\x0f\xca\x32\x81\x71\xa5\x29\x37\x60\x8b\x31\xb9\x40\x36\x5c\x0f\xb3\x81\xf2\x92\xd0\x42\x2b\x22\xec\xc6\x55\x23\x2d\xe2\x62\x05\x67\xd2\x59\x25\x2e\xf4\x47\xe2\x36\x24\xc3\x10\xf3\x9b\x12\x4e\x6b\x50\x0d\x2d\xc0\x51\x3b\x31\x0c\xf0\x4b\x38\xa7\x2a\x83\x9b\xcd\x23\x2d\x42\xa3\x7b\xe0\xba\xe3\x73\x65\xfc\x78\x54\x96\xe6\xda\x3a\xb2\xc8\x04\x3f\x2a\x4b\xe3\x19\x44\x02\xdf\x98\xc7\x78\x6f\xde\x9c\x40\x05\xdd\x37\x78\x6f\x7d\x14\x06\x26\xd3\x98\x85\xdb\x8c\x63\xe8\xf6\x98\x2a\x97\xd5\x4c\xd2\x6a\xb9\x8c\x3a\xb6\xa4\x64\xdd\x82\x94\x14\xd9\x00\x45\xb3\xab\xd1\xf5\x0d\xde\xc5\x86\x29\x66\xad\x0c\xbd\xf5\xac\x93\x2f\x33\xbf\xea\xcf\xcc\x20\xbc\x58\xa6\xa4\xd0\x1f\xb3\x13\xc1\xc1\x4c\x5b\x86\xe1\x20\x55\xf2\x9c\x74\xa9\x48\xe6\xac\xaa\x88\xa6\xae\x5c\xa9\x41\x29\x3a\x31\xa8\x4b\x51\xdb\x27\x96\x28\x16\xd5\x46\x8a\x02\x94\xea\xa0\xda\x15\xb4\x21\xda\x6b\x35\x59\x0b\xf2\x57\xb8\xc4\xf7\xa2\x7c\x48\x08\x48\x89\xf1\x5d\x89\xc9\x04\x5d\xeb\x04\x9c\xd9\x07\x61\x70\x4f\xa5\xf5\xe1\x63\x56\x84\x01\x1b\x1b\xf9\x99\xd5\x80\xde\x56\x60\x04\x05\x66\x18\x39\xb4\x2f\x3c\x1e\x26\x72\xdd\x1b\x14\x80\xaf\xcf\xfd\x7d\x18\x2c\x09\x54\x0a\xe7\xe3\x5e\x75\x6d\x52\x85\xcd\x0d\xed\x9e\x6d\xb0\xfe\x41\x48\xb4\xcc\x99\x8b\x58\xd9\xcb\x24\x0c\x5a\x8e\xaa\xd4\x58\x66\xad\xf1\xd2\x5a\xb8\x90\x1b\x98\x4c\xe2\x28\x4a\xb2\x33\xa6\x74\x8c\xc5\x96\xbd\xbe\x68\xec\xee\xb3\x58\x1a\x89\x6c\x6c\x25\x7d\x71\x48\x38\xab\xac\x7e\xce\x55\xd9\x1b\xa6\xa7\x23\xe3\xbe\x18\xa4\x4c\x32\xbc\x8c\xd0\xa1\x13\xd0\xda\x24\xee\xcd\xc4\x34\xb2\x7d\xde\x01\x29\xc3\x20\x30\x39\xc2\xc4\xfa\xfb\x15\x51\x8d\x01\xd2\xd6\xaf\xad\x61\xd9\xa9\x86\x5a\xa1\x22\x6c\xdc\x3e\xcf\xae\x35\xd5\x33\x65\x7e\x8a\xbb\xd3\x13\x72\x88\x1e\xbe\xa4\x52\x41\xe9\x10\x7f\x1b\xe1\xdb\x32\x7a\x87\xf3\x3d\x54\xb2\x9b\x61\xdb\x17\x1e\xa9\xde\x5b\x07\x17\x6a\xbb\xc4\x98\x64\x63\x4b\x0d\xe3\xa3\x28\x22\xcf\x9e\x75\x88\x82\x8f\xcc\x62\x94\x73\xa1\x71\x5b\x37\x56\xd5\xb4\x79\x8b\x2c\x7a\x87\x3f\x56\x21\xa7\xe0\x49\x74\xb0\x55\xfb\x74\x35\xd6\xe8\xb4\x65\xb4\x7d\xed\xc6\x7b\x0c\x6e\x1e\x9a\x0d\x53\x7a\x23\xec\xac\x25\x32\x60\xcb\x58\xf4\x7b\xf4\xce\x78\x3c\xba\xba\x38\x3b\xfb\xfe\xe8\xf8\xe7\xf7\xc7\x17\xaf\x2e\xcf\x46\x37\x23\xb4\x3d\x10\xb7\x1f\x5a\x42\x96\x36\x9d\x59\xed\xda\x7d\x72\x2d\xbe\xd2\xad\xd6\x27\x0e\xfa\x75\x5a\xf6\xd9\x64\x55\x0f\x7c\x90\x40\x21\x64\x69\xf6\x4a\x44\x01\x4a\x9b\xaa\xc7\xb1\x55\xac\x03\x4d\xea\x8a\xed\xcc\xbe\x37\x7e\x78\x43\x25\x67\x7c\x92\x12\x57\x50\x67\x37\xe2\x98\xd6\x50\xc5\xae\xa8\xce\x6e\xc4\x99\x98\x83\x8c\x77\xf0\x51\x92\x0c\x5a\xd6\x1f\x76\x05\x54\x09\x8e\x66\xba\xac\xb0\x07\x02\x27\x23\xe3\xf6\x6d\xfe\x9f\xd9\x74\x89\x93\xfe\x1c\x00\x3b\x18\xb1\xd3\xa0\xae\xa5\xff\x25\x80\x06\xc6\xc6\x43\xc2\x78\x21\xa1\x06\xae\xaf\x44\x55\xdd\xd2\xe2\xee\x58\xcc\xb8\xde\x84\xc6\x1e\xfe\xe9\x6c\x23\x7f\x83\xde\x01\xfd\x5c\xc8\x9a\x56\xff\xa2\x20\x0e\x71\x9b\x70\x86\x71\x56\x85\xcb\xb0\x53\x7d\x0f\xd4\xa7\xb6\x4a\x34\x66\x11\xc6\x35\xc8\x31\x2d\x60\xb1\xb4\x45\xa8\xdd\x3c\xc4\xed\x87\x2c\x7e\xbe\xb9\x14\x4b\xb2\x13\x80\xe6\x58\x34\x0f\x71\x12\xb6\xad\x0b\x17\x7a\xb8\x13\x3d\x2a\x4b\xdb\x85\xb2\x31\x51\x7e\x1f\xed\x9b\x63\x53\x4b\x44\xfe\xf8\x63\xeb\x80\x81\xdc\x63\x8b\xde\xb1\x36\x4a\xdb\xbe\x28\xf3\xdc\xb3\xb5\xa7\xef\x14\x12\x3b\x4e\xcc\x74\x33\xd3\xab\xc2\x65\xac\xb3\x63\xdb\xd9\xe1\x5e\x81\x83\xd6\x19\xe3\xba\x93\xac\x57\xb4\x0d\x96\x26\x63\x5f\x9b\xd8\x76\x71\xb0\x38\xc1\x9a\x88\x7c\xfd\x95\xfa\x3a\x4a\x89\xb2\xf7\x89\x5b\x02\xd1\xb3\x37\xcb\x70\x68\xcd\x53\x3e\x16\xe3\x38\xa2\x65\x09\xe5\x56\xd1\x64\xce\xf4\x94\x28\x57\xa8\xf4\x16\x4b\x5d\x65\x19\x3f\x47\x67\xb8\x72\xa6\x4c\x92\x6d\x4b\xde\x33\x98\x13\xaa\xc9\x54\xeb\x46\x1d\xe4\x79\x21\xb8\x12\x15\x64\x74\xae\x32\x5a\xd3\xdf\x05\xb7\x47\x1a\x45\x25\x66\xe5\xd8\x04\x82\x81\x3d\x9f\x8a\x1a\xbe\xfb\x9f\xdc\xea\x91\x97\xa0\x29\xab\xbe\x43\xa5\xca\xc3\xaf\x54\xb4\x45\x95\x30\x08\xde\x23\x4c\xeb\x89\x65\x05\xaf\x37\x67\x55\x34\x6d\x14\x98\x92\xe8\xf8\x6a\x74\x74\x33\x7a\x7f\x7a\xfe\xfe\xf2\xea\xe2\xc7\xab\xd1\xf5\x75\x94\x92\x28\xda\x50\x7f\xee\x82\xb6\x07\xdb\xea\x67\xc0\x56\x18\xbe\x18\x90\x06\x43\xec\x4d\x2b\x65\xdb\xd7\x0d\xe7\x2f\x36\x32\xba\x66\xf5\xfa\xe6\x4d\xb1\x8b\x0d\x49\x2c\xaa\xf2\xc2\x24\x26\x0e\xf3\x8b\x81\x48\x16\xc2\x86\xb2\x1d\xb4\x7b\x34\x07\xdc\x4e\x43\x99\xfb\x24\x01\x9b\x00\xf6\x0b\x5e\xe3\x69\xcc\x44\x5c\x24\xd6\x67\x4f\xe7\x12\xb4\xdd\xa7\x13\x77\xca\x9a\x9d\x2a\x0b\xf6\xb1\xa8\x1b\x53\xfc\xc5\x62\x83\x26\x29\x19\xd3\x4a\x41\x62\x8a\xe8\x2f\xdc\xb9\xac\x35\x63\xf4\xdb\x8c\x56\x66\x9a\xb7\xd1\x24\xf5\xe5\x32\x35\x36\xf5\x1f\x25\xdb\xb2\x8e\x10\x3b\xa5\x9d\xd7\x9e\xd4\xc5\x9d\x33\xfd\xb3\x24\x9e\x96\x8b\x4f\x67\x07\x0e\x73\xd2\x50\x49\x6b\x45\xbe\xfa\xe6\xde\x76\xbf\xa2\x2a\xcd\x75\x64\x6d\xc6\xe8\xe2\xc2\x98\xb4\x6f\x86\xc2\x90\xdd\x25\x47\x39\x0d\x5c\x8a\x6a\x97\xfd\x0f\xc9\x51\xc2\xdb\xe3\x2e\x9e\xcc\x52\xaf\x2f\x4f\xfe\xf2\x2c\x85\x1f\x05\x9e\x48\x53\x3e\xe8\xd6\x98\x6e\xa8\xbb\x43\xba\xc2\xf3\xa5\xbf\xac\xda\xc0\xe5\x8c\x35\xbb\x14\x06\x41\x27\x2c\x4f\x3a\x9d\x63\x12\x0e\xf8\x7c\xaf\x68\xb4\x7d\xe8\x1e\x65\x80\xaf\x4c\xb1\x98\xdb\x40\x73\x6c\x6e\xb7\xc7\x56\x57\xe6\x0e\xe0\x7a\x7f\x6d\xdb\x86\xc2\x6d\x1f\xd2\x2c\xe8\x5b\x3b\x8e\xf5\x33\x33\x7b\x9a\x81\x71\x30\x74\x16\xfa\xf4\x99\xd9\x27\x1c\x61\xf9\xd3\x96\x5d\x0f\xb0\x56\x5d\x52\xf6\x23\xe8\x18\x7b\x1a\x77\x98\xf5\x23\xf4\xce\xb2\x1e\x13\xe6\xb3\x9d\x64\x75\x9b\x16\xac\xf5\x71\x94\x89\x0a\x7b\x88\xe5\x67\x75\xb7\xf2\xee\x20\x27\xbc\x0b\x4e\xe7\xe8\x69\xc3\x88\x6f\x5e\x86\xe1\x2a\xcd\xed\xee\x28\x57\xa0\x74\xa5\xff\x59\xf7\xb4\x99\xcb\x0b\x1b\x70\x47\xbf\xf3\x41\x3e\x0e\x34\xa4\x7b\xb1\x30\x6d\x0b\xe8\xce\xbd\xa9\x65\xfc\xad\xb4\x1d\x58\xcb\xd9\x6d\x09\x2c\x45\x46\x27\x7f\x53\x7a\x80\xd2\x9c\x55\xe9\x27\xf1\x7a\xb8\xe2\x74\x70\xed\x32\x18\x7b\x69\x1b\x0d\xe6\x62\x78\x4a\x7b\xee\xeb\x79\x81\x25\xef\xa6\x02\x54\xf5\xcb\x4d\xbb\x79\x74\x76\x23\xc7\xc0\xee\x42\x7e\xa7\xc7\xb2\x40\xf5\xea\x45\x03\x0a\x3e\x8e\x3f\xfd\xc8\xdc\x2d\x10\xf9\xa3\x03\x9b\xe9\xf1\x10\xfc\xcb\x46\x8a\xc6\x2c\x8a\xb8\x5d\xb8\x0a\xa5\x98\x42\x4d\xb3\x4b\x29\x1a\x90\x9a\x81\x22\xf6\x73\x9b\xdb\x12\xec\x9c\xec\x06\xea\xa6\xa2\xda\xff\x6b\x45\xb0\x58\xe0\xf3\x9f\xe1\xc1\xf0\xdf\x32\xda\xfb\x6a\x35\x36\x8e\xfc\x38\xf7\x0c\xec\x17\x25\x3f\xf0\x84\x6a\xba\xb8\xb8\xfd\x70\xb0\xe6\xa8\x63\xf7\xe5\x10\xdd\xb8\xec\x7e\x97\xb0\x90\x39\xbd\xbd\xec\x6b\xfb\xc1\xd9\x6a\x42\x0e\x49\x4f\x33\xff\x05\xd1\xed\x90\x7b\x88\x71\x5e\x7c\xfb\xc8\x02\x3b\x20\x7a\xb7\xf6\x6d\xb2\x73\xbd\xfc\xf7\xce\xa9\xfd\x78\xdc\x8f\xe2\x68\x93\x7a\xe0\xc5\x51\x59\x32\x93\x45\x68\xe5\x63\x4d\x0d\xb2\x7e\x2f\x3a\x9b\x1a\xc8\xdb\x60\x16\xe9\x9a\xe0\xf9\xdc\xd9\x0e\xfa\xa4\xe9\x6e\x0e\x8f\x3f\x11\x7c\xd2\xde\xf0\x77\xf6\xff\x4c\xd9\x7f\x4b\x8a\x74\xe9\xd1\x45\xcd\x2e\xc5\xfa\xe0\x0a\xab\xf9\x6f\x28\xd3\xaf\xb9\x66\x95\x15\x81\xd2\x4a\xdc\x5d\x7a\xec\xc1\xc9\x9e\x39\xdb\xb9\xbd\xce\x22\x45\xb6\xb5\x35\xc4\x38\xaf\x43\x8e\xbf\x90\x03\x9d\x63\x33\x64\x81\x3f\x4f\xdb\x95\x07\x8f\x0a\x30\xf7\x3d\x75\x78\xc7\x36\xdd\xc4\xaa\x7d\x18\xf0\x5f\x76\x8d\xff\xe8\x64\xb6\x16\xe5\x2f\x0f\x0e\xc9\x5b\xff\xf1\x72\xb9\x58\xb8\xf4\xd9\xd9\xad\xba\x5f\x71\x77\x12\xdd\x36\x8f\xf0\xdb\x6a\xb6\x3d\xd7\x21\xd1\xe8\xa3\x06\xc9\xd1\x43\x11\x0e\xfd\x52\xae\x75\x57\x9d\x4d\x0c\x4f\x8e\xbb\x93\xdc\x3a\x71\xa7\xd1\x1c\x3c\xa5\x8c\xba\x82\xbb\x02\xec\xde\x17\x2d\x16\x31\xe3\x25\x7c\xec\x28\x78\x29\xa4\x56\xe4\xdb\xc4\x5e\x60\xfc\xb4\x4e\x3a\x24\xb4\x69\x80\x97\xb1\x7f\x92\x92\xc7\x8a\xf7\xda\xb9\xfe\xe5\xae\xa8\xb4\x12\xb7\x8e\x3b\x24\x5e\x0d\x8f\xd7\xd3\xd0\x23\x89\x5f\xd1\xc6\x2c\x83\xce\xab\xcd\xcd\x67\x82\xbf\x27\x7e\x08\x55\x53\x65\x6c\xfc\x62\xde\x59\x8e\x69\xa8\xcd\xb8\xd5\x7c\x3b\xd3\x6e\xef\x06\x53\xf3\x1e\xab\x8a\xe8\x80\xb4\x0f\x7e\xa1\xd5\xcc\x22\xbb\x5e\x04\xec\xc4\xaf\x56\xf9\x27\x59\x35\x6c\x57\xe2\xff\xc9\xce\x7a\xb4\xe5\xca\xea\xd9\x2e\x6c\xd9\x1d\xbd\xad\x24\xe9\x8c\xf4\xdb\x9f\xd1\xa0\x25\xca\xee\x55\x51\x2f\x7b\xad\xd5\x45\x3b\x64\x2b\x7f\x92\xf9\xe8\x4b\xd9\x3f\x03\x00\x00\xff\xff\x14\x2d\xec\x35\x46\x2d\x00\x00")

func operatorGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_operatorGoTempl,
		"operator.go.templ",
	)
}

func operatorGoTempl() (*asset, error) {
	bytes, err := operatorGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "operator.go.templ", size: 11590, mode: os.FileMode(436), modTime: time.Unix(1548177925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\xdb\x36\x10\x3d\x8b\xbf\x62\x2a\x04\xa8\x05\x78\x45\xec\xad\x08\x9a\x1e\xda\x6c\x12\x23\xc1\x6e\x91\x35\x90\x63\x43\x4b\x63\x69\x60\x8a\x24\xc8\x91\x1d\x43\xd0\x7f\x2f\x48\x7d\x04\xd8\x22\xdd\x8d\x2e\x94\x46\x9c\xf7\xe6\x3d\xce\x50\x4a\xf8\x63\x7a\xe0\xed\x03\xdc\x3f\xec\xe1\xee\xed\x6e\x0f\xfb\x0f\xbb\x47\x78\xb7\xfb\x74\x07\xbf\xaf\x8f\x90\x12\xf6\x2d\x05\x38\x92\x46\xa0\x00\xaa\x67\xdb\xa0\x41\xaf\x18\x6b\x38\x93\x82\xaf\xea\x12\x6e\xac\x8b\x11\xeb\x6f\x2a\x5b\x63\x83\x06\x9c\xb7\x15\x86\xf0\x35\x02\xec\x8e\x70\xb5\xfd\xaf\x35\x68\x3a\x21\x70\x8b\x50\xb5\xca\x34\x08\xca\x5c\xb9\x25\xd3\x80\x3a\xd8\x9e\x81\x57\xa2\x4e\x9d\x10\xb0\x26\x0e\xc0\x36\x65\x94\x8c\x9d\xd3\x11\x6d\xaa\xc4\xa4\xa8\x3b\x35\x72\x66\x94\x2a\x04\xe4\x00\x35\x79\xac\xd8\xfa\x6b\x29\x84\x53\xd5\x49\x35\x08\x2d\x6a\x87\x3e\x08\x41\x9d\xb3\x9e\x61\x23\x32\x75\x09\x95\x26\x34\x0c\x79\x43\xdc\xf6\x87\xb2\xb2\x9d\x54\x97\xa0\xd5\x21\xc4\xf5\x26\xa0\x3f\x53\x85\xab\x34\x99\xc8\x52\xce\xbc\x04\x64\x79\x46\x1f\xc8\x1a\xac\x25\x5f\x1d\xd6\xf2\x69\x56\xa9\x2e\x41\x9e\x6f\x95\x76\xad\xba\xcd\x45\xf6\x73\x6c\xd6\x1c\xa9\xc9\x45\xd6\x21\xab\xf3\x2d\xe4\xa7\xdf\x42\x49\x56\x2a\x47\x9d\xaa\x5a\x32\xe8\xaf\x69\xa3\x72\x14\x64\xdc\x24\xcf\xb7\xb9\x28\x44\xf4\xe9\x1e\x2f\xf0\x85\xb4\x06\x8f\xdc\x7b\xb3\x98\x10\x0d\x3d\x20\xb8\x68\x57\x0d\x64\x66\x7f\x93\xbd\x8a\x31\x88\x63\x6f\xaa\x98\xbc\x29\xe0\xc3\x9c\x32\x88\x6c\x06\x99\x23\x83\xc8\x00\x3e\xf6\x07\xf4\x06\x19\xc3\x67\x0c\xb6\xf7\x15\xde\xab\x0e\x5f\xff\x20\xbe\x15\x59\x36\x0c\x37\xe0\xd3\xc9\xbf\x22\x53\xe3\xb7\x2d\xbc\x42\x8d\x5d\x3c\x85\xd7\x6f\xa0\xdc\x31\x76\x01\xc6\x51\x64\xd9\x7b\xe4\x61\x58\x7e\x96\x8f\x0e\xab\xf2\x23\x99\x7a\x1c\xff\xbc\x4e\x24\xcf\x6c\x58\xd8\x30\x86\x44\x36\x8a\x31\x79\xb2\x08\xaa\xf1\x48\x06\x03\x28\xad\x93\xfa\x29\x0e\x51\x3a\x93\x35\x01\xb8\x55\x0c\xca\x23\xe0\x37\x67\xa3\x51\xff\xb1\x29\x1e\xf7\x8a\x17\xd8\xf7\x15\xc3\x20\x7e\xe4\x4a\x82\xde\x04\xf6\x64\x9a\x02\x96\x17\xf1\x72\x47\x9e\xd1\x3b\xe1\x4f\xfd\x52\xfe\x95\x96\x2d\x4c\x2c\xcb\x5a\xc0\x86\x0c\xa3\x3f\xaa\x0a\x87\x71\x0b\xe8\xbd\xf5\x73\x09\x93\x4d\xa3\x10\x2f\xad\x47\xca\xe7\x4e\x00\x2e\xb1\xf7\x8e\x64\xea\x64\x9c\x9f\xcd\x80\xc3\x15\x8c\xea\x70\x6a\xb3\x67\x30\x66\x41\xf0\x44\x57\xcc\x5f\xc5\xc5\x8f\xe0\x54\x85\xff\x2b\x33\xb6\xb0\xb6\x4d\x83\x3e\xea\x98\xf1\x3e\xa5\x80\xc8\xa6\x69\x7e\x44\xde\xc2\x3f\xf1\xf7\x7a\x37\x94\xf7\x78\x79\x67\xfd\xc4\xbb\xb8\xfb\xf9\xee\x71\x3f\x45\x8a\x38\x16\x93\xac\xc4\x93\xa0\x17\xac\xf2\xa9\xb0\xbf\x75\xef\x95\x8e\xb2\xc6\x71\xb3\x56\x5d\x94\xef\x91\xd3\xe7\x16\xa6\x29\x8f\x81\x07\x97\xda\x70\x18\x0b\x91\xd1\x31\x61\xff\xf2\x06\x0c\xe9\xa8\x63\x16\x52\x7e\x21\x6e\xef\xa2\xba\x0d\x7a\x5f\x94\xd3\x6b\x9e\xf4\x42\x83\xcc\xf1\x62\x0d\xb1\x97\xad\xa3\x2a\x2f\x44\xb6\x0c\x71\x9e\xa7\x72\xe3\x58\xac\x83\xfd\x5d\x88\x21\x2d\x46\xf1\xbd\x2b\xfe\x0d\x00\x00\xff\xff\x2d\x5b\xdf\x7e\x2e\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1582, mode: os.FileMode(436), modTime: time.Unix(1544578164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(436), modTime: time.Unix(1544578164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-service-operator.yaml.templ": awsServiceOperatorYamlTempl,
	"base.go.templ":                   baseGoTempl,
	"cft.go.templ":                    cftGoTempl,
	"operator.go.templ":               operatorGoTempl,
	"template_functions.go.templ":     template_functionsGoTempl,
	"types.go.templ":                  typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"aws-service-operator.yaml.templ": &bintree{awsServiceOperatorYamlTempl, map[string]*bintree{}},
	"base.go.templ":                   &bintree{baseGoTempl, map[string]*bintree{}},
	"cft.go.templ":                    &bintree{cftGoTempl, map[string]*bintree{}},
	"operator.go.templ":               &bintree{operatorGoTempl, map[string]*bintree{}},
	"template_functions.go.templ":     &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ":                  &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
