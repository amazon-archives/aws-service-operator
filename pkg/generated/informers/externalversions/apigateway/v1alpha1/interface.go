/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "awsoperator.io/pkg/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Accounts returns a AccountInformer.
	Accounts() AccountInformer
	// ApiGatewayResources returns a ApiGatewayResourceInformer.
	ApiGatewayResources() ApiGatewayResourceInformer
	// ApiKeys returns a ApiKeyInformer.
	ApiKeys() ApiKeyInformer
	// Authorizers returns a AuthorizerInformer.
	Authorizers() AuthorizerInformer
	// BasePathMappings returns a BasePathMappingInformer.
	BasePathMappings() BasePathMappingInformer
	// ClientCertificates returns a ClientCertificateInformer.
	ClientCertificates() ClientCertificateInformer
	// Deployments returns a DeploymentInformer.
	Deployments() DeploymentInformer
	// DocumentationParts returns a DocumentationPartInformer.
	DocumentationParts() DocumentationPartInformer
	// DocumentationVersions returns a DocumentationVersionInformer.
	DocumentationVersions() DocumentationVersionInformer
	// DomainNames returns a DomainNameInformer.
	DomainNames() DomainNameInformer
	// GatewayResponses returns a GatewayResponseInformer.
	GatewayResponses() GatewayResponseInformer
	// Methods returns a MethodInformer.
	Methods() MethodInformer
	// Models returns a ModelInformer.
	Models() ModelInformer
	// RequestValidators returns a RequestValidatorInformer.
	RequestValidators() RequestValidatorInformer
	// RestApis returns a RestApiInformer.
	RestApis() RestApiInformer
	// Stages returns a StageInformer.
	Stages() StageInformer
	// UsagePlans returns a UsagePlanInformer.
	UsagePlans() UsagePlanInformer
	// UsagePlanKeys returns a UsagePlanKeyInformer.
	UsagePlanKeys() UsagePlanKeyInformer
	// VpcLinks returns a VpcLinkInformer.
	VpcLinks() VpcLinkInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Accounts returns a AccountInformer.
func (v *version) Accounts() AccountInformer {
	return &accountInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ApiGatewayResources returns a ApiGatewayResourceInformer.
func (v *version) ApiGatewayResources() ApiGatewayResourceInformer {
	return &apiGatewayResourceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ApiKeys returns a ApiKeyInformer.
func (v *version) ApiKeys() ApiKeyInformer {
	return &apiKeyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Authorizers returns a AuthorizerInformer.
func (v *version) Authorizers() AuthorizerInformer {
	return &authorizerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BasePathMappings returns a BasePathMappingInformer.
func (v *version) BasePathMappings() BasePathMappingInformer {
	return &basePathMappingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ClientCertificates returns a ClientCertificateInformer.
func (v *version) ClientCertificates() ClientCertificateInformer {
	return &clientCertificateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Deployments returns a DeploymentInformer.
func (v *version) Deployments() DeploymentInformer {
	return &deploymentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DocumentationParts returns a DocumentationPartInformer.
func (v *version) DocumentationParts() DocumentationPartInformer {
	return &documentationPartInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DocumentationVersions returns a DocumentationVersionInformer.
func (v *version) DocumentationVersions() DocumentationVersionInformer {
	return &documentationVersionInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DomainNames returns a DomainNameInformer.
func (v *version) DomainNames() DomainNameInformer {
	return &domainNameInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// GatewayResponses returns a GatewayResponseInformer.
func (v *version) GatewayResponses() GatewayResponseInformer {
	return &gatewayResponseInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Methods returns a MethodInformer.
func (v *version) Methods() MethodInformer {
	return &methodInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Models returns a ModelInformer.
func (v *version) Models() ModelInformer {
	return &modelInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RequestValidators returns a RequestValidatorInformer.
func (v *version) RequestValidators() RequestValidatorInformer {
	return &requestValidatorInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RestApis returns a RestApiInformer.
func (v *version) RestApis() RestApiInformer {
	return &restApiInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Stages returns a StageInformer.
func (v *version) Stages() StageInformer {
	return &stageInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// UsagePlans returns a UsagePlanInformer.
func (v *version) UsagePlans() UsagePlanInformer {
	return &usagePlanInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// UsagePlanKeys returns a UsagePlanKeyInformer.
func (v *version) UsagePlanKeys() UsagePlanKeyInformer {
	return &usagePlanKeyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpcLinks returns a VpcLinkInformer.
func (v *version) VpcLinks() VpcLinkInformer {
	return &vpcLinkInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
