/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	apigatewayv1alpha1 "awsoperator.io/pkg/apis/apigateway/v1alpha1"
	apigatewayv2v1alpha1 "awsoperator.io/pkg/apis/apigatewayv2/v1alpha1"
	applicationautoscalingv1alpha1 "awsoperator.io/pkg/apis/applicationautoscaling/v1alpha1"
	appmeshv1alpha1 "awsoperator.io/pkg/apis/appmesh/v1alpha1"
	appstreamv1alpha1 "awsoperator.io/pkg/apis/appstream/v1alpha1"
	appsyncv1alpha1 "awsoperator.io/pkg/apis/appsync/v1alpha1"
	askv1alpha1 "awsoperator.io/pkg/apis/ask/v1alpha1"
	athenav1alpha1 "awsoperator.io/pkg/apis/athena/v1alpha1"
	autoscalingv1alpha1 "awsoperator.io/pkg/apis/autoscaling/v1alpha1"
	autoscalingplansv1alpha1 "awsoperator.io/pkg/apis/autoscalingplans/v1alpha1"
	batchv1alpha1 "awsoperator.io/pkg/apis/batch/v1alpha1"
	budgetsv1alpha1 "awsoperator.io/pkg/apis/budgets/v1alpha1"
	cdkv1alpha1 "awsoperator.io/pkg/apis/cdk/v1alpha1"
	certificatemanagerv1alpha1 "awsoperator.io/pkg/apis/certificatemanager/v1alpha1"
	cloud9v1alpha1 "awsoperator.io/pkg/apis/cloud9/v1alpha1"
	cloudformationv1alpha1 "awsoperator.io/pkg/apis/cloudformation/v1alpha1"
	cloudfrontv1alpha1 "awsoperator.io/pkg/apis/cloudfront/v1alpha1"
	cloudtrailv1alpha1 "awsoperator.io/pkg/apis/cloudtrail/v1alpha1"
	cloudwatchv1alpha1 "awsoperator.io/pkg/apis/cloudwatch/v1alpha1"
	codebuildv1alpha1 "awsoperator.io/pkg/apis/codebuild/v1alpha1"
	codecommitv1alpha1 "awsoperator.io/pkg/apis/codecommit/v1alpha1"
	codedeployv1alpha1 "awsoperator.io/pkg/apis/codedeploy/v1alpha1"
	codepipelinev1alpha1 "awsoperator.io/pkg/apis/codepipeline/v1alpha1"
	cognitov1alpha1 "awsoperator.io/pkg/apis/cognito/v1alpha1"
	configv1alpha1 "awsoperator.io/pkg/apis/config/v1alpha1"
	datapipelinev1alpha1 "awsoperator.io/pkg/apis/datapipeline/v1alpha1"
	daxv1alpha1 "awsoperator.io/pkg/apis/dax/v1alpha1"
	directoryservicev1alpha1 "awsoperator.io/pkg/apis/directoryservice/v1alpha1"
	dlmv1alpha1 "awsoperator.io/pkg/apis/dlm/v1alpha1"
	dmsv1alpha1 "awsoperator.io/pkg/apis/dms/v1alpha1"
	docdbv1alpha1 "awsoperator.io/pkg/apis/docdb/v1alpha1"
	dynamodbv1alpha1 "awsoperator.io/pkg/apis/dynamodb/v1alpha1"
	ec2v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	ecrv1alpha1 "awsoperator.io/pkg/apis/ecr/v1alpha1"
	ecsv1alpha1 "awsoperator.io/pkg/apis/ecs/v1alpha1"
	efsv1alpha1 "awsoperator.io/pkg/apis/efs/v1alpha1"
	eksv1alpha1 "awsoperator.io/pkg/apis/eks/v1alpha1"
	elasticachev1alpha1 "awsoperator.io/pkg/apis/elasticache/v1alpha1"
	elasticbeanstalkv1alpha1 "awsoperator.io/pkg/apis/elasticbeanstalk/v1alpha1"
	elasticloadbalancingv1alpha1 "awsoperator.io/pkg/apis/elasticloadbalancing/v1alpha1"
	elasticloadbalancingv2v1alpha1 "awsoperator.io/pkg/apis/elasticloadbalancingv2/v1alpha1"
	elasticsearchv1alpha1 "awsoperator.io/pkg/apis/elasticsearch/v1alpha1"
	emrv1alpha1 "awsoperator.io/pkg/apis/emr/v1alpha1"
	eventsv1alpha1 "awsoperator.io/pkg/apis/events/v1alpha1"
	fsxv1alpha1 "awsoperator.io/pkg/apis/fsx/v1alpha1"
	gameliftv1alpha1 "awsoperator.io/pkg/apis/gamelift/v1alpha1"
	gluev1alpha1 "awsoperator.io/pkg/apis/glue/v1alpha1"
	greengrassv1alpha1 "awsoperator.io/pkg/apis/greengrass/v1alpha1"
	guarddutyv1alpha1 "awsoperator.io/pkg/apis/guardduty/v1alpha1"
	iamv1alpha1 "awsoperator.io/pkg/apis/iam/v1alpha1"
	inspectorv1alpha1 "awsoperator.io/pkg/apis/inspector/v1alpha1"
	iotv1alpha1 "awsoperator.io/pkg/apis/iot/v1alpha1"
	iot1clickv1alpha1 "awsoperator.io/pkg/apis/iot1click/v1alpha1"
	iotanalyticsv1alpha1 "awsoperator.io/pkg/apis/iotanalytics/v1alpha1"
	kinesisv1alpha1 "awsoperator.io/pkg/apis/kinesis/v1alpha1"
	kinesisanalyticsv1alpha1 "awsoperator.io/pkg/apis/kinesisanalytics/v1alpha1"
	kinesisanalyticsv2v1alpha1 "awsoperator.io/pkg/apis/kinesisanalyticsv2/v1alpha1"
	kinesisfirehosev1alpha1 "awsoperator.io/pkg/apis/kinesisfirehose/v1alpha1"
	kmsv1alpha1 "awsoperator.io/pkg/apis/kms/v1alpha1"
	lambdav1alpha1 "awsoperator.io/pkg/apis/lambda/v1alpha1"
	logsv1alpha1 "awsoperator.io/pkg/apis/logs/v1alpha1"
	mediastorev1alpha1 "awsoperator.io/pkg/apis/mediastore/v1alpha1"
	mqv1alpha1 "awsoperator.io/pkg/apis/mq/v1alpha1"
	neptunev1alpha1 "awsoperator.io/pkg/apis/neptune/v1alpha1"
	opsworksv1alpha1 "awsoperator.io/pkg/apis/opsworks/v1alpha1"
	opsworkscmv1alpha1 "awsoperator.io/pkg/apis/opsworkscm/v1alpha1"
	pinpointemailv1alpha1 "awsoperator.io/pkg/apis/pinpointemail/v1alpha1"
	ramv1alpha1 "awsoperator.io/pkg/apis/ram/v1alpha1"
	rdsv1alpha1 "awsoperator.io/pkg/apis/rds/v1alpha1"
	redshiftv1alpha1 "awsoperator.io/pkg/apis/redshift/v1alpha1"
	robomakerv1alpha1 "awsoperator.io/pkg/apis/robomaker/v1alpha1"
	route53v1alpha1 "awsoperator.io/pkg/apis/route53/v1alpha1"
	route53resolverv1alpha1 "awsoperator.io/pkg/apis/route53resolver/v1alpha1"
	s3v1alpha1 "awsoperator.io/pkg/apis/s3/v1alpha1"
	sagemakerv1alpha1 "awsoperator.io/pkg/apis/sagemaker/v1alpha1"
	sdbv1alpha1 "awsoperator.io/pkg/apis/sdb/v1alpha1"
	secretsmanagerv1alpha1 "awsoperator.io/pkg/apis/secretsmanager/v1alpha1"
	servicecatalogv1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	servicediscoveryv1alpha1 "awsoperator.io/pkg/apis/servicediscovery/v1alpha1"
	sesv1alpha1 "awsoperator.io/pkg/apis/ses/v1alpha1"
	snsv1alpha1 "awsoperator.io/pkg/apis/sns/v1alpha1"
	sqsv1alpha1 "awsoperator.io/pkg/apis/sqs/v1alpha1"
	ssmv1alpha1 "awsoperator.io/pkg/apis/ssm/v1alpha1"
	stepfunctionsv1alpha1 "awsoperator.io/pkg/apis/stepfunctions/v1alpha1"
	transferv1alpha1 "awsoperator.io/pkg/apis/transfer/v1alpha1"
	wafv1alpha1 "awsoperator.io/pkg/apis/waf/v1alpha1"
	wafregionalv1alpha1 "awsoperator.io/pkg/apis/wafregional/v1alpha1"
	workspacesv1alpha1 "awsoperator.io/pkg/apis/workspaces/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	serializer "k8s.io/apimachinery/pkg/runtime/serializer"
	utilruntime "k8s.io/apimachinery/pkg/util/runtime"
)

var scheme = runtime.NewScheme()
var codecs = serializer.NewCodecFactory(scheme)
var parameterCodec = runtime.NewParameterCodec(scheme)
var localSchemeBuilder = runtime.SchemeBuilder{
	apigatewayv1alpha1.AddToScheme,
	apigatewayv2v1alpha1.AddToScheme,
	applicationautoscalingv1alpha1.AddToScheme,
	appmeshv1alpha1.AddToScheme,
	appstreamv1alpha1.AddToScheme,
	appsyncv1alpha1.AddToScheme,
	askv1alpha1.AddToScheme,
	athenav1alpha1.AddToScheme,
	autoscalingv1alpha1.AddToScheme,
	autoscalingplansv1alpha1.AddToScheme,
	batchv1alpha1.AddToScheme,
	budgetsv1alpha1.AddToScheme,
	cdkv1alpha1.AddToScheme,
	certificatemanagerv1alpha1.AddToScheme,
	cloud9v1alpha1.AddToScheme,
	cloudformationv1alpha1.AddToScheme,
	cloudfrontv1alpha1.AddToScheme,
	cloudtrailv1alpha1.AddToScheme,
	cloudwatchv1alpha1.AddToScheme,
	codebuildv1alpha1.AddToScheme,
	codecommitv1alpha1.AddToScheme,
	codedeployv1alpha1.AddToScheme,
	codepipelinev1alpha1.AddToScheme,
	cognitov1alpha1.AddToScheme,
	configv1alpha1.AddToScheme,
	datapipelinev1alpha1.AddToScheme,
	daxv1alpha1.AddToScheme,
	directoryservicev1alpha1.AddToScheme,
	dlmv1alpha1.AddToScheme,
	dmsv1alpha1.AddToScheme,
	docdbv1alpha1.AddToScheme,
	dynamodbv1alpha1.AddToScheme,
	ec2v1alpha1.AddToScheme,
	ecrv1alpha1.AddToScheme,
	ecsv1alpha1.AddToScheme,
	efsv1alpha1.AddToScheme,
	eksv1alpha1.AddToScheme,
	elasticachev1alpha1.AddToScheme,
	elasticbeanstalkv1alpha1.AddToScheme,
	elasticloadbalancingv1alpha1.AddToScheme,
	elasticloadbalancingv2v1alpha1.AddToScheme,
	elasticsearchv1alpha1.AddToScheme,
	emrv1alpha1.AddToScheme,
	eventsv1alpha1.AddToScheme,
	fsxv1alpha1.AddToScheme,
	gameliftv1alpha1.AddToScheme,
	gluev1alpha1.AddToScheme,
	greengrassv1alpha1.AddToScheme,
	guarddutyv1alpha1.AddToScheme,
	iamv1alpha1.AddToScheme,
	inspectorv1alpha1.AddToScheme,
	iotv1alpha1.AddToScheme,
	iot1clickv1alpha1.AddToScheme,
	iotanalyticsv1alpha1.AddToScheme,
	kinesisv1alpha1.AddToScheme,
	kinesisanalyticsv1alpha1.AddToScheme,
	kinesisanalyticsv2v1alpha1.AddToScheme,
	kinesisfirehosev1alpha1.AddToScheme,
	kmsv1alpha1.AddToScheme,
	lambdav1alpha1.AddToScheme,
	logsv1alpha1.AddToScheme,
	mediastorev1alpha1.AddToScheme,
	mqv1alpha1.AddToScheme,
	neptunev1alpha1.AddToScheme,
	opsworksv1alpha1.AddToScheme,
	opsworkscmv1alpha1.AddToScheme,
	pinpointemailv1alpha1.AddToScheme,
	ramv1alpha1.AddToScheme,
	rdsv1alpha1.AddToScheme,
	redshiftv1alpha1.AddToScheme,
	robomakerv1alpha1.AddToScheme,
	route53v1alpha1.AddToScheme,
	route53resolverv1alpha1.AddToScheme,
	s3v1alpha1.AddToScheme,
	sagemakerv1alpha1.AddToScheme,
	sdbv1alpha1.AddToScheme,
	secretsmanagerv1alpha1.AddToScheme,
	servicecatalogv1alpha1.AddToScheme,
	servicediscoveryv1alpha1.AddToScheme,
	sesv1alpha1.AddToScheme,
	snsv1alpha1.AddToScheme,
	sqsv1alpha1.AddToScheme,
	ssmv1alpha1.AddToScheme,
	stepfunctionsv1alpha1.AddToScheme,
	transferv1alpha1.AddToScheme,
	wafv1alpha1.AddToScheme,
	wafregionalv1alpha1.AddToScheme,
	workspacesv1alpha1.AddToScheme,
}

// AddToScheme adds all types of this clientset into the given scheme. This allows composition
// of clientsets, like in:
//
//   import (
//     "k8s.io/client-go/kubernetes"
//     clientsetscheme "k8s.io/client-go/kubernetes/scheme"
//     aggregatorclientsetscheme "k8s.io/kube-aggregator/pkg/client/clientset_generated/clientset/scheme"
//   )
//
//   kclientset, _ := kubernetes.NewForConfig(c)
//   _ = aggregatorclientsetscheme.AddToScheme(clientsetscheme.Scheme)
//
// After this, RawExtensions in Kubernetes types will serialize kube-aggregator types
// correctly.
var AddToScheme = localSchemeBuilder.AddToScheme

func init() {
	v1.AddToGroupVersion(scheme, schema.GroupVersion{Version: "v1"})
	utilruntime.Must(AddToScheme(scheme))
}
