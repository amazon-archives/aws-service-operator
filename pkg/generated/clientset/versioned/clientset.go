/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by client-gen. DO NOT EDIT.

package versioned

import (
	apigatewayv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/apigateway/v1alpha1"
	apigatewayv2v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/apigatewayv2/v1alpha1"
	applicationautoscalingv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/applicationautoscaling/v1alpha1"
	appmeshv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/appmesh/v1alpha1"
	appstreamv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/appstream/v1alpha1"
	appsyncv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/appsync/v1alpha1"
	askv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ask/v1alpha1"
	athenav1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/athena/v1alpha1"
	autoscalingv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/autoscaling/v1alpha1"
	autoscalingplansv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/autoscalingplans/v1alpha1"
	batchv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/batch/v1alpha1"
	budgetsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/budgets/v1alpha1"
	cdkv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cdk/v1alpha1"
	certificatemanagerv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/certificatemanager/v1alpha1"
	cloud9v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cloud9/v1alpha1"
	cloudformationv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cloudformation/v1alpha1"
	cloudfrontv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cloudfront/v1alpha1"
	cloudtrailv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cloudtrail/v1alpha1"
	cloudwatchv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cloudwatch/v1alpha1"
	codebuildv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/codebuild/v1alpha1"
	codecommitv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/codecommit/v1alpha1"
	codedeployv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/codedeploy/v1alpha1"
	codepipelinev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/codepipeline/v1alpha1"
	cognitov1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/cognito/v1alpha1"
	configv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/config/v1alpha1"
	datapipelinev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/datapipeline/v1alpha1"
	daxv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/dax/v1alpha1"
	directoryservicev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/directoryservice/v1alpha1"
	dlmv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/dlm/v1alpha1"
	dmsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/dms/v1alpha1"
	docdbv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/docdb/v1alpha1"
	dynamodbv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/dynamodb/v1alpha1"
	ec2v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ec2/v1alpha1"
	ecrv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ecr/v1alpha1"
	ecsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ecs/v1alpha1"
	efsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/efs/v1alpha1"
	eksv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/eks/v1alpha1"
	elasticachev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/elasticache/v1alpha1"
	elasticbeanstalkv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/elasticbeanstalk/v1alpha1"
	elasticloadbalancingv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/elasticloadbalancing/v1alpha1"
	elasticloadbalancingv2v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/elasticloadbalancingv2/v1alpha1"
	elasticsearchv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/elasticsearch/v1alpha1"
	emrv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/emr/v1alpha1"
	eventsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/events/v1alpha1"
	fsxv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/fsx/v1alpha1"
	gameliftv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/gamelift/v1alpha1"
	gluev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/glue/v1alpha1"
	greengrassv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/greengrass/v1alpha1"
	guarddutyv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/guardduty/v1alpha1"
	iamv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/iam/v1alpha1"
	inspectorv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/inspector/v1alpha1"
	iotv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/iot/v1alpha1"
	iot1clickv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/iot1click/v1alpha1"
	iotanalyticsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/iotanalytics/v1alpha1"
	kinesisv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/kinesis/v1alpha1"
	kinesisanalyticsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/kinesisanalytics/v1alpha1"
	kinesisanalyticsv2v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/kinesisanalyticsv2/v1alpha1"
	kinesisfirehosev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/kinesisfirehose/v1alpha1"
	kmsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/kms/v1alpha1"
	lambdav1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/lambda/v1alpha1"
	logsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/logs/v1alpha1"
	mediastorev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/mediastore/v1alpha1"
	mqv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/mq/v1alpha1"
	neptunev1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/neptune/v1alpha1"
	opsworksv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/opsworks/v1alpha1"
	opsworkscmv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/opsworkscm/v1alpha1"
	pinpointemailv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/pinpointemail/v1alpha1"
	ramv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ram/v1alpha1"
	rdsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/rds/v1alpha1"
	redshiftv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/redshift/v1alpha1"
	robomakerv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/robomaker/v1alpha1"
	route53v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/route53/v1alpha1"
	route53resolverv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/route53resolver/v1alpha1"
	s3v1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/s3/v1alpha1"
	sagemakerv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/sagemaker/v1alpha1"
	sdbv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/sdb/v1alpha1"
	secretsmanagerv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/secretsmanager/v1alpha1"
	servicecatalogv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/servicecatalog/v1alpha1"
	servicediscoveryv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/servicediscovery/v1alpha1"
	sesv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ses/v1alpha1"
	snsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/sns/v1alpha1"
	sqsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/sqs/v1alpha1"
	ssmv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/ssm/v1alpha1"
	stepfunctionsv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/stepfunctions/v1alpha1"
	transferv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/transfer/v1alpha1"
	wafv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/waf/v1alpha1"
	wafregionalv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/wafregional/v1alpha1"
	workspacesv1alpha1 "awsoperator.io/pkg/generated/clientset/versioned/typed/workspaces/v1alpha1"
	discovery "k8s.io/client-go/discovery"
	rest "k8s.io/client-go/rest"
	flowcontrol "k8s.io/client-go/util/flowcontrol"
)

type Interface interface {
	Discovery() discovery.DiscoveryInterface
	ApigatewayV1alpha1() apigatewayv1alpha1.ApigatewayV1alpha1Interface
	Apigatewayv2V1alpha1() apigatewayv2v1alpha1.Apigatewayv2V1alpha1Interface
	ApplicationautoscalingV1alpha1() applicationautoscalingv1alpha1.ApplicationautoscalingV1alpha1Interface
	AppmeshV1alpha1() appmeshv1alpha1.AppmeshV1alpha1Interface
	AppstreamV1alpha1() appstreamv1alpha1.AppstreamV1alpha1Interface
	AppsyncV1alpha1() appsyncv1alpha1.AppsyncV1alpha1Interface
	AskV1alpha1() askv1alpha1.AskV1alpha1Interface
	AthenaV1alpha1() athenav1alpha1.AthenaV1alpha1Interface
	AutoscalingV1alpha1() autoscalingv1alpha1.AutoscalingV1alpha1Interface
	AutoscalingplansV1alpha1() autoscalingplansv1alpha1.AutoscalingplansV1alpha1Interface
	BatchV1alpha1() batchv1alpha1.BatchV1alpha1Interface
	BudgetsV1alpha1() budgetsv1alpha1.BudgetsV1alpha1Interface
	CdkV1alpha1() cdkv1alpha1.CdkV1alpha1Interface
	CertificatemanagerV1alpha1() certificatemanagerv1alpha1.CertificatemanagerV1alpha1Interface
	Cloud9V1alpha1() cloud9v1alpha1.Cloud9V1alpha1Interface
	CloudformationV1alpha1() cloudformationv1alpha1.CloudformationV1alpha1Interface
	CloudfrontV1alpha1() cloudfrontv1alpha1.CloudfrontV1alpha1Interface
	CloudtrailV1alpha1() cloudtrailv1alpha1.CloudtrailV1alpha1Interface
	CloudwatchV1alpha1() cloudwatchv1alpha1.CloudwatchV1alpha1Interface
	CodebuildV1alpha1() codebuildv1alpha1.CodebuildV1alpha1Interface
	CodecommitV1alpha1() codecommitv1alpha1.CodecommitV1alpha1Interface
	CodedeployV1alpha1() codedeployv1alpha1.CodedeployV1alpha1Interface
	CodepipelineV1alpha1() codepipelinev1alpha1.CodepipelineV1alpha1Interface
	CognitoV1alpha1() cognitov1alpha1.CognitoV1alpha1Interface
	ConfigV1alpha1() configv1alpha1.ConfigV1alpha1Interface
	DatapipelineV1alpha1() datapipelinev1alpha1.DatapipelineV1alpha1Interface
	DaxV1alpha1() daxv1alpha1.DaxV1alpha1Interface
	DirectoryserviceV1alpha1() directoryservicev1alpha1.DirectoryserviceV1alpha1Interface
	DlmV1alpha1() dlmv1alpha1.DlmV1alpha1Interface
	DmsV1alpha1() dmsv1alpha1.DmsV1alpha1Interface
	DocdbV1alpha1() docdbv1alpha1.DocdbV1alpha1Interface
	DynamodbV1alpha1() dynamodbv1alpha1.DynamodbV1alpha1Interface
	Ec2V1alpha1() ec2v1alpha1.Ec2V1alpha1Interface
	EcrV1alpha1() ecrv1alpha1.EcrV1alpha1Interface
	EcsV1alpha1() ecsv1alpha1.EcsV1alpha1Interface
	EfsV1alpha1() efsv1alpha1.EfsV1alpha1Interface
	EksV1alpha1() eksv1alpha1.EksV1alpha1Interface
	ElasticacheV1alpha1() elasticachev1alpha1.ElasticacheV1alpha1Interface
	ElasticbeanstalkV1alpha1() elasticbeanstalkv1alpha1.ElasticbeanstalkV1alpha1Interface
	ElasticloadbalancingV1alpha1() elasticloadbalancingv1alpha1.ElasticloadbalancingV1alpha1Interface
	Elasticloadbalancingv2V1alpha1() elasticloadbalancingv2v1alpha1.Elasticloadbalancingv2V1alpha1Interface
	ElasticsearchV1alpha1() elasticsearchv1alpha1.ElasticsearchV1alpha1Interface
	EmrV1alpha1() emrv1alpha1.EmrV1alpha1Interface
	EventsV1alpha1() eventsv1alpha1.EventsV1alpha1Interface
	FsxV1alpha1() fsxv1alpha1.FsxV1alpha1Interface
	GameliftV1alpha1() gameliftv1alpha1.GameliftV1alpha1Interface
	GlueV1alpha1() gluev1alpha1.GlueV1alpha1Interface
	GreengrassV1alpha1() greengrassv1alpha1.GreengrassV1alpha1Interface
	GuarddutyV1alpha1() guarddutyv1alpha1.GuarddutyV1alpha1Interface
	IamV1alpha1() iamv1alpha1.IamV1alpha1Interface
	InspectorV1alpha1() inspectorv1alpha1.InspectorV1alpha1Interface
	IotV1alpha1() iotv1alpha1.IotV1alpha1Interface
	Iot1clickV1alpha1() iot1clickv1alpha1.Iot1clickV1alpha1Interface
	IotanalyticsV1alpha1() iotanalyticsv1alpha1.IotanalyticsV1alpha1Interface
	KinesisV1alpha1() kinesisv1alpha1.KinesisV1alpha1Interface
	KinesisanalyticsV1alpha1() kinesisanalyticsv1alpha1.KinesisanalyticsV1alpha1Interface
	Kinesisanalyticsv2V1alpha1() kinesisanalyticsv2v1alpha1.Kinesisanalyticsv2V1alpha1Interface
	KinesisfirehoseV1alpha1() kinesisfirehosev1alpha1.KinesisfirehoseV1alpha1Interface
	KmsV1alpha1() kmsv1alpha1.KmsV1alpha1Interface
	LambdaV1alpha1() lambdav1alpha1.LambdaV1alpha1Interface
	LogsV1alpha1() logsv1alpha1.LogsV1alpha1Interface
	MediastoreV1alpha1() mediastorev1alpha1.MediastoreV1alpha1Interface
	MqV1alpha1() mqv1alpha1.MqV1alpha1Interface
	NeptuneV1alpha1() neptunev1alpha1.NeptuneV1alpha1Interface
	OpsworksV1alpha1() opsworksv1alpha1.OpsworksV1alpha1Interface
	OpsworkscmV1alpha1() opsworkscmv1alpha1.OpsworkscmV1alpha1Interface
	PinpointemailV1alpha1() pinpointemailv1alpha1.PinpointemailV1alpha1Interface
	RamV1alpha1() ramv1alpha1.RamV1alpha1Interface
	RdsV1alpha1() rdsv1alpha1.RdsV1alpha1Interface
	RedshiftV1alpha1() redshiftv1alpha1.RedshiftV1alpha1Interface
	RobomakerV1alpha1() robomakerv1alpha1.RobomakerV1alpha1Interface
	Route53V1alpha1() route53v1alpha1.Route53V1alpha1Interface
	Route53resolverV1alpha1() route53resolverv1alpha1.Route53resolverV1alpha1Interface
	S3V1alpha1() s3v1alpha1.S3V1alpha1Interface
	SagemakerV1alpha1() sagemakerv1alpha1.SagemakerV1alpha1Interface
	SdbV1alpha1() sdbv1alpha1.SdbV1alpha1Interface
	SecretsmanagerV1alpha1() secretsmanagerv1alpha1.SecretsmanagerV1alpha1Interface
	ServicecatalogV1alpha1() servicecatalogv1alpha1.ServicecatalogV1alpha1Interface
	ServicediscoveryV1alpha1() servicediscoveryv1alpha1.ServicediscoveryV1alpha1Interface
	SesV1alpha1() sesv1alpha1.SesV1alpha1Interface
	SnsV1alpha1() snsv1alpha1.SnsV1alpha1Interface
	SqsV1alpha1() sqsv1alpha1.SqsV1alpha1Interface
	SsmV1alpha1() ssmv1alpha1.SsmV1alpha1Interface
	StepfunctionsV1alpha1() stepfunctionsv1alpha1.StepfunctionsV1alpha1Interface
	TransferV1alpha1() transferv1alpha1.TransferV1alpha1Interface
	WafV1alpha1() wafv1alpha1.WafV1alpha1Interface
	WafregionalV1alpha1() wafregionalv1alpha1.WafregionalV1alpha1Interface
	WorkspacesV1alpha1() workspacesv1alpha1.WorkspacesV1alpha1Interface
}

// Clientset contains the clients for groups. Each group has exactly one
// version included in a Clientset.
type Clientset struct {
	*discovery.DiscoveryClient
	apigatewayV1alpha1             *apigatewayv1alpha1.ApigatewayV1alpha1Client
	apigatewayv2V1alpha1           *apigatewayv2v1alpha1.Apigatewayv2V1alpha1Client
	applicationautoscalingV1alpha1 *applicationautoscalingv1alpha1.ApplicationautoscalingV1alpha1Client
	appmeshV1alpha1                *appmeshv1alpha1.AppmeshV1alpha1Client
	appstreamV1alpha1              *appstreamv1alpha1.AppstreamV1alpha1Client
	appsyncV1alpha1                *appsyncv1alpha1.AppsyncV1alpha1Client
	askV1alpha1                    *askv1alpha1.AskV1alpha1Client
	athenaV1alpha1                 *athenav1alpha1.AthenaV1alpha1Client
	autoscalingV1alpha1            *autoscalingv1alpha1.AutoscalingV1alpha1Client
	autoscalingplansV1alpha1       *autoscalingplansv1alpha1.AutoscalingplansV1alpha1Client
	batchV1alpha1                  *batchv1alpha1.BatchV1alpha1Client
	budgetsV1alpha1                *budgetsv1alpha1.BudgetsV1alpha1Client
	cdkV1alpha1                    *cdkv1alpha1.CdkV1alpha1Client
	certificatemanagerV1alpha1     *certificatemanagerv1alpha1.CertificatemanagerV1alpha1Client
	cloud9V1alpha1                 *cloud9v1alpha1.Cloud9V1alpha1Client
	cloudformationV1alpha1         *cloudformationv1alpha1.CloudformationV1alpha1Client
	cloudfrontV1alpha1             *cloudfrontv1alpha1.CloudfrontV1alpha1Client
	cloudtrailV1alpha1             *cloudtrailv1alpha1.CloudtrailV1alpha1Client
	cloudwatchV1alpha1             *cloudwatchv1alpha1.CloudwatchV1alpha1Client
	codebuildV1alpha1              *codebuildv1alpha1.CodebuildV1alpha1Client
	codecommitV1alpha1             *codecommitv1alpha1.CodecommitV1alpha1Client
	codedeployV1alpha1             *codedeployv1alpha1.CodedeployV1alpha1Client
	codepipelineV1alpha1           *codepipelinev1alpha1.CodepipelineV1alpha1Client
	cognitoV1alpha1                *cognitov1alpha1.CognitoV1alpha1Client
	configV1alpha1                 *configv1alpha1.ConfigV1alpha1Client
	datapipelineV1alpha1           *datapipelinev1alpha1.DatapipelineV1alpha1Client
	daxV1alpha1                    *daxv1alpha1.DaxV1alpha1Client
	directoryserviceV1alpha1       *directoryservicev1alpha1.DirectoryserviceV1alpha1Client
	dlmV1alpha1                    *dlmv1alpha1.DlmV1alpha1Client
	dmsV1alpha1                    *dmsv1alpha1.DmsV1alpha1Client
	docdbV1alpha1                  *docdbv1alpha1.DocdbV1alpha1Client
	dynamodbV1alpha1               *dynamodbv1alpha1.DynamodbV1alpha1Client
	ec2V1alpha1                    *ec2v1alpha1.Ec2V1alpha1Client
	ecrV1alpha1                    *ecrv1alpha1.EcrV1alpha1Client
	ecsV1alpha1                    *ecsv1alpha1.EcsV1alpha1Client
	efsV1alpha1                    *efsv1alpha1.EfsV1alpha1Client
	eksV1alpha1                    *eksv1alpha1.EksV1alpha1Client
	elasticacheV1alpha1            *elasticachev1alpha1.ElasticacheV1alpha1Client
	elasticbeanstalkV1alpha1       *elasticbeanstalkv1alpha1.ElasticbeanstalkV1alpha1Client
	elasticloadbalancingV1alpha1   *elasticloadbalancingv1alpha1.ElasticloadbalancingV1alpha1Client
	elasticloadbalancingv2V1alpha1 *elasticloadbalancingv2v1alpha1.Elasticloadbalancingv2V1alpha1Client
	elasticsearchV1alpha1          *elasticsearchv1alpha1.ElasticsearchV1alpha1Client
	emrV1alpha1                    *emrv1alpha1.EmrV1alpha1Client
	eventsV1alpha1                 *eventsv1alpha1.EventsV1alpha1Client
	fsxV1alpha1                    *fsxv1alpha1.FsxV1alpha1Client
	gameliftV1alpha1               *gameliftv1alpha1.GameliftV1alpha1Client
	glueV1alpha1                   *gluev1alpha1.GlueV1alpha1Client
	greengrassV1alpha1             *greengrassv1alpha1.GreengrassV1alpha1Client
	guarddutyV1alpha1              *guarddutyv1alpha1.GuarddutyV1alpha1Client
	iamV1alpha1                    *iamv1alpha1.IamV1alpha1Client
	inspectorV1alpha1              *inspectorv1alpha1.InspectorV1alpha1Client
	iotV1alpha1                    *iotv1alpha1.IotV1alpha1Client
	iot1clickV1alpha1              *iot1clickv1alpha1.Iot1clickV1alpha1Client
	iotanalyticsV1alpha1           *iotanalyticsv1alpha1.IotanalyticsV1alpha1Client
	kinesisV1alpha1                *kinesisv1alpha1.KinesisV1alpha1Client
	kinesisanalyticsV1alpha1       *kinesisanalyticsv1alpha1.KinesisanalyticsV1alpha1Client
	kinesisanalyticsv2V1alpha1     *kinesisanalyticsv2v1alpha1.Kinesisanalyticsv2V1alpha1Client
	kinesisfirehoseV1alpha1        *kinesisfirehosev1alpha1.KinesisfirehoseV1alpha1Client
	kmsV1alpha1                    *kmsv1alpha1.KmsV1alpha1Client
	lambdaV1alpha1                 *lambdav1alpha1.LambdaV1alpha1Client
	logsV1alpha1                   *logsv1alpha1.LogsV1alpha1Client
	mediastoreV1alpha1             *mediastorev1alpha1.MediastoreV1alpha1Client
	mqV1alpha1                     *mqv1alpha1.MqV1alpha1Client
	neptuneV1alpha1                *neptunev1alpha1.NeptuneV1alpha1Client
	opsworksV1alpha1               *opsworksv1alpha1.OpsworksV1alpha1Client
	opsworkscmV1alpha1             *opsworkscmv1alpha1.OpsworkscmV1alpha1Client
	pinpointemailV1alpha1          *pinpointemailv1alpha1.PinpointemailV1alpha1Client
	ramV1alpha1                    *ramv1alpha1.RamV1alpha1Client
	rdsV1alpha1                    *rdsv1alpha1.RdsV1alpha1Client
	redshiftV1alpha1               *redshiftv1alpha1.RedshiftV1alpha1Client
	robomakerV1alpha1              *robomakerv1alpha1.RobomakerV1alpha1Client
	route53V1alpha1                *route53v1alpha1.Route53V1alpha1Client
	route53resolverV1alpha1        *route53resolverv1alpha1.Route53resolverV1alpha1Client
	s3V1alpha1                     *s3v1alpha1.S3V1alpha1Client
	sagemakerV1alpha1              *sagemakerv1alpha1.SagemakerV1alpha1Client
	sdbV1alpha1                    *sdbv1alpha1.SdbV1alpha1Client
	secretsmanagerV1alpha1         *secretsmanagerv1alpha1.SecretsmanagerV1alpha1Client
	servicecatalogV1alpha1         *servicecatalogv1alpha1.ServicecatalogV1alpha1Client
	servicediscoveryV1alpha1       *servicediscoveryv1alpha1.ServicediscoveryV1alpha1Client
	sesV1alpha1                    *sesv1alpha1.SesV1alpha1Client
	snsV1alpha1                    *snsv1alpha1.SnsV1alpha1Client
	sqsV1alpha1                    *sqsv1alpha1.SqsV1alpha1Client
	ssmV1alpha1                    *ssmv1alpha1.SsmV1alpha1Client
	stepfunctionsV1alpha1          *stepfunctionsv1alpha1.StepfunctionsV1alpha1Client
	transferV1alpha1               *transferv1alpha1.TransferV1alpha1Client
	wafV1alpha1                    *wafv1alpha1.WafV1alpha1Client
	wafregionalV1alpha1            *wafregionalv1alpha1.WafregionalV1alpha1Client
	workspacesV1alpha1             *workspacesv1alpha1.WorkspacesV1alpha1Client
}

// ApigatewayV1alpha1 retrieves the ApigatewayV1alpha1Client
func (c *Clientset) ApigatewayV1alpha1() apigatewayv1alpha1.ApigatewayV1alpha1Interface {
	return c.apigatewayV1alpha1
}

// Apigatewayv2V1alpha1 retrieves the Apigatewayv2V1alpha1Client
func (c *Clientset) Apigatewayv2V1alpha1() apigatewayv2v1alpha1.Apigatewayv2V1alpha1Interface {
	return c.apigatewayv2V1alpha1
}

// ApplicationautoscalingV1alpha1 retrieves the ApplicationautoscalingV1alpha1Client
func (c *Clientset) ApplicationautoscalingV1alpha1() applicationautoscalingv1alpha1.ApplicationautoscalingV1alpha1Interface {
	return c.applicationautoscalingV1alpha1
}

// AppmeshV1alpha1 retrieves the AppmeshV1alpha1Client
func (c *Clientset) AppmeshV1alpha1() appmeshv1alpha1.AppmeshV1alpha1Interface {
	return c.appmeshV1alpha1
}

// AppstreamV1alpha1 retrieves the AppstreamV1alpha1Client
func (c *Clientset) AppstreamV1alpha1() appstreamv1alpha1.AppstreamV1alpha1Interface {
	return c.appstreamV1alpha1
}

// AppsyncV1alpha1 retrieves the AppsyncV1alpha1Client
func (c *Clientset) AppsyncV1alpha1() appsyncv1alpha1.AppsyncV1alpha1Interface {
	return c.appsyncV1alpha1
}

// AskV1alpha1 retrieves the AskV1alpha1Client
func (c *Clientset) AskV1alpha1() askv1alpha1.AskV1alpha1Interface {
	return c.askV1alpha1
}

// AthenaV1alpha1 retrieves the AthenaV1alpha1Client
func (c *Clientset) AthenaV1alpha1() athenav1alpha1.AthenaV1alpha1Interface {
	return c.athenaV1alpha1
}

// AutoscalingV1alpha1 retrieves the AutoscalingV1alpha1Client
func (c *Clientset) AutoscalingV1alpha1() autoscalingv1alpha1.AutoscalingV1alpha1Interface {
	return c.autoscalingV1alpha1
}

// AutoscalingplansV1alpha1 retrieves the AutoscalingplansV1alpha1Client
func (c *Clientset) AutoscalingplansV1alpha1() autoscalingplansv1alpha1.AutoscalingplansV1alpha1Interface {
	return c.autoscalingplansV1alpha1
}

// BatchV1alpha1 retrieves the BatchV1alpha1Client
func (c *Clientset) BatchV1alpha1() batchv1alpha1.BatchV1alpha1Interface {
	return c.batchV1alpha1
}

// BudgetsV1alpha1 retrieves the BudgetsV1alpha1Client
func (c *Clientset) BudgetsV1alpha1() budgetsv1alpha1.BudgetsV1alpha1Interface {
	return c.budgetsV1alpha1
}

// CdkV1alpha1 retrieves the CdkV1alpha1Client
func (c *Clientset) CdkV1alpha1() cdkv1alpha1.CdkV1alpha1Interface {
	return c.cdkV1alpha1
}

// CertificatemanagerV1alpha1 retrieves the CertificatemanagerV1alpha1Client
func (c *Clientset) CertificatemanagerV1alpha1() certificatemanagerv1alpha1.CertificatemanagerV1alpha1Interface {
	return c.certificatemanagerV1alpha1
}

// Cloud9V1alpha1 retrieves the Cloud9V1alpha1Client
func (c *Clientset) Cloud9V1alpha1() cloud9v1alpha1.Cloud9V1alpha1Interface {
	return c.cloud9V1alpha1
}

// CloudformationV1alpha1 retrieves the CloudformationV1alpha1Client
func (c *Clientset) CloudformationV1alpha1() cloudformationv1alpha1.CloudformationV1alpha1Interface {
	return c.cloudformationV1alpha1
}

// CloudfrontV1alpha1 retrieves the CloudfrontV1alpha1Client
func (c *Clientset) CloudfrontV1alpha1() cloudfrontv1alpha1.CloudfrontV1alpha1Interface {
	return c.cloudfrontV1alpha1
}

// CloudtrailV1alpha1 retrieves the CloudtrailV1alpha1Client
func (c *Clientset) CloudtrailV1alpha1() cloudtrailv1alpha1.CloudtrailV1alpha1Interface {
	return c.cloudtrailV1alpha1
}

// CloudwatchV1alpha1 retrieves the CloudwatchV1alpha1Client
func (c *Clientset) CloudwatchV1alpha1() cloudwatchv1alpha1.CloudwatchV1alpha1Interface {
	return c.cloudwatchV1alpha1
}

// CodebuildV1alpha1 retrieves the CodebuildV1alpha1Client
func (c *Clientset) CodebuildV1alpha1() codebuildv1alpha1.CodebuildV1alpha1Interface {
	return c.codebuildV1alpha1
}

// CodecommitV1alpha1 retrieves the CodecommitV1alpha1Client
func (c *Clientset) CodecommitV1alpha1() codecommitv1alpha1.CodecommitV1alpha1Interface {
	return c.codecommitV1alpha1
}

// CodedeployV1alpha1 retrieves the CodedeployV1alpha1Client
func (c *Clientset) CodedeployV1alpha1() codedeployv1alpha1.CodedeployV1alpha1Interface {
	return c.codedeployV1alpha1
}

// CodepipelineV1alpha1 retrieves the CodepipelineV1alpha1Client
func (c *Clientset) CodepipelineV1alpha1() codepipelinev1alpha1.CodepipelineV1alpha1Interface {
	return c.codepipelineV1alpha1
}

// CognitoV1alpha1 retrieves the CognitoV1alpha1Client
func (c *Clientset) CognitoV1alpha1() cognitov1alpha1.CognitoV1alpha1Interface {
	return c.cognitoV1alpha1
}

// ConfigV1alpha1 retrieves the ConfigV1alpha1Client
func (c *Clientset) ConfigV1alpha1() configv1alpha1.ConfigV1alpha1Interface {
	return c.configV1alpha1
}

// DatapipelineV1alpha1 retrieves the DatapipelineV1alpha1Client
func (c *Clientset) DatapipelineV1alpha1() datapipelinev1alpha1.DatapipelineV1alpha1Interface {
	return c.datapipelineV1alpha1
}

// DaxV1alpha1 retrieves the DaxV1alpha1Client
func (c *Clientset) DaxV1alpha1() daxv1alpha1.DaxV1alpha1Interface {
	return c.daxV1alpha1
}

// DirectoryserviceV1alpha1 retrieves the DirectoryserviceV1alpha1Client
func (c *Clientset) DirectoryserviceV1alpha1() directoryservicev1alpha1.DirectoryserviceV1alpha1Interface {
	return c.directoryserviceV1alpha1
}

// DlmV1alpha1 retrieves the DlmV1alpha1Client
func (c *Clientset) DlmV1alpha1() dlmv1alpha1.DlmV1alpha1Interface {
	return c.dlmV1alpha1
}

// DmsV1alpha1 retrieves the DmsV1alpha1Client
func (c *Clientset) DmsV1alpha1() dmsv1alpha1.DmsV1alpha1Interface {
	return c.dmsV1alpha1
}

// DocdbV1alpha1 retrieves the DocdbV1alpha1Client
func (c *Clientset) DocdbV1alpha1() docdbv1alpha1.DocdbV1alpha1Interface {
	return c.docdbV1alpha1
}

// DynamodbV1alpha1 retrieves the DynamodbV1alpha1Client
func (c *Clientset) DynamodbV1alpha1() dynamodbv1alpha1.DynamodbV1alpha1Interface {
	return c.dynamodbV1alpha1
}

// Ec2V1alpha1 retrieves the Ec2V1alpha1Client
func (c *Clientset) Ec2V1alpha1() ec2v1alpha1.Ec2V1alpha1Interface {
	return c.ec2V1alpha1
}

// EcrV1alpha1 retrieves the EcrV1alpha1Client
func (c *Clientset) EcrV1alpha1() ecrv1alpha1.EcrV1alpha1Interface {
	return c.ecrV1alpha1
}

// EcsV1alpha1 retrieves the EcsV1alpha1Client
func (c *Clientset) EcsV1alpha1() ecsv1alpha1.EcsV1alpha1Interface {
	return c.ecsV1alpha1
}

// EfsV1alpha1 retrieves the EfsV1alpha1Client
func (c *Clientset) EfsV1alpha1() efsv1alpha1.EfsV1alpha1Interface {
	return c.efsV1alpha1
}

// EksV1alpha1 retrieves the EksV1alpha1Client
func (c *Clientset) EksV1alpha1() eksv1alpha1.EksV1alpha1Interface {
	return c.eksV1alpha1
}

// ElasticacheV1alpha1 retrieves the ElasticacheV1alpha1Client
func (c *Clientset) ElasticacheV1alpha1() elasticachev1alpha1.ElasticacheV1alpha1Interface {
	return c.elasticacheV1alpha1
}

// ElasticbeanstalkV1alpha1 retrieves the ElasticbeanstalkV1alpha1Client
func (c *Clientset) ElasticbeanstalkV1alpha1() elasticbeanstalkv1alpha1.ElasticbeanstalkV1alpha1Interface {
	return c.elasticbeanstalkV1alpha1
}

// ElasticloadbalancingV1alpha1 retrieves the ElasticloadbalancingV1alpha1Client
func (c *Clientset) ElasticloadbalancingV1alpha1() elasticloadbalancingv1alpha1.ElasticloadbalancingV1alpha1Interface {
	return c.elasticloadbalancingV1alpha1
}

// Elasticloadbalancingv2V1alpha1 retrieves the Elasticloadbalancingv2V1alpha1Client
func (c *Clientset) Elasticloadbalancingv2V1alpha1() elasticloadbalancingv2v1alpha1.Elasticloadbalancingv2V1alpha1Interface {
	return c.elasticloadbalancingv2V1alpha1
}

// ElasticsearchV1alpha1 retrieves the ElasticsearchV1alpha1Client
func (c *Clientset) ElasticsearchV1alpha1() elasticsearchv1alpha1.ElasticsearchV1alpha1Interface {
	return c.elasticsearchV1alpha1
}

// EmrV1alpha1 retrieves the EmrV1alpha1Client
func (c *Clientset) EmrV1alpha1() emrv1alpha1.EmrV1alpha1Interface {
	return c.emrV1alpha1
}

// EventsV1alpha1 retrieves the EventsV1alpha1Client
func (c *Clientset) EventsV1alpha1() eventsv1alpha1.EventsV1alpha1Interface {
	return c.eventsV1alpha1
}

// FsxV1alpha1 retrieves the FsxV1alpha1Client
func (c *Clientset) FsxV1alpha1() fsxv1alpha1.FsxV1alpha1Interface {
	return c.fsxV1alpha1
}

// GameliftV1alpha1 retrieves the GameliftV1alpha1Client
func (c *Clientset) GameliftV1alpha1() gameliftv1alpha1.GameliftV1alpha1Interface {
	return c.gameliftV1alpha1
}

// GlueV1alpha1 retrieves the GlueV1alpha1Client
func (c *Clientset) GlueV1alpha1() gluev1alpha1.GlueV1alpha1Interface {
	return c.glueV1alpha1
}

// GreengrassV1alpha1 retrieves the GreengrassV1alpha1Client
func (c *Clientset) GreengrassV1alpha1() greengrassv1alpha1.GreengrassV1alpha1Interface {
	return c.greengrassV1alpha1
}

// GuarddutyV1alpha1 retrieves the GuarddutyV1alpha1Client
func (c *Clientset) GuarddutyV1alpha1() guarddutyv1alpha1.GuarddutyV1alpha1Interface {
	return c.guarddutyV1alpha1
}

// IamV1alpha1 retrieves the IamV1alpha1Client
func (c *Clientset) IamV1alpha1() iamv1alpha1.IamV1alpha1Interface {
	return c.iamV1alpha1
}

// InspectorV1alpha1 retrieves the InspectorV1alpha1Client
func (c *Clientset) InspectorV1alpha1() inspectorv1alpha1.InspectorV1alpha1Interface {
	return c.inspectorV1alpha1
}

// IotV1alpha1 retrieves the IotV1alpha1Client
func (c *Clientset) IotV1alpha1() iotv1alpha1.IotV1alpha1Interface {
	return c.iotV1alpha1
}

// Iot1clickV1alpha1 retrieves the Iot1clickV1alpha1Client
func (c *Clientset) Iot1clickV1alpha1() iot1clickv1alpha1.Iot1clickV1alpha1Interface {
	return c.iot1clickV1alpha1
}

// IotanalyticsV1alpha1 retrieves the IotanalyticsV1alpha1Client
func (c *Clientset) IotanalyticsV1alpha1() iotanalyticsv1alpha1.IotanalyticsV1alpha1Interface {
	return c.iotanalyticsV1alpha1
}

// KinesisV1alpha1 retrieves the KinesisV1alpha1Client
func (c *Clientset) KinesisV1alpha1() kinesisv1alpha1.KinesisV1alpha1Interface {
	return c.kinesisV1alpha1
}

// KinesisanalyticsV1alpha1 retrieves the KinesisanalyticsV1alpha1Client
func (c *Clientset) KinesisanalyticsV1alpha1() kinesisanalyticsv1alpha1.KinesisanalyticsV1alpha1Interface {
	return c.kinesisanalyticsV1alpha1
}

// Kinesisanalyticsv2V1alpha1 retrieves the Kinesisanalyticsv2V1alpha1Client
func (c *Clientset) Kinesisanalyticsv2V1alpha1() kinesisanalyticsv2v1alpha1.Kinesisanalyticsv2V1alpha1Interface {
	return c.kinesisanalyticsv2V1alpha1
}

// KinesisfirehoseV1alpha1 retrieves the KinesisfirehoseV1alpha1Client
func (c *Clientset) KinesisfirehoseV1alpha1() kinesisfirehosev1alpha1.KinesisfirehoseV1alpha1Interface {
	return c.kinesisfirehoseV1alpha1
}

// KmsV1alpha1 retrieves the KmsV1alpha1Client
func (c *Clientset) KmsV1alpha1() kmsv1alpha1.KmsV1alpha1Interface {
	return c.kmsV1alpha1
}

// LambdaV1alpha1 retrieves the LambdaV1alpha1Client
func (c *Clientset) LambdaV1alpha1() lambdav1alpha1.LambdaV1alpha1Interface {
	return c.lambdaV1alpha1
}

// LogsV1alpha1 retrieves the LogsV1alpha1Client
func (c *Clientset) LogsV1alpha1() logsv1alpha1.LogsV1alpha1Interface {
	return c.logsV1alpha1
}

// MediastoreV1alpha1 retrieves the MediastoreV1alpha1Client
func (c *Clientset) MediastoreV1alpha1() mediastorev1alpha1.MediastoreV1alpha1Interface {
	return c.mediastoreV1alpha1
}

// MqV1alpha1 retrieves the MqV1alpha1Client
func (c *Clientset) MqV1alpha1() mqv1alpha1.MqV1alpha1Interface {
	return c.mqV1alpha1
}

// NeptuneV1alpha1 retrieves the NeptuneV1alpha1Client
func (c *Clientset) NeptuneV1alpha1() neptunev1alpha1.NeptuneV1alpha1Interface {
	return c.neptuneV1alpha1
}

// OpsworksV1alpha1 retrieves the OpsworksV1alpha1Client
func (c *Clientset) OpsworksV1alpha1() opsworksv1alpha1.OpsworksV1alpha1Interface {
	return c.opsworksV1alpha1
}

// OpsworkscmV1alpha1 retrieves the OpsworkscmV1alpha1Client
func (c *Clientset) OpsworkscmV1alpha1() opsworkscmv1alpha1.OpsworkscmV1alpha1Interface {
	return c.opsworkscmV1alpha1
}

// PinpointemailV1alpha1 retrieves the PinpointemailV1alpha1Client
func (c *Clientset) PinpointemailV1alpha1() pinpointemailv1alpha1.PinpointemailV1alpha1Interface {
	return c.pinpointemailV1alpha1
}

// RamV1alpha1 retrieves the RamV1alpha1Client
func (c *Clientset) RamV1alpha1() ramv1alpha1.RamV1alpha1Interface {
	return c.ramV1alpha1
}

// RdsV1alpha1 retrieves the RdsV1alpha1Client
func (c *Clientset) RdsV1alpha1() rdsv1alpha1.RdsV1alpha1Interface {
	return c.rdsV1alpha1
}

// RedshiftV1alpha1 retrieves the RedshiftV1alpha1Client
func (c *Clientset) RedshiftV1alpha1() redshiftv1alpha1.RedshiftV1alpha1Interface {
	return c.redshiftV1alpha1
}

// RobomakerV1alpha1 retrieves the RobomakerV1alpha1Client
func (c *Clientset) RobomakerV1alpha1() robomakerv1alpha1.RobomakerV1alpha1Interface {
	return c.robomakerV1alpha1
}

// Route53V1alpha1 retrieves the Route53V1alpha1Client
func (c *Clientset) Route53V1alpha1() route53v1alpha1.Route53V1alpha1Interface {
	return c.route53V1alpha1
}

// Route53resolverV1alpha1 retrieves the Route53resolverV1alpha1Client
func (c *Clientset) Route53resolverV1alpha1() route53resolverv1alpha1.Route53resolverV1alpha1Interface {
	return c.route53resolverV1alpha1
}

// S3V1alpha1 retrieves the S3V1alpha1Client
func (c *Clientset) S3V1alpha1() s3v1alpha1.S3V1alpha1Interface {
	return c.s3V1alpha1
}

// SagemakerV1alpha1 retrieves the SagemakerV1alpha1Client
func (c *Clientset) SagemakerV1alpha1() sagemakerv1alpha1.SagemakerV1alpha1Interface {
	return c.sagemakerV1alpha1
}

// SdbV1alpha1 retrieves the SdbV1alpha1Client
func (c *Clientset) SdbV1alpha1() sdbv1alpha1.SdbV1alpha1Interface {
	return c.sdbV1alpha1
}

// SecretsmanagerV1alpha1 retrieves the SecretsmanagerV1alpha1Client
func (c *Clientset) SecretsmanagerV1alpha1() secretsmanagerv1alpha1.SecretsmanagerV1alpha1Interface {
	return c.secretsmanagerV1alpha1
}

// ServicecatalogV1alpha1 retrieves the ServicecatalogV1alpha1Client
func (c *Clientset) ServicecatalogV1alpha1() servicecatalogv1alpha1.ServicecatalogV1alpha1Interface {
	return c.servicecatalogV1alpha1
}

// ServicediscoveryV1alpha1 retrieves the ServicediscoveryV1alpha1Client
func (c *Clientset) ServicediscoveryV1alpha1() servicediscoveryv1alpha1.ServicediscoveryV1alpha1Interface {
	return c.servicediscoveryV1alpha1
}

// SesV1alpha1 retrieves the SesV1alpha1Client
func (c *Clientset) SesV1alpha1() sesv1alpha1.SesV1alpha1Interface {
	return c.sesV1alpha1
}

// SnsV1alpha1 retrieves the SnsV1alpha1Client
func (c *Clientset) SnsV1alpha1() snsv1alpha1.SnsV1alpha1Interface {
	return c.snsV1alpha1
}

// SqsV1alpha1 retrieves the SqsV1alpha1Client
func (c *Clientset) SqsV1alpha1() sqsv1alpha1.SqsV1alpha1Interface {
	return c.sqsV1alpha1
}

// SsmV1alpha1 retrieves the SsmV1alpha1Client
func (c *Clientset) SsmV1alpha1() ssmv1alpha1.SsmV1alpha1Interface {
	return c.ssmV1alpha1
}

// StepfunctionsV1alpha1 retrieves the StepfunctionsV1alpha1Client
func (c *Clientset) StepfunctionsV1alpha1() stepfunctionsv1alpha1.StepfunctionsV1alpha1Interface {
	return c.stepfunctionsV1alpha1
}

// TransferV1alpha1 retrieves the TransferV1alpha1Client
func (c *Clientset) TransferV1alpha1() transferv1alpha1.TransferV1alpha1Interface {
	return c.transferV1alpha1
}

// WafV1alpha1 retrieves the WafV1alpha1Client
func (c *Clientset) WafV1alpha1() wafv1alpha1.WafV1alpha1Interface {
	return c.wafV1alpha1
}

// WafregionalV1alpha1 retrieves the WafregionalV1alpha1Client
func (c *Clientset) WafregionalV1alpha1() wafregionalv1alpha1.WafregionalV1alpha1Interface {
	return c.wafregionalV1alpha1
}

// WorkspacesV1alpha1 retrieves the WorkspacesV1alpha1Client
func (c *Clientset) WorkspacesV1alpha1() workspacesv1alpha1.WorkspacesV1alpha1Interface {
	return c.workspacesV1alpha1
}

// Discovery retrieves the DiscoveryClient
func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	if c == nil {
		return nil
	}
	return c.DiscoveryClient
}

// NewForConfig creates a new Clientset for the given config.
func NewForConfig(c *rest.Config) (*Clientset, error) {
	configShallowCopy := *c
	if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
		configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
	}
	var cs Clientset
	var err error
	cs.apigatewayV1alpha1, err = apigatewayv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.apigatewayv2V1alpha1, err = apigatewayv2v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.applicationautoscalingV1alpha1, err = applicationautoscalingv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.appmeshV1alpha1, err = appmeshv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.appstreamV1alpha1, err = appstreamv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.appsyncV1alpha1, err = appsyncv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.askV1alpha1, err = askv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.athenaV1alpha1, err = athenav1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.autoscalingV1alpha1, err = autoscalingv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.autoscalingplansV1alpha1, err = autoscalingplansv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.batchV1alpha1, err = batchv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.budgetsV1alpha1, err = budgetsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cdkV1alpha1, err = cdkv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.certificatemanagerV1alpha1, err = certificatemanagerv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cloud9V1alpha1, err = cloud9v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cloudformationV1alpha1, err = cloudformationv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cloudfrontV1alpha1, err = cloudfrontv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cloudtrailV1alpha1, err = cloudtrailv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cloudwatchV1alpha1, err = cloudwatchv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.codebuildV1alpha1, err = codebuildv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.codecommitV1alpha1, err = codecommitv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.codedeployV1alpha1, err = codedeployv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.codepipelineV1alpha1, err = codepipelinev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.cognitoV1alpha1, err = cognitov1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.configV1alpha1, err = configv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.datapipelineV1alpha1, err = datapipelinev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.daxV1alpha1, err = daxv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.directoryserviceV1alpha1, err = directoryservicev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.dlmV1alpha1, err = dlmv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.dmsV1alpha1, err = dmsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.docdbV1alpha1, err = docdbv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.dynamodbV1alpha1, err = dynamodbv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.ec2V1alpha1, err = ec2v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.ecrV1alpha1, err = ecrv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.ecsV1alpha1, err = ecsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.efsV1alpha1, err = efsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.eksV1alpha1, err = eksv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.elasticacheV1alpha1, err = elasticachev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.elasticbeanstalkV1alpha1, err = elasticbeanstalkv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.elasticloadbalancingV1alpha1, err = elasticloadbalancingv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.elasticloadbalancingv2V1alpha1, err = elasticloadbalancingv2v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.elasticsearchV1alpha1, err = elasticsearchv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.emrV1alpha1, err = emrv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.eventsV1alpha1, err = eventsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.fsxV1alpha1, err = fsxv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.gameliftV1alpha1, err = gameliftv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.glueV1alpha1, err = gluev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.greengrassV1alpha1, err = greengrassv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.guarddutyV1alpha1, err = guarddutyv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.iamV1alpha1, err = iamv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.inspectorV1alpha1, err = inspectorv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.iotV1alpha1, err = iotv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.iot1clickV1alpha1, err = iot1clickv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.iotanalyticsV1alpha1, err = iotanalyticsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kinesisV1alpha1, err = kinesisv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kinesisanalyticsV1alpha1, err = kinesisanalyticsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kinesisanalyticsv2V1alpha1, err = kinesisanalyticsv2v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kinesisfirehoseV1alpha1, err = kinesisfirehosev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kmsV1alpha1, err = kmsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.lambdaV1alpha1, err = lambdav1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.logsV1alpha1, err = logsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.mediastoreV1alpha1, err = mediastorev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.mqV1alpha1, err = mqv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.neptuneV1alpha1, err = neptunev1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.opsworksV1alpha1, err = opsworksv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.opsworkscmV1alpha1, err = opsworkscmv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.pinpointemailV1alpha1, err = pinpointemailv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.ramV1alpha1, err = ramv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.rdsV1alpha1, err = rdsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.redshiftV1alpha1, err = redshiftv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.robomakerV1alpha1, err = robomakerv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.route53V1alpha1, err = route53v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.route53resolverV1alpha1, err = route53resolverv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.s3V1alpha1, err = s3v1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.sagemakerV1alpha1, err = sagemakerv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.sdbV1alpha1, err = sdbv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.secretsmanagerV1alpha1, err = secretsmanagerv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.servicecatalogV1alpha1, err = servicecatalogv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.servicediscoveryV1alpha1, err = servicediscoveryv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.sesV1alpha1, err = sesv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.snsV1alpha1, err = snsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.sqsV1alpha1, err = sqsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.ssmV1alpha1, err = ssmv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.stepfunctionsV1alpha1, err = stepfunctionsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.transferV1alpha1, err = transferv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.wafV1alpha1, err = wafv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.wafregionalV1alpha1, err = wafregionalv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.workspacesV1alpha1, err = workspacesv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}

	cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	return &cs, nil
}

// NewForConfigOrDie creates a new Clientset for the given config and
// panics if there is an error in the config.
func NewForConfigOrDie(c *rest.Config) *Clientset {
	var cs Clientset
	cs.apigatewayV1alpha1 = apigatewayv1alpha1.NewForConfigOrDie(c)
	cs.apigatewayv2V1alpha1 = apigatewayv2v1alpha1.NewForConfigOrDie(c)
	cs.applicationautoscalingV1alpha1 = applicationautoscalingv1alpha1.NewForConfigOrDie(c)
	cs.appmeshV1alpha1 = appmeshv1alpha1.NewForConfigOrDie(c)
	cs.appstreamV1alpha1 = appstreamv1alpha1.NewForConfigOrDie(c)
	cs.appsyncV1alpha1 = appsyncv1alpha1.NewForConfigOrDie(c)
	cs.askV1alpha1 = askv1alpha1.NewForConfigOrDie(c)
	cs.athenaV1alpha1 = athenav1alpha1.NewForConfigOrDie(c)
	cs.autoscalingV1alpha1 = autoscalingv1alpha1.NewForConfigOrDie(c)
	cs.autoscalingplansV1alpha1 = autoscalingplansv1alpha1.NewForConfigOrDie(c)
	cs.batchV1alpha1 = batchv1alpha1.NewForConfigOrDie(c)
	cs.budgetsV1alpha1 = budgetsv1alpha1.NewForConfigOrDie(c)
	cs.cdkV1alpha1 = cdkv1alpha1.NewForConfigOrDie(c)
	cs.certificatemanagerV1alpha1 = certificatemanagerv1alpha1.NewForConfigOrDie(c)
	cs.cloud9V1alpha1 = cloud9v1alpha1.NewForConfigOrDie(c)
	cs.cloudformationV1alpha1 = cloudformationv1alpha1.NewForConfigOrDie(c)
	cs.cloudfrontV1alpha1 = cloudfrontv1alpha1.NewForConfigOrDie(c)
	cs.cloudtrailV1alpha1 = cloudtrailv1alpha1.NewForConfigOrDie(c)
	cs.cloudwatchV1alpha1 = cloudwatchv1alpha1.NewForConfigOrDie(c)
	cs.codebuildV1alpha1 = codebuildv1alpha1.NewForConfigOrDie(c)
	cs.codecommitV1alpha1 = codecommitv1alpha1.NewForConfigOrDie(c)
	cs.codedeployV1alpha1 = codedeployv1alpha1.NewForConfigOrDie(c)
	cs.codepipelineV1alpha1 = codepipelinev1alpha1.NewForConfigOrDie(c)
	cs.cognitoV1alpha1 = cognitov1alpha1.NewForConfigOrDie(c)
	cs.configV1alpha1 = configv1alpha1.NewForConfigOrDie(c)
	cs.datapipelineV1alpha1 = datapipelinev1alpha1.NewForConfigOrDie(c)
	cs.daxV1alpha1 = daxv1alpha1.NewForConfigOrDie(c)
	cs.directoryserviceV1alpha1 = directoryservicev1alpha1.NewForConfigOrDie(c)
	cs.dlmV1alpha1 = dlmv1alpha1.NewForConfigOrDie(c)
	cs.dmsV1alpha1 = dmsv1alpha1.NewForConfigOrDie(c)
	cs.docdbV1alpha1 = docdbv1alpha1.NewForConfigOrDie(c)
	cs.dynamodbV1alpha1 = dynamodbv1alpha1.NewForConfigOrDie(c)
	cs.ec2V1alpha1 = ec2v1alpha1.NewForConfigOrDie(c)
	cs.ecrV1alpha1 = ecrv1alpha1.NewForConfigOrDie(c)
	cs.ecsV1alpha1 = ecsv1alpha1.NewForConfigOrDie(c)
	cs.efsV1alpha1 = efsv1alpha1.NewForConfigOrDie(c)
	cs.eksV1alpha1 = eksv1alpha1.NewForConfigOrDie(c)
	cs.elasticacheV1alpha1 = elasticachev1alpha1.NewForConfigOrDie(c)
	cs.elasticbeanstalkV1alpha1 = elasticbeanstalkv1alpha1.NewForConfigOrDie(c)
	cs.elasticloadbalancingV1alpha1 = elasticloadbalancingv1alpha1.NewForConfigOrDie(c)
	cs.elasticloadbalancingv2V1alpha1 = elasticloadbalancingv2v1alpha1.NewForConfigOrDie(c)
	cs.elasticsearchV1alpha1 = elasticsearchv1alpha1.NewForConfigOrDie(c)
	cs.emrV1alpha1 = emrv1alpha1.NewForConfigOrDie(c)
	cs.eventsV1alpha1 = eventsv1alpha1.NewForConfigOrDie(c)
	cs.fsxV1alpha1 = fsxv1alpha1.NewForConfigOrDie(c)
	cs.gameliftV1alpha1 = gameliftv1alpha1.NewForConfigOrDie(c)
	cs.glueV1alpha1 = gluev1alpha1.NewForConfigOrDie(c)
	cs.greengrassV1alpha1 = greengrassv1alpha1.NewForConfigOrDie(c)
	cs.guarddutyV1alpha1 = guarddutyv1alpha1.NewForConfigOrDie(c)
	cs.iamV1alpha1 = iamv1alpha1.NewForConfigOrDie(c)
	cs.inspectorV1alpha1 = inspectorv1alpha1.NewForConfigOrDie(c)
	cs.iotV1alpha1 = iotv1alpha1.NewForConfigOrDie(c)
	cs.iot1clickV1alpha1 = iot1clickv1alpha1.NewForConfigOrDie(c)
	cs.iotanalyticsV1alpha1 = iotanalyticsv1alpha1.NewForConfigOrDie(c)
	cs.kinesisV1alpha1 = kinesisv1alpha1.NewForConfigOrDie(c)
	cs.kinesisanalyticsV1alpha1 = kinesisanalyticsv1alpha1.NewForConfigOrDie(c)
	cs.kinesisanalyticsv2V1alpha1 = kinesisanalyticsv2v1alpha1.NewForConfigOrDie(c)
	cs.kinesisfirehoseV1alpha1 = kinesisfirehosev1alpha1.NewForConfigOrDie(c)
	cs.kmsV1alpha1 = kmsv1alpha1.NewForConfigOrDie(c)
	cs.lambdaV1alpha1 = lambdav1alpha1.NewForConfigOrDie(c)
	cs.logsV1alpha1 = logsv1alpha1.NewForConfigOrDie(c)
	cs.mediastoreV1alpha1 = mediastorev1alpha1.NewForConfigOrDie(c)
	cs.mqV1alpha1 = mqv1alpha1.NewForConfigOrDie(c)
	cs.neptuneV1alpha1 = neptunev1alpha1.NewForConfigOrDie(c)
	cs.opsworksV1alpha1 = opsworksv1alpha1.NewForConfigOrDie(c)
	cs.opsworkscmV1alpha1 = opsworkscmv1alpha1.NewForConfigOrDie(c)
	cs.pinpointemailV1alpha1 = pinpointemailv1alpha1.NewForConfigOrDie(c)
	cs.ramV1alpha1 = ramv1alpha1.NewForConfigOrDie(c)
	cs.rdsV1alpha1 = rdsv1alpha1.NewForConfigOrDie(c)
	cs.redshiftV1alpha1 = redshiftv1alpha1.NewForConfigOrDie(c)
	cs.robomakerV1alpha1 = robomakerv1alpha1.NewForConfigOrDie(c)
	cs.route53V1alpha1 = route53v1alpha1.NewForConfigOrDie(c)
	cs.route53resolverV1alpha1 = route53resolverv1alpha1.NewForConfigOrDie(c)
	cs.s3V1alpha1 = s3v1alpha1.NewForConfigOrDie(c)
	cs.sagemakerV1alpha1 = sagemakerv1alpha1.NewForConfigOrDie(c)
	cs.sdbV1alpha1 = sdbv1alpha1.NewForConfigOrDie(c)
	cs.secretsmanagerV1alpha1 = secretsmanagerv1alpha1.NewForConfigOrDie(c)
	cs.servicecatalogV1alpha1 = servicecatalogv1alpha1.NewForConfigOrDie(c)
	cs.servicediscoveryV1alpha1 = servicediscoveryv1alpha1.NewForConfigOrDie(c)
	cs.sesV1alpha1 = sesv1alpha1.NewForConfigOrDie(c)
	cs.snsV1alpha1 = snsv1alpha1.NewForConfigOrDie(c)
	cs.sqsV1alpha1 = sqsv1alpha1.NewForConfigOrDie(c)
	cs.ssmV1alpha1 = ssmv1alpha1.NewForConfigOrDie(c)
	cs.stepfunctionsV1alpha1 = stepfunctionsv1alpha1.NewForConfigOrDie(c)
	cs.transferV1alpha1 = transferv1alpha1.NewForConfigOrDie(c)
	cs.wafV1alpha1 = wafv1alpha1.NewForConfigOrDie(c)
	cs.wafregionalV1alpha1 = wafregionalv1alpha1.NewForConfigOrDie(c)
	cs.workspacesV1alpha1 = workspacesv1alpha1.NewForConfigOrDie(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
	return &cs
}

// New creates a new Clientset for the given RESTClient.
func New(c rest.Interface) *Clientset {
	var cs Clientset
	cs.apigatewayV1alpha1 = apigatewayv1alpha1.New(c)
	cs.apigatewayv2V1alpha1 = apigatewayv2v1alpha1.New(c)
	cs.applicationautoscalingV1alpha1 = applicationautoscalingv1alpha1.New(c)
	cs.appmeshV1alpha1 = appmeshv1alpha1.New(c)
	cs.appstreamV1alpha1 = appstreamv1alpha1.New(c)
	cs.appsyncV1alpha1 = appsyncv1alpha1.New(c)
	cs.askV1alpha1 = askv1alpha1.New(c)
	cs.athenaV1alpha1 = athenav1alpha1.New(c)
	cs.autoscalingV1alpha1 = autoscalingv1alpha1.New(c)
	cs.autoscalingplansV1alpha1 = autoscalingplansv1alpha1.New(c)
	cs.batchV1alpha1 = batchv1alpha1.New(c)
	cs.budgetsV1alpha1 = budgetsv1alpha1.New(c)
	cs.cdkV1alpha1 = cdkv1alpha1.New(c)
	cs.certificatemanagerV1alpha1 = certificatemanagerv1alpha1.New(c)
	cs.cloud9V1alpha1 = cloud9v1alpha1.New(c)
	cs.cloudformationV1alpha1 = cloudformationv1alpha1.New(c)
	cs.cloudfrontV1alpha1 = cloudfrontv1alpha1.New(c)
	cs.cloudtrailV1alpha1 = cloudtrailv1alpha1.New(c)
	cs.cloudwatchV1alpha1 = cloudwatchv1alpha1.New(c)
	cs.codebuildV1alpha1 = codebuildv1alpha1.New(c)
	cs.codecommitV1alpha1 = codecommitv1alpha1.New(c)
	cs.codedeployV1alpha1 = codedeployv1alpha1.New(c)
	cs.codepipelineV1alpha1 = codepipelinev1alpha1.New(c)
	cs.cognitoV1alpha1 = cognitov1alpha1.New(c)
	cs.configV1alpha1 = configv1alpha1.New(c)
	cs.datapipelineV1alpha1 = datapipelinev1alpha1.New(c)
	cs.daxV1alpha1 = daxv1alpha1.New(c)
	cs.directoryserviceV1alpha1 = directoryservicev1alpha1.New(c)
	cs.dlmV1alpha1 = dlmv1alpha1.New(c)
	cs.dmsV1alpha1 = dmsv1alpha1.New(c)
	cs.docdbV1alpha1 = docdbv1alpha1.New(c)
	cs.dynamodbV1alpha1 = dynamodbv1alpha1.New(c)
	cs.ec2V1alpha1 = ec2v1alpha1.New(c)
	cs.ecrV1alpha1 = ecrv1alpha1.New(c)
	cs.ecsV1alpha1 = ecsv1alpha1.New(c)
	cs.efsV1alpha1 = efsv1alpha1.New(c)
	cs.eksV1alpha1 = eksv1alpha1.New(c)
	cs.elasticacheV1alpha1 = elasticachev1alpha1.New(c)
	cs.elasticbeanstalkV1alpha1 = elasticbeanstalkv1alpha1.New(c)
	cs.elasticloadbalancingV1alpha1 = elasticloadbalancingv1alpha1.New(c)
	cs.elasticloadbalancingv2V1alpha1 = elasticloadbalancingv2v1alpha1.New(c)
	cs.elasticsearchV1alpha1 = elasticsearchv1alpha1.New(c)
	cs.emrV1alpha1 = emrv1alpha1.New(c)
	cs.eventsV1alpha1 = eventsv1alpha1.New(c)
	cs.fsxV1alpha1 = fsxv1alpha1.New(c)
	cs.gameliftV1alpha1 = gameliftv1alpha1.New(c)
	cs.glueV1alpha1 = gluev1alpha1.New(c)
	cs.greengrassV1alpha1 = greengrassv1alpha1.New(c)
	cs.guarddutyV1alpha1 = guarddutyv1alpha1.New(c)
	cs.iamV1alpha1 = iamv1alpha1.New(c)
	cs.inspectorV1alpha1 = inspectorv1alpha1.New(c)
	cs.iotV1alpha1 = iotv1alpha1.New(c)
	cs.iot1clickV1alpha1 = iot1clickv1alpha1.New(c)
	cs.iotanalyticsV1alpha1 = iotanalyticsv1alpha1.New(c)
	cs.kinesisV1alpha1 = kinesisv1alpha1.New(c)
	cs.kinesisanalyticsV1alpha1 = kinesisanalyticsv1alpha1.New(c)
	cs.kinesisanalyticsv2V1alpha1 = kinesisanalyticsv2v1alpha1.New(c)
	cs.kinesisfirehoseV1alpha1 = kinesisfirehosev1alpha1.New(c)
	cs.kmsV1alpha1 = kmsv1alpha1.New(c)
	cs.lambdaV1alpha1 = lambdav1alpha1.New(c)
	cs.logsV1alpha1 = logsv1alpha1.New(c)
	cs.mediastoreV1alpha1 = mediastorev1alpha1.New(c)
	cs.mqV1alpha1 = mqv1alpha1.New(c)
	cs.neptuneV1alpha1 = neptunev1alpha1.New(c)
	cs.opsworksV1alpha1 = opsworksv1alpha1.New(c)
	cs.opsworkscmV1alpha1 = opsworkscmv1alpha1.New(c)
	cs.pinpointemailV1alpha1 = pinpointemailv1alpha1.New(c)
	cs.ramV1alpha1 = ramv1alpha1.New(c)
	cs.rdsV1alpha1 = rdsv1alpha1.New(c)
	cs.redshiftV1alpha1 = redshiftv1alpha1.New(c)
	cs.robomakerV1alpha1 = robomakerv1alpha1.New(c)
	cs.route53V1alpha1 = route53v1alpha1.New(c)
	cs.route53resolverV1alpha1 = route53resolverv1alpha1.New(c)
	cs.s3V1alpha1 = s3v1alpha1.New(c)
	cs.sagemakerV1alpha1 = sagemakerv1alpha1.New(c)
	cs.sdbV1alpha1 = sdbv1alpha1.New(c)
	cs.secretsmanagerV1alpha1 = secretsmanagerv1alpha1.New(c)
	cs.servicecatalogV1alpha1 = servicecatalogv1alpha1.New(c)
	cs.servicediscoveryV1alpha1 = servicediscoveryv1alpha1.New(c)
	cs.sesV1alpha1 = sesv1alpha1.New(c)
	cs.snsV1alpha1 = snsv1alpha1.New(c)
	cs.sqsV1alpha1 = sqsv1alpha1.New(c)
	cs.ssmV1alpha1 = ssmv1alpha1.New(c)
	cs.stepfunctionsV1alpha1 = stepfunctionsv1alpha1.New(c)
	cs.transferV1alpha1 = transferv1alpha1.New(c)
	cs.wafV1alpha1 = wafv1alpha1.New(c)
	cs.wafregionalV1alpha1 = wafregionalv1alpha1.New(c)
	cs.workspacesV1alpha1 = workspacesv1alpha1.New(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
	return &cs
}
