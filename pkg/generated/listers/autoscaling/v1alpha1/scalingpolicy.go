/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/autoscaling/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ScalingPolicyLister helps list ScalingPolicies.
type ScalingPolicyLister interface {
	// List lists all ScalingPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ScalingPolicy, err error)
	// ScalingPolicies returns an object that can list and get ScalingPolicies.
	ScalingPolicies(namespace string) ScalingPolicyNamespaceLister
	ScalingPolicyListerExpansion
}

// scalingPolicyLister implements the ScalingPolicyLister interface.
type scalingPolicyLister struct {
	indexer cache.Indexer
}

// NewScalingPolicyLister returns a new ScalingPolicyLister.
func NewScalingPolicyLister(indexer cache.Indexer) ScalingPolicyLister {
	return &scalingPolicyLister{indexer: indexer}
}

// List lists all ScalingPolicies in the indexer.
func (s *scalingPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.ScalingPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScalingPolicy))
	})
	return ret, err
}

// ScalingPolicies returns an object that can list and get ScalingPolicies.
func (s *scalingPolicyLister) ScalingPolicies(namespace string) ScalingPolicyNamespaceLister {
	return scalingPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScalingPolicyNamespaceLister helps list and get ScalingPolicies.
type ScalingPolicyNamespaceLister interface {
	// List lists all ScalingPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ScalingPolicy, err error)
	// Get retrieves the ScalingPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ScalingPolicy, error)
	ScalingPolicyNamespaceListerExpansion
}

// scalingPolicyNamespaceLister implements the ScalingPolicyNamespaceLister
// interface.
type scalingPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ScalingPolicies in the indexer for a given namespace.
func (s scalingPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ScalingPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScalingPolicy))
	})
	return ret, err
}

// Get retrieves the ScalingPolicy from the indexer for a given namespace and name.
func (s scalingPolicyNamespaceLister) Get(name string) (*v1alpha1.ScalingPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("scalingpolicy"), name)
	}
	return obj.(*v1alpha1.ScalingPolicy), nil
}
