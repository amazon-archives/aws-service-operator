/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/budgets/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BudgetLister helps list Budgets.
type BudgetLister interface {
	// List lists all Budgets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Budget, err error)
	// Budgets returns an object that can list and get Budgets.
	Budgets(namespace string) BudgetNamespaceLister
	BudgetListerExpansion
}

// budgetLister implements the BudgetLister interface.
type budgetLister struct {
	indexer cache.Indexer
}

// NewBudgetLister returns a new BudgetLister.
func NewBudgetLister(indexer cache.Indexer) BudgetLister {
	return &budgetLister{indexer: indexer}
}

// List lists all Budgets in the indexer.
func (s *budgetLister) List(selector labels.Selector) (ret []*v1alpha1.Budget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Budget))
	})
	return ret, err
}

// Budgets returns an object that can list and get Budgets.
func (s *budgetLister) Budgets(namespace string) BudgetNamespaceLister {
	return budgetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BudgetNamespaceLister helps list and get Budgets.
type BudgetNamespaceLister interface {
	// List lists all Budgets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Budget, err error)
	// Get retrieves the Budget from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Budget, error)
	BudgetNamespaceListerExpansion
}

// budgetNamespaceLister implements the BudgetNamespaceLister
// interface.
type budgetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Budgets in the indexer for a given namespace.
func (s budgetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Budget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Budget))
	})
	return ret, err
}

// Get retrieves the Budget from the indexer for a given namespace and name.
func (s budgetNamespaceLister) Get(name string) (*v1alpha1.Budget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("budget"), name)
	}
	return obj.(*v1alpha1.Budget), nil
}
