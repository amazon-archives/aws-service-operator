/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LaunchRoleConstraintLister helps list LaunchRoleConstraints.
type LaunchRoleConstraintLister interface {
	// List lists all LaunchRoleConstraints in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LaunchRoleConstraint, err error)
	// LaunchRoleConstraints returns an object that can list and get LaunchRoleConstraints.
	LaunchRoleConstraints(namespace string) LaunchRoleConstraintNamespaceLister
	LaunchRoleConstraintListerExpansion
}

// launchRoleConstraintLister implements the LaunchRoleConstraintLister interface.
type launchRoleConstraintLister struct {
	indexer cache.Indexer
}

// NewLaunchRoleConstraintLister returns a new LaunchRoleConstraintLister.
func NewLaunchRoleConstraintLister(indexer cache.Indexer) LaunchRoleConstraintLister {
	return &launchRoleConstraintLister{indexer: indexer}
}

// List lists all LaunchRoleConstraints in the indexer.
func (s *launchRoleConstraintLister) List(selector labels.Selector) (ret []*v1alpha1.LaunchRoleConstraint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LaunchRoleConstraint))
	})
	return ret, err
}

// LaunchRoleConstraints returns an object that can list and get LaunchRoleConstraints.
func (s *launchRoleConstraintLister) LaunchRoleConstraints(namespace string) LaunchRoleConstraintNamespaceLister {
	return launchRoleConstraintNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LaunchRoleConstraintNamespaceLister helps list and get LaunchRoleConstraints.
type LaunchRoleConstraintNamespaceLister interface {
	// List lists all LaunchRoleConstraints in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LaunchRoleConstraint, err error)
	// Get retrieves the LaunchRoleConstraint from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LaunchRoleConstraint, error)
	LaunchRoleConstraintNamespaceListerExpansion
}

// launchRoleConstraintNamespaceLister implements the LaunchRoleConstraintNamespaceLister
// interface.
type launchRoleConstraintNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LaunchRoleConstraints in the indexer for a given namespace.
func (s launchRoleConstraintNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LaunchRoleConstraint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LaunchRoleConstraint))
	})
	return ret, err
}

// Get retrieves the LaunchRoleConstraint from the indexer for a given namespace and name.
func (s launchRoleConstraintNamespaceLister) Get(name string) (*v1alpha1.LaunchRoleConstraint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("launchroleconstraint"), name)
	}
	return obj.(*v1alpha1.LaunchRoleConstraint), nil
}
