/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceUpdateConstraintLister helps list ResourceUpdateConstraints.
type ResourceUpdateConstraintLister interface {
	// List lists all ResourceUpdateConstraints in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceUpdateConstraint, err error)
	// ResourceUpdateConstraints returns an object that can list and get ResourceUpdateConstraints.
	ResourceUpdateConstraints(namespace string) ResourceUpdateConstraintNamespaceLister
	ResourceUpdateConstraintListerExpansion
}

// resourceUpdateConstraintLister implements the ResourceUpdateConstraintLister interface.
type resourceUpdateConstraintLister struct {
	indexer cache.Indexer
}

// NewResourceUpdateConstraintLister returns a new ResourceUpdateConstraintLister.
func NewResourceUpdateConstraintLister(indexer cache.Indexer) ResourceUpdateConstraintLister {
	return &resourceUpdateConstraintLister{indexer: indexer}
}

// List lists all ResourceUpdateConstraints in the indexer.
func (s *resourceUpdateConstraintLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceUpdateConstraint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceUpdateConstraint))
	})
	return ret, err
}

// ResourceUpdateConstraints returns an object that can list and get ResourceUpdateConstraints.
func (s *resourceUpdateConstraintLister) ResourceUpdateConstraints(namespace string) ResourceUpdateConstraintNamespaceLister {
	return resourceUpdateConstraintNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceUpdateConstraintNamespaceLister helps list and get ResourceUpdateConstraints.
type ResourceUpdateConstraintNamespaceLister interface {
	// List lists all ResourceUpdateConstraints in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceUpdateConstraint, err error)
	// Get retrieves the ResourceUpdateConstraint from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ResourceUpdateConstraint, error)
	ResourceUpdateConstraintNamespaceListerExpansion
}

// resourceUpdateConstraintNamespaceLister implements the ResourceUpdateConstraintNamespaceLister
// interface.
type resourceUpdateConstraintNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceUpdateConstraints in the indexer for a given namespace.
func (s resourceUpdateConstraintNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceUpdateConstraint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceUpdateConstraint))
	})
	return ret, err
}

// Get retrieves the ResourceUpdateConstraint from the indexer for a given namespace and name.
func (s resourceUpdateConstraintNamespaceLister) Get(name string) (*v1alpha1.ResourceUpdateConstraint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourceupdateconstraint"), name)
	}
	return obj.(*v1alpha1.ResourceUpdateConstraint), nil
}
