/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudFormationProductLister helps list CloudFormationProducts.
type CloudFormationProductLister interface {
	// List lists all CloudFormationProducts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudFormationProduct, err error)
	// CloudFormationProducts returns an object that can list and get CloudFormationProducts.
	CloudFormationProducts(namespace string) CloudFormationProductNamespaceLister
	CloudFormationProductListerExpansion
}

// cloudFormationProductLister implements the CloudFormationProductLister interface.
type cloudFormationProductLister struct {
	indexer cache.Indexer
}

// NewCloudFormationProductLister returns a new CloudFormationProductLister.
func NewCloudFormationProductLister(indexer cache.Indexer) CloudFormationProductLister {
	return &cloudFormationProductLister{indexer: indexer}
}

// List lists all CloudFormationProducts in the indexer.
func (s *cloudFormationProductLister) List(selector labels.Selector) (ret []*v1alpha1.CloudFormationProduct, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudFormationProduct))
	})
	return ret, err
}

// CloudFormationProducts returns an object that can list and get CloudFormationProducts.
func (s *cloudFormationProductLister) CloudFormationProducts(namespace string) CloudFormationProductNamespaceLister {
	return cloudFormationProductNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudFormationProductNamespaceLister helps list and get CloudFormationProducts.
type CloudFormationProductNamespaceLister interface {
	// List lists all CloudFormationProducts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudFormationProduct, err error)
	// Get retrieves the CloudFormationProduct from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudFormationProduct, error)
	CloudFormationProductNamespaceListerExpansion
}

// cloudFormationProductNamespaceLister implements the CloudFormationProductNamespaceLister
// interface.
type cloudFormationProductNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudFormationProducts in the indexer for a given namespace.
func (s cloudFormationProductNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudFormationProduct, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudFormationProduct))
	})
	return ret, err
}

// Get retrieves the CloudFormationProduct from the indexer for a given namespace and name.
func (s cloudFormationProductNamespaceLister) Get(name string) (*v1alpha1.CloudFormationProduct, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudformationproduct"), name)
	}
	return obj.(*v1alpha1.CloudFormationProduct), nil
}
