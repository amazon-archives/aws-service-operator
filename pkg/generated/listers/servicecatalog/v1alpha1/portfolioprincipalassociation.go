/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PortfolioPrincipalAssociationLister helps list PortfolioPrincipalAssociations.
type PortfolioPrincipalAssociationLister interface {
	// List lists all PortfolioPrincipalAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PortfolioPrincipalAssociation, err error)
	// PortfolioPrincipalAssociations returns an object that can list and get PortfolioPrincipalAssociations.
	PortfolioPrincipalAssociations(namespace string) PortfolioPrincipalAssociationNamespaceLister
	PortfolioPrincipalAssociationListerExpansion
}

// portfolioPrincipalAssociationLister implements the PortfolioPrincipalAssociationLister interface.
type portfolioPrincipalAssociationLister struct {
	indexer cache.Indexer
}

// NewPortfolioPrincipalAssociationLister returns a new PortfolioPrincipalAssociationLister.
func NewPortfolioPrincipalAssociationLister(indexer cache.Indexer) PortfolioPrincipalAssociationLister {
	return &portfolioPrincipalAssociationLister{indexer: indexer}
}

// List lists all PortfolioPrincipalAssociations in the indexer.
func (s *portfolioPrincipalAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.PortfolioPrincipalAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PortfolioPrincipalAssociation))
	})
	return ret, err
}

// PortfolioPrincipalAssociations returns an object that can list and get PortfolioPrincipalAssociations.
func (s *portfolioPrincipalAssociationLister) PortfolioPrincipalAssociations(namespace string) PortfolioPrincipalAssociationNamespaceLister {
	return portfolioPrincipalAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PortfolioPrincipalAssociationNamespaceLister helps list and get PortfolioPrincipalAssociations.
type PortfolioPrincipalAssociationNamespaceLister interface {
	// List lists all PortfolioPrincipalAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PortfolioPrincipalAssociation, err error)
	// Get retrieves the PortfolioPrincipalAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PortfolioPrincipalAssociation, error)
	PortfolioPrincipalAssociationNamespaceListerExpansion
}

// portfolioPrincipalAssociationNamespaceLister implements the PortfolioPrincipalAssociationNamespaceLister
// interface.
type portfolioPrincipalAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PortfolioPrincipalAssociations in the indexer for a given namespace.
func (s portfolioPrincipalAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PortfolioPrincipalAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PortfolioPrincipalAssociation))
	})
	return ret, err
}

// Get retrieves the PortfolioPrincipalAssociation from the indexer for a given namespace and name.
func (s portfolioPrincipalAssociationNamespaceLister) Get(name string) (*v1alpha1.PortfolioPrincipalAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("portfolioprincipalassociation"), name)
	}
	return obj.(*v1alpha1.PortfolioPrincipalAssociation), nil
}
