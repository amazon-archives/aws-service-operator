/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PortfolioLister helps list Portfolios.
type PortfolioLister interface {
	// List lists all Portfolios in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Portfolio, err error)
	// Portfolios returns an object that can list and get Portfolios.
	Portfolios(namespace string) PortfolioNamespaceLister
	PortfolioListerExpansion
}

// portfolioLister implements the PortfolioLister interface.
type portfolioLister struct {
	indexer cache.Indexer
}

// NewPortfolioLister returns a new PortfolioLister.
func NewPortfolioLister(indexer cache.Indexer) PortfolioLister {
	return &portfolioLister{indexer: indexer}
}

// List lists all Portfolios in the indexer.
func (s *portfolioLister) List(selector labels.Selector) (ret []*v1alpha1.Portfolio, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Portfolio))
	})
	return ret, err
}

// Portfolios returns an object that can list and get Portfolios.
func (s *portfolioLister) Portfolios(namespace string) PortfolioNamespaceLister {
	return portfolioNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PortfolioNamespaceLister helps list and get Portfolios.
type PortfolioNamespaceLister interface {
	// List lists all Portfolios in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Portfolio, err error)
	// Get retrieves the Portfolio from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Portfolio, error)
	PortfolioNamespaceListerExpansion
}

// portfolioNamespaceLister implements the PortfolioNamespaceLister
// interface.
type portfolioNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Portfolios in the indexer for a given namespace.
func (s portfolioNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Portfolio, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Portfolio))
	})
	return ret, err
}

// Get retrieves the Portfolio from the indexer for a given namespace and name.
func (s portfolioNamespaceLister) Get(name string) (*v1alpha1.Portfolio, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("portfolio"), name)
	}
	return obj.(*v1alpha1.Portfolio), nil
}
