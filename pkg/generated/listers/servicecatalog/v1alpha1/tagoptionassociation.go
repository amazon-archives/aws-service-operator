/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicecatalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TagOptionAssociationLister helps list TagOptionAssociations.
type TagOptionAssociationLister interface {
	// List lists all TagOptionAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TagOptionAssociation, err error)
	// TagOptionAssociations returns an object that can list and get TagOptionAssociations.
	TagOptionAssociations(namespace string) TagOptionAssociationNamespaceLister
	TagOptionAssociationListerExpansion
}

// tagOptionAssociationLister implements the TagOptionAssociationLister interface.
type tagOptionAssociationLister struct {
	indexer cache.Indexer
}

// NewTagOptionAssociationLister returns a new TagOptionAssociationLister.
func NewTagOptionAssociationLister(indexer cache.Indexer) TagOptionAssociationLister {
	return &tagOptionAssociationLister{indexer: indexer}
}

// List lists all TagOptionAssociations in the indexer.
func (s *tagOptionAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.TagOptionAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TagOptionAssociation))
	})
	return ret, err
}

// TagOptionAssociations returns an object that can list and get TagOptionAssociations.
func (s *tagOptionAssociationLister) TagOptionAssociations(namespace string) TagOptionAssociationNamespaceLister {
	return tagOptionAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TagOptionAssociationNamespaceLister helps list and get TagOptionAssociations.
type TagOptionAssociationNamespaceLister interface {
	// List lists all TagOptionAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TagOptionAssociation, err error)
	// Get retrieves the TagOptionAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TagOptionAssociation, error)
	TagOptionAssociationNamespaceListerExpansion
}

// tagOptionAssociationNamespaceLister implements the TagOptionAssociationNamespaceLister
// interface.
type tagOptionAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TagOptionAssociations in the indexer for a given namespace.
func (s tagOptionAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TagOptionAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TagOptionAssociation))
	})
	return ret, err
}

// Get retrieves the TagOptionAssociation from the indexer for a given namespace and name.
func (s tagOptionAssociationNamespaceLister) Get(name string) (*v1alpha1.TagOptionAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tagoptionassociation"), name)
	}
	return obj.(*v1alpha1.TagOptionAssociation), nil
}
