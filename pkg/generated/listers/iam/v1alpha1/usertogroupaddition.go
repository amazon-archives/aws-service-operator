/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/iam/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// UserToGroupAdditionLister helps list UserToGroupAdditions.
type UserToGroupAdditionLister interface {
	// List lists all UserToGroupAdditions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.UserToGroupAddition, err error)
	// UserToGroupAdditions returns an object that can list and get UserToGroupAdditions.
	UserToGroupAdditions(namespace string) UserToGroupAdditionNamespaceLister
	UserToGroupAdditionListerExpansion
}

// userToGroupAdditionLister implements the UserToGroupAdditionLister interface.
type userToGroupAdditionLister struct {
	indexer cache.Indexer
}

// NewUserToGroupAdditionLister returns a new UserToGroupAdditionLister.
func NewUserToGroupAdditionLister(indexer cache.Indexer) UserToGroupAdditionLister {
	return &userToGroupAdditionLister{indexer: indexer}
}

// List lists all UserToGroupAdditions in the indexer.
func (s *userToGroupAdditionLister) List(selector labels.Selector) (ret []*v1alpha1.UserToGroupAddition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserToGroupAddition))
	})
	return ret, err
}

// UserToGroupAdditions returns an object that can list and get UserToGroupAdditions.
func (s *userToGroupAdditionLister) UserToGroupAdditions(namespace string) UserToGroupAdditionNamespaceLister {
	return userToGroupAdditionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// UserToGroupAdditionNamespaceLister helps list and get UserToGroupAdditions.
type UserToGroupAdditionNamespaceLister interface {
	// List lists all UserToGroupAdditions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.UserToGroupAddition, err error)
	// Get retrieves the UserToGroupAddition from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.UserToGroupAddition, error)
	UserToGroupAdditionNamespaceListerExpansion
}

// userToGroupAdditionNamespaceLister implements the UserToGroupAdditionNamespaceLister
// interface.
type userToGroupAdditionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all UserToGroupAdditions in the indexer for a given namespace.
func (s userToGroupAdditionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.UserToGroupAddition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserToGroupAddition))
	})
	return ret, err
}

// Get retrieves the UserToGroupAddition from the indexer for a given namespace and name.
func (s userToGroupAdditionNamespaceLister) Get(name string) (*v1alpha1.UserToGroupAddition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("usertogroupaddition"), name)
	}
	return obj.(*v1alpha1.UserToGroupAddition), nil
}
