/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/iam/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceLinkedRoleLister helps list ServiceLinkedRoles.
type ServiceLinkedRoleLister interface {
	// List lists all ServiceLinkedRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceLinkedRole, err error)
	// ServiceLinkedRoles returns an object that can list and get ServiceLinkedRoles.
	ServiceLinkedRoles(namespace string) ServiceLinkedRoleNamespaceLister
	ServiceLinkedRoleListerExpansion
}

// serviceLinkedRoleLister implements the ServiceLinkedRoleLister interface.
type serviceLinkedRoleLister struct {
	indexer cache.Indexer
}

// NewServiceLinkedRoleLister returns a new ServiceLinkedRoleLister.
func NewServiceLinkedRoleLister(indexer cache.Indexer) ServiceLinkedRoleLister {
	return &serviceLinkedRoleLister{indexer: indexer}
}

// List lists all ServiceLinkedRoles in the indexer.
func (s *serviceLinkedRoleLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceLinkedRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceLinkedRole))
	})
	return ret, err
}

// ServiceLinkedRoles returns an object that can list and get ServiceLinkedRoles.
func (s *serviceLinkedRoleLister) ServiceLinkedRoles(namespace string) ServiceLinkedRoleNamespaceLister {
	return serviceLinkedRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceLinkedRoleNamespaceLister helps list and get ServiceLinkedRoles.
type ServiceLinkedRoleNamespaceLister interface {
	// List lists all ServiceLinkedRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceLinkedRole, err error)
	// Get retrieves the ServiceLinkedRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ServiceLinkedRole, error)
	ServiceLinkedRoleNamespaceListerExpansion
}

// serviceLinkedRoleNamespaceLister implements the ServiceLinkedRoleNamespaceLister
// interface.
type serviceLinkedRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceLinkedRoles in the indexer for a given namespace.
func (s serviceLinkedRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceLinkedRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceLinkedRole))
	})
	return ret, err
}

// Get retrieves the ServiceLinkedRole from the indexer for a given namespace and name.
func (s serviceLinkedRoleNamespaceLister) Get(name string) (*v1alpha1.ServiceLinkedRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicelinkedrole"), name)
	}
	return obj.(*v1alpha1.ServiceLinkedRole), nil
}
