/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/greengrass/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FunctionDefinitionLister helps list FunctionDefinitions.
type FunctionDefinitionLister interface {
	// List lists all FunctionDefinitions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionDefinition, err error)
	// FunctionDefinitions returns an object that can list and get FunctionDefinitions.
	FunctionDefinitions(namespace string) FunctionDefinitionNamespaceLister
	FunctionDefinitionListerExpansion
}

// functionDefinitionLister implements the FunctionDefinitionLister interface.
type functionDefinitionLister struct {
	indexer cache.Indexer
}

// NewFunctionDefinitionLister returns a new FunctionDefinitionLister.
func NewFunctionDefinitionLister(indexer cache.Indexer) FunctionDefinitionLister {
	return &functionDefinitionLister{indexer: indexer}
}

// List lists all FunctionDefinitions in the indexer.
func (s *functionDefinitionLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionDefinition))
	})
	return ret, err
}

// FunctionDefinitions returns an object that can list and get FunctionDefinitions.
func (s *functionDefinitionLister) FunctionDefinitions(namespace string) FunctionDefinitionNamespaceLister {
	return functionDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FunctionDefinitionNamespaceLister helps list and get FunctionDefinitions.
type FunctionDefinitionNamespaceLister interface {
	// List lists all FunctionDefinitions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionDefinition, err error)
	// Get retrieves the FunctionDefinition from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FunctionDefinition, error)
	FunctionDefinitionNamespaceListerExpansion
}

// functionDefinitionNamespaceLister implements the FunctionDefinitionNamespaceLister
// interface.
type functionDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FunctionDefinitions in the indexer for a given namespace.
func (s functionDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionDefinition))
	})
	return ret, err
}

// Get retrieves the FunctionDefinition from the indexer for a given namespace and name.
func (s functionDefinitionNamespaceLister) Get(name string) (*v1alpha1.FunctionDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("functiondefinition"), name)
	}
	return obj.(*v1alpha1.FunctionDefinition), nil
}
