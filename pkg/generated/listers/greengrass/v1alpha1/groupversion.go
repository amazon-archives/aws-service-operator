/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/greengrass/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GroupVersionLister helps list GroupVersions.
type GroupVersionLister interface {
	// List lists all GroupVersions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GroupVersion, err error)
	// GroupVersions returns an object that can list and get GroupVersions.
	GroupVersions(namespace string) GroupVersionNamespaceLister
	GroupVersionListerExpansion
}

// groupVersionLister implements the GroupVersionLister interface.
type groupVersionLister struct {
	indexer cache.Indexer
}

// NewGroupVersionLister returns a new GroupVersionLister.
func NewGroupVersionLister(indexer cache.Indexer) GroupVersionLister {
	return &groupVersionLister{indexer: indexer}
}

// List lists all GroupVersions in the indexer.
func (s *groupVersionLister) List(selector labels.Selector) (ret []*v1alpha1.GroupVersion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupVersion))
	})
	return ret, err
}

// GroupVersions returns an object that can list and get GroupVersions.
func (s *groupVersionLister) GroupVersions(namespace string) GroupVersionNamespaceLister {
	return groupVersionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GroupVersionNamespaceLister helps list and get GroupVersions.
type GroupVersionNamespaceLister interface {
	// List lists all GroupVersions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GroupVersion, err error)
	// Get retrieves the GroupVersion from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GroupVersion, error)
	GroupVersionNamespaceListerExpansion
}

// groupVersionNamespaceLister implements the GroupVersionNamespaceLister
// interface.
type groupVersionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GroupVersions in the indexer for a given namespace.
func (s groupVersionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GroupVersion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupVersion))
	})
	return ret, err
}

// Get retrieves the GroupVersion from the indexer for a given namespace and name.
func (s groupVersionNamespaceLister) Get(name string) (*v1alpha1.GroupVersion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("groupversion"), name)
	}
	return obj.(*v1alpha1.GroupVersion), nil
}
