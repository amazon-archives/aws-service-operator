/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/greengrass/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceDefinitionLister helps list ResourceDefinitions.
type ResourceDefinitionLister interface {
	// List lists all ResourceDefinitions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceDefinition, err error)
	// ResourceDefinitions returns an object that can list and get ResourceDefinitions.
	ResourceDefinitions(namespace string) ResourceDefinitionNamespaceLister
	ResourceDefinitionListerExpansion
}

// resourceDefinitionLister implements the ResourceDefinitionLister interface.
type resourceDefinitionLister struct {
	indexer cache.Indexer
}

// NewResourceDefinitionLister returns a new ResourceDefinitionLister.
func NewResourceDefinitionLister(indexer cache.Indexer) ResourceDefinitionLister {
	return &resourceDefinitionLister{indexer: indexer}
}

// List lists all ResourceDefinitions in the indexer.
func (s *resourceDefinitionLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceDefinition))
	})
	return ret, err
}

// ResourceDefinitions returns an object that can list and get ResourceDefinitions.
func (s *resourceDefinitionLister) ResourceDefinitions(namespace string) ResourceDefinitionNamespaceLister {
	return resourceDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceDefinitionNamespaceLister helps list and get ResourceDefinitions.
type ResourceDefinitionNamespaceLister interface {
	// List lists all ResourceDefinitions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceDefinition, err error)
	// Get retrieves the ResourceDefinition from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ResourceDefinition, error)
	ResourceDefinitionNamespaceListerExpansion
}

// resourceDefinitionNamespaceLister implements the ResourceDefinitionNamespaceLister
// interface.
type resourceDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceDefinitions in the indexer for a given namespace.
func (s resourceDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceDefinition))
	})
	return ret, err
}

// Get retrieves the ResourceDefinition from the indexer for a given namespace and name.
func (s resourceDefinitionNamespaceLister) Get(name string) (*v1alpha1.ResourceDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourcedefinition"), name)
	}
	return obj.(*v1alpha1.ResourceDefinition), nil
}
