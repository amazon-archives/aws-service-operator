/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/glue/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClassifierLister helps list Classifiers.
type ClassifierLister interface {
	// List lists all Classifiers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Classifier, err error)
	// Classifiers returns an object that can list and get Classifiers.
	Classifiers(namespace string) ClassifierNamespaceLister
	ClassifierListerExpansion
}

// classifierLister implements the ClassifierLister interface.
type classifierLister struct {
	indexer cache.Indexer
}

// NewClassifierLister returns a new ClassifierLister.
func NewClassifierLister(indexer cache.Indexer) ClassifierLister {
	return &classifierLister{indexer: indexer}
}

// List lists all Classifiers in the indexer.
func (s *classifierLister) List(selector labels.Selector) (ret []*v1alpha1.Classifier, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Classifier))
	})
	return ret, err
}

// Classifiers returns an object that can list and get Classifiers.
func (s *classifierLister) Classifiers(namespace string) ClassifierNamespaceLister {
	return classifierNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClassifierNamespaceLister helps list and get Classifiers.
type ClassifierNamespaceLister interface {
	// List lists all Classifiers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Classifier, err error)
	// Get retrieves the Classifier from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Classifier, error)
	ClassifierNamespaceListerExpansion
}

// classifierNamespaceLister implements the ClassifierNamespaceLister
// interface.
type classifierNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Classifiers in the indexer for a given namespace.
func (s classifierNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Classifier, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Classifier))
	})
	return ret, err
}

// Get retrieves the Classifier from the indexer for a given namespace and name.
func (s classifierNamespaceLister) Get(name string) (*v1alpha1.Classifier, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("classifier"), name)
	}
	return obj.(*v1alpha1.Classifier), nil
}
