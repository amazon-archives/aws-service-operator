/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/cloudfront/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudFrontOriginAccessIdentityLister helps list CloudFrontOriginAccessIdentities.
type CloudFrontOriginAccessIdentityLister interface {
	// List lists all CloudFrontOriginAccessIdentities in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudFrontOriginAccessIdentity, err error)
	// CloudFrontOriginAccessIdentities returns an object that can list and get CloudFrontOriginAccessIdentities.
	CloudFrontOriginAccessIdentities(namespace string) CloudFrontOriginAccessIdentityNamespaceLister
	CloudFrontOriginAccessIdentityListerExpansion
}

// cloudFrontOriginAccessIdentityLister implements the CloudFrontOriginAccessIdentityLister interface.
type cloudFrontOriginAccessIdentityLister struct {
	indexer cache.Indexer
}

// NewCloudFrontOriginAccessIdentityLister returns a new CloudFrontOriginAccessIdentityLister.
func NewCloudFrontOriginAccessIdentityLister(indexer cache.Indexer) CloudFrontOriginAccessIdentityLister {
	return &cloudFrontOriginAccessIdentityLister{indexer: indexer}
}

// List lists all CloudFrontOriginAccessIdentities in the indexer.
func (s *cloudFrontOriginAccessIdentityLister) List(selector labels.Selector) (ret []*v1alpha1.CloudFrontOriginAccessIdentity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudFrontOriginAccessIdentity))
	})
	return ret, err
}

// CloudFrontOriginAccessIdentities returns an object that can list and get CloudFrontOriginAccessIdentities.
func (s *cloudFrontOriginAccessIdentityLister) CloudFrontOriginAccessIdentities(namespace string) CloudFrontOriginAccessIdentityNamespaceLister {
	return cloudFrontOriginAccessIdentityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudFrontOriginAccessIdentityNamespaceLister helps list and get CloudFrontOriginAccessIdentities.
type CloudFrontOriginAccessIdentityNamespaceLister interface {
	// List lists all CloudFrontOriginAccessIdentities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudFrontOriginAccessIdentity, err error)
	// Get retrieves the CloudFrontOriginAccessIdentity from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudFrontOriginAccessIdentity, error)
	CloudFrontOriginAccessIdentityNamespaceListerExpansion
}

// cloudFrontOriginAccessIdentityNamespaceLister implements the CloudFrontOriginAccessIdentityNamespaceLister
// interface.
type cloudFrontOriginAccessIdentityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudFrontOriginAccessIdentities in the indexer for a given namespace.
func (s cloudFrontOriginAccessIdentityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudFrontOriginAccessIdentity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudFrontOriginAccessIdentity))
	})
	return ret, err
}

// Get retrieves the CloudFrontOriginAccessIdentity from the indexer for a given namespace and name.
func (s cloudFrontOriginAccessIdentityNamespaceLister) Get(name string) (*v1alpha1.CloudFrontOriginAccessIdentity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudfrontoriginaccessidentity"), name)
	}
	return obj.(*v1alpha1.CloudFrontOriginAccessIdentity), nil
}
