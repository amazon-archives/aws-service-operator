/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/cloudfront/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StreamingDistributionLister helps list StreamingDistributions.
type StreamingDistributionLister interface {
	// List lists all StreamingDistributions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StreamingDistribution, err error)
	// StreamingDistributions returns an object that can list and get StreamingDistributions.
	StreamingDistributions(namespace string) StreamingDistributionNamespaceLister
	StreamingDistributionListerExpansion
}

// streamingDistributionLister implements the StreamingDistributionLister interface.
type streamingDistributionLister struct {
	indexer cache.Indexer
}

// NewStreamingDistributionLister returns a new StreamingDistributionLister.
func NewStreamingDistributionLister(indexer cache.Indexer) StreamingDistributionLister {
	return &streamingDistributionLister{indexer: indexer}
}

// List lists all StreamingDistributions in the indexer.
func (s *streamingDistributionLister) List(selector labels.Selector) (ret []*v1alpha1.StreamingDistribution, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamingDistribution))
	})
	return ret, err
}

// StreamingDistributions returns an object that can list and get StreamingDistributions.
func (s *streamingDistributionLister) StreamingDistributions(namespace string) StreamingDistributionNamespaceLister {
	return streamingDistributionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StreamingDistributionNamespaceLister helps list and get StreamingDistributions.
type StreamingDistributionNamespaceLister interface {
	// List lists all StreamingDistributions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StreamingDistribution, err error)
	// Get retrieves the StreamingDistribution from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StreamingDistribution, error)
	StreamingDistributionNamespaceListerExpansion
}

// streamingDistributionNamespaceLister implements the StreamingDistributionNamespaceLister
// interface.
type streamingDistributionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StreamingDistributions in the indexer for a given namespace.
func (s streamingDistributionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StreamingDistribution, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamingDistribution))
	})
	return ret, err
}

// Get retrieves the StreamingDistribution from the indexer for a given namespace and name.
func (s streamingDistributionNamespaceLister) Get(name string) (*v1alpha1.StreamingDistribution, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("streamingdistribution"), name)
	}
	return obj.(*v1alpha1.StreamingDistribution), nil
}
