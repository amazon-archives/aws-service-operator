/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/apigateway/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// UsagePlanKeyLister helps list UsagePlanKeys.
type UsagePlanKeyLister interface {
	// List lists all UsagePlanKeys in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.UsagePlanKey, err error)
	// UsagePlanKeys returns an object that can list and get UsagePlanKeys.
	UsagePlanKeys(namespace string) UsagePlanKeyNamespaceLister
	UsagePlanKeyListerExpansion
}

// usagePlanKeyLister implements the UsagePlanKeyLister interface.
type usagePlanKeyLister struct {
	indexer cache.Indexer
}

// NewUsagePlanKeyLister returns a new UsagePlanKeyLister.
func NewUsagePlanKeyLister(indexer cache.Indexer) UsagePlanKeyLister {
	return &usagePlanKeyLister{indexer: indexer}
}

// List lists all UsagePlanKeys in the indexer.
func (s *usagePlanKeyLister) List(selector labels.Selector) (ret []*v1alpha1.UsagePlanKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UsagePlanKey))
	})
	return ret, err
}

// UsagePlanKeys returns an object that can list and get UsagePlanKeys.
func (s *usagePlanKeyLister) UsagePlanKeys(namespace string) UsagePlanKeyNamespaceLister {
	return usagePlanKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// UsagePlanKeyNamespaceLister helps list and get UsagePlanKeys.
type UsagePlanKeyNamespaceLister interface {
	// List lists all UsagePlanKeys in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.UsagePlanKey, err error)
	// Get retrieves the UsagePlanKey from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.UsagePlanKey, error)
	UsagePlanKeyNamespaceListerExpansion
}

// usagePlanKeyNamespaceLister implements the UsagePlanKeyNamespaceLister
// interface.
type usagePlanKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all UsagePlanKeys in the indexer for a given namespace.
func (s usagePlanKeyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.UsagePlanKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UsagePlanKey))
	})
	return ret, err
}

// Get retrieves the UsagePlanKey from the indexer for a given namespace and name.
func (s usagePlanKeyNamespaceLister) Get(name string) (*v1alpha1.UsagePlanKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("usageplankey"), name)
	}
	return obj.(*v1alpha1.UsagePlanKey), nil
}
