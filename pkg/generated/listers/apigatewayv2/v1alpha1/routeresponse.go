/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/apigatewayv2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RouteResponseLister helps list RouteResponses.
type RouteResponseLister interface {
	// List lists all RouteResponses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RouteResponse, err error)
	// RouteResponses returns an object that can list and get RouteResponses.
	RouteResponses(namespace string) RouteResponseNamespaceLister
	RouteResponseListerExpansion
}

// routeResponseLister implements the RouteResponseLister interface.
type routeResponseLister struct {
	indexer cache.Indexer
}

// NewRouteResponseLister returns a new RouteResponseLister.
func NewRouteResponseLister(indexer cache.Indexer) RouteResponseLister {
	return &routeResponseLister{indexer: indexer}
}

// List lists all RouteResponses in the indexer.
func (s *routeResponseLister) List(selector labels.Selector) (ret []*v1alpha1.RouteResponse, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RouteResponse))
	})
	return ret, err
}

// RouteResponses returns an object that can list and get RouteResponses.
func (s *routeResponseLister) RouteResponses(namespace string) RouteResponseNamespaceLister {
	return routeResponseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RouteResponseNamespaceLister helps list and get RouteResponses.
type RouteResponseNamespaceLister interface {
	// List lists all RouteResponses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RouteResponse, err error)
	// Get retrieves the RouteResponse from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RouteResponse, error)
	RouteResponseNamespaceListerExpansion
}

// routeResponseNamespaceLister implements the RouteResponseNamespaceLister
// interface.
type routeResponseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RouteResponses in the indexer for a given namespace.
func (s routeResponseNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RouteResponse, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RouteResponse))
	})
	return ret, err
}

// Get retrieves the RouteResponse from the indexer for a given namespace and name.
func (s routeResponseNamespaceLister) Get(name string) (*v1alpha1.RouteResponse, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("routeresponse"), name)
	}
	return obj.(*v1alpha1.RouteResponse), nil
}
