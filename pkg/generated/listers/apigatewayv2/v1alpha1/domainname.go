/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/apigatewayv2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DomainNameLister helps list DomainNames.
type DomainNameLister interface {
	// List lists all DomainNames in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DomainName, err error)
	// DomainNames returns an object that can list and get DomainNames.
	DomainNames(namespace string) DomainNameNamespaceLister
	DomainNameListerExpansion
}

// domainNameLister implements the DomainNameLister interface.
type domainNameLister struct {
	indexer cache.Indexer
}

// NewDomainNameLister returns a new DomainNameLister.
func NewDomainNameLister(indexer cache.Indexer) DomainNameLister {
	return &domainNameLister{indexer: indexer}
}

// List lists all DomainNames in the indexer.
func (s *domainNameLister) List(selector labels.Selector) (ret []*v1alpha1.DomainName, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DomainName))
	})
	return ret, err
}

// DomainNames returns an object that can list and get DomainNames.
func (s *domainNameLister) DomainNames(namespace string) DomainNameNamespaceLister {
	return domainNameNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DomainNameNamespaceLister helps list and get DomainNames.
type DomainNameNamespaceLister interface {
	// List lists all DomainNames in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DomainName, err error)
	// Get retrieves the DomainName from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DomainName, error)
	DomainNameNamespaceListerExpansion
}

// domainNameNamespaceLister implements the DomainNameNamespaceLister
// interface.
type domainNameNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DomainNames in the indexer for a given namespace.
func (s domainNameNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DomainName, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DomainName))
	})
	return ret, err
}

// Get retrieves the DomainName from the indexer for a given namespace and name.
func (s domainNameNamespaceLister) Get(name string) (*v1alpha1.DomainName, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("domainname"), name)
	}
	return obj.(*v1alpha1.DomainName), nil
}
