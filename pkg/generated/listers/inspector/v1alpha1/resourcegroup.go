/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/inspector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceGroupLister helps list ResourceGroups.
type ResourceGroupLister interface {
	// List lists all ResourceGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceGroup, err error)
	// ResourceGroups returns an object that can list and get ResourceGroups.
	ResourceGroups(namespace string) ResourceGroupNamespaceLister
	ResourceGroupListerExpansion
}

// resourceGroupLister implements the ResourceGroupLister interface.
type resourceGroupLister struct {
	indexer cache.Indexer
}

// NewResourceGroupLister returns a new ResourceGroupLister.
func NewResourceGroupLister(indexer cache.Indexer) ResourceGroupLister {
	return &resourceGroupLister{indexer: indexer}
}

// List lists all ResourceGroups in the indexer.
func (s *resourceGroupLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceGroup))
	})
	return ret, err
}

// ResourceGroups returns an object that can list and get ResourceGroups.
func (s *resourceGroupLister) ResourceGroups(namespace string) ResourceGroupNamespaceLister {
	return resourceGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceGroupNamespaceLister helps list and get ResourceGroups.
type ResourceGroupNamespaceLister interface {
	// List lists all ResourceGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceGroup, err error)
	// Get retrieves the ResourceGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ResourceGroup, error)
	ResourceGroupNamespaceListerExpansion
}

// resourceGroupNamespaceLister implements the ResourceGroupNamespaceLister
// interface.
type resourceGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceGroups in the indexer for a given namespace.
func (s resourceGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceGroup))
	})
	return ret, err
}

// Get retrieves the ResourceGroup from the indexer for a given namespace and name.
func (s resourceGroupNamespaceLister) Get(name string) (*v1alpha1.ResourceGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourcegroup"), name)
	}
	return obj.(*v1alpha1.ResourceGroup), nil
}
