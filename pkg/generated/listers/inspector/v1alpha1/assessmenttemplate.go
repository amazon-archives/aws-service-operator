/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/inspector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AssessmentTemplateLister helps list AssessmentTemplates.
type AssessmentTemplateLister interface {
	// List lists all AssessmentTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AssessmentTemplate, err error)
	// AssessmentTemplates returns an object that can list and get AssessmentTemplates.
	AssessmentTemplates(namespace string) AssessmentTemplateNamespaceLister
	AssessmentTemplateListerExpansion
}

// assessmentTemplateLister implements the AssessmentTemplateLister interface.
type assessmentTemplateLister struct {
	indexer cache.Indexer
}

// NewAssessmentTemplateLister returns a new AssessmentTemplateLister.
func NewAssessmentTemplateLister(indexer cache.Indexer) AssessmentTemplateLister {
	return &assessmentTemplateLister{indexer: indexer}
}

// List lists all AssessmentTemplates in the indexer.
func (s *assessmentTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.AssessmentTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AssessmentTemplate))
	})
	return ret, err
}

// AssessmentTemplates returns an object that can list and get AssessmentTemplates.
func (s *assessmentTemplateLister) AssessmentTemplates(namespace string) AssessmentTemplateNamespaceLister {
	return assessmentTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AssessmentTemplateNamespaceLister helps list and get AssessmentTemplates.
type AssessmentTemplateNamespaceLister interface {
	// List lists all AssessmentTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AssessmentTemplate, err error)
	// Get retrieves the AssessmentTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AssessmentTemplate, error)
	AssessmentTemplateNamespaceListerExpansion
}

// assessmentTemplateNamespaceLister implements the AssessmentTemplateNamespaceLister
// interface.
type assessmentTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AssessmentTemplates in the indexer for a given namespace.
func (s assessmentTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AssessmentTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AssessmentTemplate))
	})
	return ret, err
}

// Get retrieves the AssessmentTemplate from the indexer for a given namespace and name.
func (s assessmentTemplateNamespaceLister) Get(name string) (*v1alpha1.AssessmentTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("assessmenttemplate"), name)
	}
	return obj.(*v1alpha1.AssessmentTemplate), nil
}
