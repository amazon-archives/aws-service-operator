/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/appstream/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ImageBuilderLister helps list ImageBuilders.
type ImageBuilderLister interface {
	// List lists all ImageBuilders in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ImageBuilder, err error)
	// ImageBuilders returns an object that can list and get ImageBuilders.
	ImageBuilders(namespace string) ImageBuilderNamespaceLister
	ImageBuilderListerExpansion
}

// imageBuilderLister implements the ImageBuilderLister interface.
type imageBuilderLister struct {
	indexer cache.Indexer
}

// NewImageBuilderLister returns a new ImageBuilderLister.
func NewImageBuilderLister(indexer cache.Indexer) ImageBuilderLister {
	return &imageBuilderLister{indexer: indexer}
}

// List lists all ImageBuilders in the indexer.
func (s *imageBuilderLister) List(selector labels.Selector) (ret []*v1alpha1.ImageBuilder, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImageBuilder))
	})
	return ret, err
}

// ImageBuilders returns an object that can list and get ImageBuilders.
func (s *imageBuilderLister) ImageBuilders(namespace string) ImageBuilderNamespaceLister {
	return imageBuilderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ImageBuilderNamespaceLister helps list and get ImageBuilders.
type ImageBuilderNamespaceLister interface {
	// List lists all ImageBuilders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ImageBuilder, err error)
	// Get retrieves the ImageBuilder from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ImageBuilder, error)
	ImageBuilderNamespaceListerExpansion
}

// imageBuilderNamespaceLister implements the ImageBuilderNamespaceLister
// interface.
type imageBuilderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ImageBuilders in the indexer for a given namespace.
func (s imageBuilderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ImageBuilder, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImageBuilder))
	})
	return ret, err
}

// Get retrieves the ImageBuilder from the indexer for a given namespace and name.
func (s imageBuilderNamespaceLister) Get(name string) (*v1alpha1.ImageBuilder, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("imagebuilder"), name)
	}
	return obj.(*v1alpha1.ImageBuilder), nil
}
