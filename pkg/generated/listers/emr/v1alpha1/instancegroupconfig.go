/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/emr/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstanceGroupConfigLister helps list InstanceGroupConfigs.
type InstanceGroupConfigLister interface {
	// List lists all InstanceGroupConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupConfig, err error)
	// InstanceGroupConfigs returns an object that can list and get InstanceGroupConfigs.
	InstanceGroupConfigs(namespace string) InstanceGroupConfigNamespaceLister
	InstanceGroupConfigListerExpansion
}

// instanceGroupConfigLister implements the InstanceGroupConfigLister interface.
type instanceGroupConfigLister struct {
	indexer cache.Indexer
}

// NewInstanceGroupConfigLister returns a new InstanceGroupConfigLister.
func NewInstanceGroupConfigLister(indexer cache.Indexer) InstanceGroupConfigLister {
	return &instanceGroupConfigLister{indexer: indexer}
}

// List lists all InstanceGroupConfigs in the indexer.
func (s *instanceGroupConfigLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGroupConfig))
	})
	return ret, err
}

// InstanceGroupConfigs returns an object that can list and get InstanceGroupConfigs.
func (s *instanceGroupConfigLister) InstanceGroupConfigs(namespace string) InstanceGroupConfigNamespaceLister {
	return instanceGroupConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceGroupConfigNamespaceLister helps list and get InstanceGroupConfigs.
type InstanceGroupConfigNamespaceLister interface {
	// List lists all InstanceGroupConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupConfig, err error)
	// Get retrieves the InstanceGroupConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.InstanceGroupConfig, error)
	InstanceGroupConfigNamespaceListerExpansion
}

// instanceGroupConfigNamespaceLister implements the InstanceGroupConfigNamespaceLister
// interface.
type instanceGroupConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceGroupConfigs in the indexer for a given namespace.
func (s instanceGroupConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGroupConfig))
	})
	return ret, err
}

// Get retrieves the InstanceGroupConfig from the indexer for a given namespace and name.
func (s instanceGroupConfigNamespaceLister) Get(name string) (*v1alpha1.InstanceGroupConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancegroupconfig"), name)
	}
	return obj.(*v1alpha1.InstanceGroupConfig), nil
}
