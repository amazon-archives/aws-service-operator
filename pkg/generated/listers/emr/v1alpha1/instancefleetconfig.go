/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/emr/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstanceFleetConfigLister helps list InstanceFleetConfigs.
type InstanceFleetConfigLister interface {
	// List lists all InstanceFleetConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceFleetConfig, err error)
	// InstanceFleetConfigs returns an object that can list and get InstanceFleetConfigs.
	InstanceFleetConfigs(namespace string) InstanceFleetConfigNamespaceLister
	InstanceFleetConfigListerExpansion
}

// instanceFleetConfigLister implements the InstanceFleetConfigLister interface.
type instanceFleetConfigLister struct {
	indexer cache.Indexer
}

// NewInstanceFleetConfigLister returns a new InstanceFleetConfigLister.
func NewInstanceFleetConfigLister(indexer cache.Indexer) InstanceFleetConfigLister {
	return &instanceFleetConfigLister{indexer: indexer}
}

// List lists all InstanceFleetConfigs in the indexer.
func (s *instanceFleetConfigLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceFleetConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceFleetConfig))
	})
	return ret, err
}

// InstanceFleetConfigs returns an object that can list and get InstanceFleetConfigs.
func (s *instanceFleetConfigLister) InstanceFleetConfigs(namespace string) InstanceFleetConfigNamespaceLister {
	return instanceFleetConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceFleetConfigNamespaceLister helps list and get InstanceFleetConfigs.
type InstanceFleetConfigNamespaceLister interface {
	// List lists all InstanceFleetConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceFleetConfig, err error)
	// Get retrieves the InstanceFleetConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.InstanceFleetConfig, error)
	InstanceFleetConfigNamespaceListerExpansion
}

// instanceFleetConfigNamespaceLister implements the InstanceFleetConfigNamespaceLister
// interface.
type instanceFleetConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceFleetConfigs in the indexer for a given namespace.
func (s instanceFleetConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceFleetConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceFleetConfig))
	})
	return ret, err
}

// Get retrieves the InstanceFleetConfig from the indexer for a given namespace and name.
func (s instanceFleetConfigNamespaceLister) Get(name string) (*v1alpha1.InstanceFleetConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancefleetconfig"), name)
	}
	return obj.(*v1alpha1.InstanceFleetConfig), nil
}
