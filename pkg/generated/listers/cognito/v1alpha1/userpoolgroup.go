/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/cognito/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// UserPoolGroupLister helps list UserPoolGroups.
type UserPoolGroupLister interface {
	// List lists all UserPoolGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.UserPoolGroup, err error)
	// UserPoolGroups returns an object that can list and get UserPoolGroups.
	UserPoolGroups(namespace string) UserPoolGroupNamespaceLister
	UserPoolGroupListerExpansion
}

// userPoolGroupLister implements the UserPoolGroupLister interface.
type userPoolGroupLister struct {
	indexer cache.Indexer
}

// NewUserPoolGroupLister returns a new UserPoolGroupLister.
func NewUserPoolGroupLister(indexer cache.Indexer) UserPoolGroupLister {
	return &userPoolGroupLister{indexer: indexer}
}

// List lists all UserPoolGroups in the indexer.
func (s *userPoolGroupLister) List(selector labels.Selector) (ret []*v1alpha1.UserPoolGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserPoolGroup))
	})
	return ret, err
}

// UserPoolGroups returns an object that can list and get UserPoolGroups.
func (s *userPoolGroupLister) UserPoolGroups(namespace string) UserPoolGroupNamespaceLister {
	return userPoolGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// UserPoolGroupNamespaceLister helps list and get UserPoolGroups.
type UserPoolGroupNamespaceLister interface {
	// List lists all UserPoolGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.UserPoolGroup, err error)
	// Get retrieves the UserPoolGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.UserPoolGroup, error)
	UserPoolGroupNamespaceListerExpansion
}

// userPoolGroupNamespaceLister implements the UserPoolGroupNamespaceLister
// interface.
type userPoolGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all UserPoolGroups in the indexer for a given namespace.
func (s userPoolGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.UserPoolGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserPoolGroup))
	})
	return ret, err
}

// Get retrieves the UserPoolGroup from the indexer for a given namespace and name.
func (s userPoolGroupNamespaceLister) Get(name string) (*v1alpha1.UserPoolGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("userpoolgroup"), name)
	}
	return obj.(*v1alpha1.UserPoolGroup), nil
}
