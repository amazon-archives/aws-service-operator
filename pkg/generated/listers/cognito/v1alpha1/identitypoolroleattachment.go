/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/cognito/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IdentityPoolRoleAttachmentLister helps list IdentityPoolRoleAttachments.
type IdentityPoolRoleAttachmentLister interface {
	// List lists all IdentityPoolRoleAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IdentityPoolRoleAttachment, err error)
	// IdentityPoolRoleAttachments returns an object that can list and get IdentityPoolRoleAttachments.
	IdentityPoolRoleAttachments(namespace string) IdentityPoolRoleAttachmentNamespaceLister
	IdentityPoolRoleAttachmentListerExpansion
}

// identityPoolRoleAttachmentLister implements the IdentityPoolRoleAttachmentLister interface.
type identityPoolRoleAttachmentLister struct {
	indexer cache.Indexer
}

// NewIdentityPoolRoleAttachmentLister returns a new IdentityPoolRoleAttachmentLister.
func NewIdentityPoolRoleAttachmentLister(indexer cache.Indexer) IdentityPoolRoleAttachmentLister {
	return &identityPoolRoleAttachmentLister{indexer: indexer}
}

// List lists all IdentityPoolRoleAttachments in the indexer.
func (s *identityPoolRoleAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.IdentityPoolRoleAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IdentityPoolRoleAttachment))
	})
	return ret, err
}

// IdentityPoolRoleAttachments returns an object that can list and get IdentityPoolRoleAttachments.
func (s *identityPoolRoleAttachmentLister) IdentityPoolRoleAttachments(namespace string) IdentityPoolRoleAttachmentNamespaceLister {
	return identityPoolRoleAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IdentityPoolRoleAttachmentNamespaceLister helps list and get IdentityPoolRoleAttachments.
type IdentityPoolRoleAttachmentNamespaceLister interface {
	// List lists all IdentityPoolRoleAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IdentityPoolRoleAttachment, err error)
	// Get retrieves the IdentityPoolRoleAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IdentityPoolRoleAttachment, error)
	IdentityPoolRoleAttachmentNamespaceListerExpansion
}

// identityPoolRoleAttachmentNamespaceLister implements the IdentityPoolRoleAttachmentNamespaceLister
// interface.
type identityPoolRoleAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IdentityPoolRoleAttachments in the indexer for a given namespace.
func (s identityPoolRoleAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IdentityPoolRoleAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IdentityPoolRoleAttachment))
	})
	return ret, err
}

// Get retrieves the IdentityPoolRoleAttachment from the indexer for a given namespace and name.
func (s identityPoolRoleAttachmentNamespaceLister) Get(name string) (*v1alpha1.IdentityPoolRoleAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("identitypoolroleattachment"), name)
	}
	return obj.(*v1alpha1.IdentityPoolRoleAttachment), nil
}
