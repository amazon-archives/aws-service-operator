/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/route53/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecordSetGroupLister helps list RecordSetGroups.
type RecordSetGroupLister interface {
	// List lists all RecordSetGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RecordSetGroup, err error)
	// RecordSetGroups returns an object that can list and get RecordSetGroups.
	RecordSetGroups(namespace string) RecordSetGroupNamespaceLister
	RecordSetGroupListerExpansion
}

// recordSetGroupLister implements the RecordSetGroupLister interface.
type recordSetGroupLister struct {
	indexer cache.Indexer
}

// NewRecordSetGroupLister returns a new RecordSetGroupLister.
func NewRecordSetGroupLister(indexer cache.Indexer) RecordSetGroupLister {
	return &recordSetGroupLister{indexer: indexer}
}

// List lists all RecordSetGroups in the indexer.
func (s *recordSetGroupLister) List(selector labels.Selector) (ret []*v1alpha1.RecordSetGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecordSetGroup))
	})
	return ret, err
}

// RecordSetGroups returns an object that can list and get RecordSetGroups.
func (s *recordSetGroupLister) RecordSetGroups(namespace string) RecordSetGroupNamespaceLister {
	return recordSetGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecordSetGroupNamespaceLister helps list and get RecordSetGroups.
type RecordSetGroupNamespaceLister interface {
	// List lists all RecordSetGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RecordSetGroup, err error)
	// Get retrieves the RecordSetGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RecordSetGroup, error)
	RecordSetGroupNamespaceListerExpansion
}

// recordSetGroupNamespaceLister implements the RecordSetGroupNamespaceLister
// interface.
type recordSetGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecordSetGroups in the indexer for a given namespace.
func (s recordSetGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecordSetGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecordSetGroup))
	})
	return ret, err
}

// Get retrieves the RecordSetGroup from the indexer for a given namespace and name.
func (s recordSetGroupNamespaceLister) Get(name string) (*v1alpha1.RecordSetGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recordsetgroup"), name)
	}
	return obj.(*v1alpha1.RecordSetGroup), nil
}
