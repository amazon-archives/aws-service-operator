/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/route53/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HostedZoneLister helps list HostedZones.
type HostedZoneLister interface {
	// List lists all HostedZones in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.HostedZone, err error)
	// HostedZones returns an object that can list and get HostedZones.
	HostedZones(namespace string) HostedZoneNamespaceLister
	HostedZoneListerExpansion
}

// hostedZoneLister implements the HostedZoneLister interface.
type hostedZoneLister struct {
	indexer cache.Indexer
}

// NewHostedZoneLister returns a new HostedZoneLister.
func NewHostedZoneLister(indexer cache.Indexer) HostedZoneLister {
	return &hostedZoneLister{indexer: indexer}
}

// List lists all HostedZones in the indexer.
func (s *hostedZoneLister) List(selector labels.Selector) (ret []*v1alpha1.HostedZone, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedZone))
	})
	return ret, err
}

// HostedZones returns an object that can list and get HostedZones.
func (s *hostedZoneLister) HostedZones(namespace string) HostedZoneNamespaceLister {
	return hostedZoneNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostedZoneNamespaceLister helps list and get HostedZones.
type HostedZoneNamespaceLister interface {
	// List lists all HostedZones in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.HostedZone, err error)
	// Get retrieves the HostedZone from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.HostedZone, error)
	HostedZoneNamespaceListerExpansion
}

// hostedZoneNamespaceLister implements the HostedZoneNamespaceLister
// interface.
type hostedZoneNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostedZones in the indexer for a given namespace.
func (s hostedZoneNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HostedZone, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HostedZone))
	})
	return ret, err
}

// Get retrieves the HostedZone from the indexer for a given namespace and name.
func (s hostedZoneNamespaceLister) Get(name string) (*v1alpha1.HostedZone, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hostedzone"), name)
	}
	return obj.(*v1alpha1.HostedZone), nil
}
