/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/directoryservice/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MicrosoftADLister helps list MicrosoftADs.
type MicrosoftADLister interface {
	// List lists all MicrosoftADs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MicrosoftAD, err error)
	// MicrosoftADs returns an object that can list and get MicrosoftADs.
	MicrosoftADs(namespace string) MicrosoftADNamespaceLister
	MicrosoftADListerExpansion
}

// microsoftADLister implements the MicrosoftADLister interface.
type microsoftADLister struct {
	indexer cache.Indexer
}

// NewMicrosoftADLister returns a new MicrosoftADLister.
func NewMicrosoftADLister(indexer cache.Indexer) MicrosoftADLister {
	return &microsoftADLister{indexer: indexer}
}

// List lists all MicrosoftADs in the indexer.
func (s *microsoftADLister) List(selector labels.Selector) (ret []*v1alpha1.MicrosoftAD, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MicrosoftAD))
	})
	return ret, err
}

// MicrosoftADs returns an object that can list and get MicrosoftADs.
func (s *microsoftADLister) MicrosoftADs(namespace string) MicrosoftADNamespaceLister {
	return microsoftADNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MicrosoftADNamespaceLister helps list and get MicrosoftADs.
type MicrosoftADNamespaceLister interface {
	// List lists all MicrosoftADs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MicrosoftAD, err error)
	// Get retrieves the MicrosoftAD from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MicrosoftAD, error)
	MicrosoftADNamespaceListerExpansion
}

// microsoftADNamespaceLister implements the MicrosoftADNamespaceLister
// interface.
type microsoftADNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MicrosoftADs in the indexer for a given namespace.
func (s microsoftADNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MicrosoftAD, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MicrosoftAD))
	})
	return ret, err
}

// Get retrieves the MicrosoftAD from the indexer for a given namespace and name.
func (s microsoftADNamespaceLister) Get(name string) (*v1alpha1.MicrosoftAD, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("microsoftad"), name)
	}
	return obj.(*v1alpha1.MicrosoftAD), nil
}
