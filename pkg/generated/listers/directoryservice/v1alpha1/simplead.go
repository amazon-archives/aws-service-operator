/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/directoryservice/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SimpleADLister helps list SimpleADs.
type SimpleADLister interface {
	// List lists all SimpleADs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SimpleAD, err error)
	// SimpleADs returns an object that can list and get SimpleADs.
	SimpleADs(namespace string) SimpleADNamespaceLister
	SimpleADListerExpansion
}

// simpleADLister implements the SimpleADLister interface.
type simpleADLister struct {
	indexer cache.Indexer
}

// NewSimpleADLister returns a new SimpleADLister.
func NewSimpleADLister(indexer cache.Indexer) SimpleADLister {
	return &simpleADLister{indexer: indexer}
}

// List lists all SimpleADs in the indexer.
func (s *simpleADLister) List(selector labels.Selector) (ret []*v1alpha1.SimpleAD, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SimpleAD))
	})
	return ret, err
}

// SimpleADs returns an object that can list and get SimpleADs.
func (s *simpleADLister) SimpleADs(namespace string) SimpleADNamespaceLister {
	return simpleADNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SimpleADNamespaceLister helps list and get SimpleADs.
type SimpleADNamespaceLister interface {
	// List lists all SimpleADs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SimpleAD, err error)
	// Get retrieves the SimpleAD from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SimpleAD, error)
	SimpleADNamespaceListerExpansion
}

// simpleADNamespaceLister implements the SimpleADNamespaceLister
// interface.
type simpleADNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SimpleADs in the indexer for a given namespace.
func (s simpleADNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SimpleAD, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SimpleAD))
	})
	return ret, err
}

// Get retrieves the SimpleAD from the indexer for a given namespace and name.
func (s simpleADNamespaceLister) Get(name string) (*v1alpha1.SimpleAD, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("simplead"), name)
	}
	return obj.(*v1alpha1.SimpleAD), nil
}
