/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ses/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReceiptRuleLister helps list ReceiptRules.
type ReceiptRuleLister interface {
	// List lists all ReceiptRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ReceiptRule, err error)
	// ReceiptRules returns an object that can list and get ReceiptRules.
	ReceiptRules(namespace string) ReceiptRuleNamespaceLister
	ReceiptRuleListerExpansion
}

// receiptRuleLister implements the ReceiptRuleLister interface.
type receiptRuleLister struct {
	indexer cache.Indexer
}

// NewReceiptRuleLister returns a new ReceiptRuleLister.
func NewReceiptRuleLister(indexer cache.Indexer) ReceiptRuleLister {
	return &receiptRuleLister{indexer: indexer}
}

// List lists all ReceiptRules in the indexer.
func (s *receiptRuleLister) List(selector labels.Selector) (ret []*v1alpha1.ReceiptRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReceiptRule))
	})
	return ret, err
}

// ReceiptRules returns an object that can list and get ReceiptRules.
func (s *receiptRuleLister) ReceiptRules(namespace string) ReceiptRuleNamespaceLister {
	return receiptRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReceiptRuleNamespaceLister helps list and get ReceiptRules.
type ReceiptRuleNamespaceLister interface {
	// List lists all ReceiptRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ReceiptRule, err error)
	// Get retrieves the ReceiptRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ReceiptRule, error)
	ReceiptRuleNamespaceListerExpansion
}

// receiptRuleNamespaceLister implements the ReceiptRuleNamespaceLister
// interface.
type receiptRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReceiptRules in the indexer for a given namespace.
func (s receiptRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReceiptRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReceiptRule))
	})
	return ret, err
}

// Get retrieves the ReceiptRule from the indexer for a given namespace and name.
func (s receiptRuleNamespaceLister) Get(name string) (*v1alpha1.ReceiptRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("receiptrule"), name)
	}
	return obj.(*v1alpha1.ReceiptRule), nil
}
