/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ses/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReceiptFilterLister helps list ReceiptFilters.
type ReceiptFilterLister interface {
	// List lists all ReceiptFilters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ReceiptFilter, err error)
	// ReceiptFilters returns an object that can list and get ReceiptFilters.
	ReceiptFilters(namespace string) ReceiptFilterNamespaceLister
	ReceiptFilterListerExpansion
}

// receiptFilterLister implements the ReceiptFilterLister interface.
type receiptFilterLister struct {
	indexer cache.Indexer
}

// NewReceiptFilterLister returns a new ReceiptFilterLister.
func NewReceiptFilterLister(indexer cache.Indexer) ReceiptFilterLister {
	return &receiptFilterLister{indexer: indexer}
}

// List lists all ReceiptFilters in the indexer.
func (s *receiptFilterLister) List(selector labels.Selector) (ret []*v1alpha1.ReceiptFilter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReceiptFilter))
	})
	return ret, err
}

// ReceiptFilters returns an object that can list and get ReceiptFilters.
func (s *receiptFilterLister) ReceiptFilters(namespace string) ReceiptFilterNamespaceLister {
	return receiptFilterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReceiptFilterNamespaceLister helps list and get ReceiptFilters.
type ReceiptFilterNamespaceLister interface {
	// List lists all ReceiptFilters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ReceiptFilter, err error)
	// Get retrieves the ReceiptFilter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ReceiptFilter, error)
	ReceiptFilterNamespaceListerExpansion
}

// receiptFilterNamespaceLister implements the ReceiptFilterNamespaceLister
// interface.
type receiptFilterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReceiptFilters in the indexer for a given namespace.
func (s receiptFilterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReceiptFilter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReceiptFilter))
	})
	return ret, err
}

// Get retrieves the ReceiptFilter from the indexer for a given namespace and name.
func (s receiptFilterNamespaceLister) Get(name string) (*v1alpha1.ReceiptFilter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("receiptfilter"), name)
	}
	return obj.(*v1alpha1.ReceiptFilter), nil
}
