/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/appsync/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GraphQLSchemaLister helps list GraphQLSchemas.
type GraphQLSchemaLister interface {
	// List lists all GraphQLSchemas in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GraphQLSchema, err error)
	// GraphQLSchemas returns an object that can list and get GraphQLSchemas.
	GraphQLSchemas(namespace string) GraphQLSchemaNamespaceLister
	GraphQLSchemaListerExpansion
}

// graphQLSchemaLister implements the GraphQLSchemaLister interface.
type graphQLSchemaLister struct {
	indexer cache.Indexer
}

// NewGraphQLSchemaLister returns a new GraphQLSchemaLister.
func NewGraphQLSchemaLister(indexer cache.Indexer) GraphQLSchemaLister {
	return &graphQLSchemaLister{indexer: indexer}
}

// List lists all GraphQLSchemas in the indexer.
func (s *graphQLSchemaLister) List(selector labels.Selector) (ret []*v1alpha1.GraphQLSchema, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GraphQLSchema))
	})
	return ret, err
}

// GraphQLSchemas returns an object that can list and get GraphQLSchemas.
func (s *graphQLSchemaLister) GraphQLSchemas(namespace string) GraphQLSchemaNamespaceLister {
	return graphQLSchemaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GraphQLSchemaNamespaceLister helps list and get GraphQLSchemas.
type GraphQLSchemaNamespaceLister interface {
	// List lists all GraphQLSchemas in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GraphQLSchema, err error)
	// Get retrieves the GraphQLSchema from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GraphQLSchema, error)
	GraphQLSchemaNamespaceListerExpansion
}

// graphQLSchemaNamespaceLister implements the GraphQLSchemaNamespaceLister
// interface.
type graphQLSchemaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GraphQLSchemas in the indexer for a given namespace.
func (s graphQLSchemaNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GraphQLSchema, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GraphQLSchema))
	})
	return ret, err
}

// Get retrieves the GraphQLSchema from the indexer for a given namespace and name.
func (s graphQLSchemaNamespaceLister) Get(name string) (*v1alpha1.GraphQLSchema, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("graphqlschema"), name)
	}
	return obj.(*v1alpha1.GraphQLSchema), nil
}
