/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/cloudtrail/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TrailLister helps list Trails.
type TrailLister interface {
	// List lists all Trails in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Trail, err error)
	// Trails returns an object that can list and get Trails.
	Trails(namespace string) TrailNamespaceLister
	TrailListerExpansion
}

// trailLister implements the TrailLister interface.
type trailLister struct {
	indexer cache.Indexer
}

// NewTrailLister returns a new TrailLister.
func NewTrailLister(indexer cache.Indexer) TrailLister {
	return &trailLister{indexer: indexer}
}

// List lists all Trails in the indexer.
func (s *trailLister) List(selector labels.Selector) (ret []*v1alpha1.Trail, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Trail))
	})
	return ret, err
}

// Trails returns an object that can list and get Trails.
func (s *trailLister) Trails(namespace string) TrailNamespaceLister {
	return trailNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TrailNamespaceLister helps list and get Trails.
type TrailNamespaceLister interface {
	// List lists all Trails in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Trail, err error)
	// Get retrieves the Trail from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Trail, error)
	TrailNamespaceListerExpansion
}

// trailNamespaceLister implements the TrailNamespaceLister
// interface.
type trailNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Trails in the indexer for a given namespace.
func (s trailNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Trail, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Trail))
	})
	return ret, err
}

// Get retrieves the Trail from the indexer for a given namespace and name.
func (s trailNamespaceLister) Get(name string) (*v1alpha1.Trail, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("trail"), name)
	}
	return obj.(*v1alpha1.Trail), nil
}
