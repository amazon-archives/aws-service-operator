/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VPCEndpointServicePermissionsLister helps list VPCEndpointServicePermissionses.
type VPCEndpointServicePermissionsLister interface {
	// List lists all VPCEndpointServicePermissionses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointServicePermissions, err error)
	// VPCEndpointServicePermissionses returns an object that can list and get VPCEndpointServicePermissionses.
	VPCEndpointServicePermissionses(namespace string) VPCEndpointServicePermissionsNamespaceLister
	VPCEndpointServicePermissionsListerExpansion
}

// vPCEndpointServicePermissionsLister implements the VPCEndpointServicePermissionsLister interface.
type vPCEndpointServicePermissionsLister struct {
	indexer cache.Indexer
}

// NewVPCEndpointServicePermissionsLister returns a new VPCEndpointServicePermissionsLister.
func NewVPCEndpointServicePermissionsLister(indexer cache.Indexer) VPCEndpointServicePermissionsLister {
	return &vPCEndpointServicePermissionsLister{indexer: indexer}
}

// List lists all VPCEndpointServicePermissionses in the indexer.
func (s *vPCEndpointServicePermissionsLister) List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointServicePermissions, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VPCEndpointServicePermissions))
	})
	return ret, err
}

// VPCEndpointServicePermissionses returns an object that can list and get VPCEndpointServicePermissionses.
func (s *vPCEndpointServicePermissionsLister) VPCEndpointServicePermissionses(namespace string) VPCEndpointServicePermissionsNamespaceLister {
	return vPCEndpointServicePermissionsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VPCEndpointServicePermissionsNamespaceLister helps list and get VPCEndpointServicePermissionses.
type VPCEndpointServicePermissionsNamespaceLister interface {
	// List lists all VPCEndpointServicePermissionses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointServicePermissions, err error)
	// Get retrieves the VPCEndpointServicePermissions from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VPCEndpointServicePermissions, error)
	VPCEndpointServicePermissionsNamespaceListerExpansion
}

// vPCEndpointServicePermissionsNamespaceLister implements the VPCEndpointServicePermissionsNamespaceLister
// interface.
type vPCEndpointServicePermissionsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VPCEndpointServicePermissionses in the indexer for a given namespace.
func (s vPCEndpointServicePermissionsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointServicePermissions, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VPCEndpointServicePermissions))
	})
	return ret, err
}

// Get retrieves the VPCEndpointServicePermissions from the indexer for a given namespace and name.
func (s vPCEndpointServicePermissionsNamespaceLister) Get(name string) (*v1alpha1.VPCEndpointServicePermissions, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpcendpointservicepermissions"), name)
	}
	return obj.(*v1alpha1.VPCEndpointServicePermissions), nil
}
