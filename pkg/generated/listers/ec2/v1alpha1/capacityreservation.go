/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CapacityReservationLister helps list CapacityReservations.
type CapacityReservationLister interface {
	// List lists all CapacityReservations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CapacityReservation, err error)
	// CapacityReservations returns an object that can list and get CapacityReservations.
	CapacityReservations(namespace string) CapacityReservationNamespaceLister
	CapacityReservationListerExpansion
}

// capacityReservationLister implements the CapacityReservationLister interface.
type capacityReservationLister struct {
	indexer cache.Indexer
}

// NewCapacityReservationLister returns a new CapacityReservationLister.
func NewCapacityReservationLister(indexer cache.Indexer) CapacityReservationLister {
	return &capacityReservationLister{indexer: indexer}
}

// List lists all CapacityReservations in the indexer.
func (s *capacityReservationLister) List(selector labels.Selector) (ret []*v1alpha1.CapacityReservation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CapacityReservation))
	})
	return ret, err
}

// CapacityReservations returns an object that can list and get CapacityReservations.
func (s *capacityReservationLister) CapacityReservations(namespace string) CapacityReservationNamespaceLister {
	return capacityReservationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CapacityReservationNamespaceLister helps list and get CapacityReservations.
type CapacityReservationNamespaceLister interface {
	// List lists all CapacityReservations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CapacityReservation, err error)
	// Get retrieves the CapacityReservation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CapacityReservation, error)
	CapacityReservationNamespaceListerExpansion
}

// capacityReservationNamespaceLister implements the CapacityReservationNamespaceLister
// interface.
type capacityReservationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CapacityReservations in the indexer for a given namespace.
func (s capacityReservationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CapacityReservation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CapacityReservation))
	})
	return ret, err
}

// Get retrieves the CapacityReservation from the indexer for a given namespace and name.
func (s capacityReservationNamespaceLister) Get(name string) (*v1alpha1.CapacityReservation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("capacityreservation"), name)
	}
	return obj.(*v1alpha1.CapacityReservation), nil
}
