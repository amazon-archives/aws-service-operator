/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitGatewayRouteTableLister helps list TransitGatewayRouteTables.
type TransitGatewayRouteTableLister interface {
	// List lists all TransitGatewayRouteTables in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTable, err error)
	// TransitGatewayRouteTables returns an object that can list and get TransitGatewayRouteTables.
	TransitGatewayRouteTables(namespace string) TransitGatewayRouteTableNamespaceLister
	TransitGatewayRouteTableListerExpansion
}

// transitGatewayRouteTableLister implements the TransitGatewayRouteTableLister interface.
type transitGatewayRouteTableLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayRouteTableLister returns a new TransitGatewayRouteTableLister.
func NewTransitGatewayRouteTableLister(indexer cache.Indexer) TransitGatewayRouteTableLister {
	return &transitGatewayRouteTableLister{indexer: indexer}
}

// List lists all TransitGatewayRouteTables in the indexer.
func (s *transitGatewayRouteTableLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayRouteTable))
	})
	return ret, err
}

// TransitGatewayRouteTables returns an object that can list and get TransitGatewayRouteTables.
func (s *transitGatewayRouteTableLister) TransitGatewayRouteTables(namespace string) TransitGatewayRouteTableNamespaceLister {
	return transitGatewayRouteTableNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayRouteTableNamespaceLister helps list and get TransitGatewayRouteTables.
type TransitGatewayRouteTableNamespaceLister interface {
	// List lists all TransitGatewayRouteTables in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTable, err error)
	// Get retrieves the TransitGatewayRouteTable from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TransitGatewayRouteTable, error)
	TransitGatewayRouteTableNamespaceListerExpansion
}

// transitGatewayRouteTableNamespaceLister implements the TransitGatewayRouteTableNamespaceLister
// interface.
type transitGatewayRouteTableNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayRouteTables in the indexer for a given namespace.
func (s transitGatewayRouteTableNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTable, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayRouteTable))
	})
	return ret, err
}

// Get retrieves the TransitGatewayRouteTable from the indexer for a given namespace and name.
func (s transitGatewayRouteTableNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayRouteTable, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewayroutetable"), name)
	}
	return obj.(*v1alpha1.TransitGatewayRouteTable), nil
}
