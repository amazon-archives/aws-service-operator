/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitGatewayRouteTablePropagationLister helps list TransitGatewayRouteTablePropagations.
type TransitGatewayRouteTablePropagationLister interface {
	// List lists all TransitGatewayRouteTablePropagations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTablePropagation, err error)
	// TransitGatewayRouteTablePropagations returns an object that can list and get TransitGatewayRouteTablePropagations.
	TransitGatewayRouteTablePropagations(namespace string) TransitGatewayRouteTablePropagationNamespaceLister
	TransitGatewayRouteTablePropagationListerExpansion
}

// transitGatewayRouteTablePropagationLister implements the TransitGatewayRouteTablePropagationLister interface.
type transitGatewayRouteTablePropagationLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayRouteTablePropagationLister returns a new TransitGatewayRouteTablePropagationLister.
func NewTransitGatewayRouteTablePropagationLister(indexer cache.Indexer) TransitGatewayRouteTablePropagationLister {
	return &transitGatewayRouteTablePropagationLister{indexer: indexer}
}

// List lists all TransitGatewayRouteTablePropagations in the indexer.
func (s *transitGatewayRouteTablePropagationLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTablePropagation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayRouteTablePropagation))
	})
	return ret, err
}

// TransitGatewayRouteTablePropagations returns an object that can list and get TransitGatewayRouteTablePropagations.
func (s *transitGatewayRouteTablePropagationLister) TransitGatewayRouteTablePropagations(namespace string) TransitGatewayRouteTablePropagationNamespaceLister {
	return transitGatewayRouteTablePropagationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayRouteTablePropagationNamespaceLister helps list and get TransitGatewayRouteTablePropagations.
type TransitGatewayRouteTablePropagationNamespaceLister interface {
	// List lists all TransitGatewayRouteTablePropagations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTablePropagation, err error)
	// Get retrieves the TransitGatewayRouteTablePropagation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TransitGatewayRouteTablePropagation, error)
	TransitGatewayRouteTablePropagationNamespaceListerExpansion
}

// transitGatewayRouteTablePropagationNamespaceLister implements the TransitGatewayRouteTablePropagationNamespaceLister
// interface.
type transitGatewayRouteTablePropagationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayRouteTablePropagations in the indexer for a given namespace.
func (s transitGatewayRouteTablePropagationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayRouteTablePropagation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayRouteTablePropagation))
	})
	return ret, err
}

// Get retrieves the TransitGatewayRouteTablePropagation from the indexer for a given namespace and name.
func (s transitGatewayRouteTablePropagationNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayRouteTablePropagation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewayroutetablepropagation"), name)
	}
	return obj.(*v1alpha1.TransitGatewayRouteTablePropagation), nil
}
