/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkAclEntryLister helps list NetworkAclEntries.
type NetworkAclEntryLister interface {
	// List lists all NetworkAclEntries in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkAclEntry, err error)
	// NetworkAclEntries returns an object that can list and get NetworkAclEntries.
	NetworkAclEntries(namespace string) NetworkAclEntryNamespaceLister
	NetworkAclEntryListerExpansion
}

// networkAclEntryLister implements the NetworkAclEntryLister interface.
type networkAclEntryLister struct {
	indexer cache.Indexer
}

// NewNetworkAclEntryLister returns a new NetworkAclEntryLister.
func NewNetworkAclEntryLister(indexer cache.Indexer) NetworkAclEntryLister {
	return &networkAclEntryLister{indexer: indexer}
}

// List lists all NetworkAclEntries in the indexer.
func (s *networkAclEntryLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkAclEntry, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkAclEntry))
	})
	return ret, err
}

// NetworkAclEntries returns an object that can list and get NetworkAclEntries.
func (s *networkAclEntryLister) NetworkAclEntries(namespace string) NetworkAclEntryNamespaceLister {
	return networkAclEntryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkAclEntryNamespaceLister helps list and get NetworkAclEntries.
type NetworkAclEntryNamespaceLister interface {
	// List lists all NetworkAclEntries in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkAclEntry, err error)
	// Get retrieves the NetworkAclEntry from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NetworkAclEntry, error)
	NetworkAclEntryNamespaceListerExpansion
}

// networkAclEntryNamespaceLister implements the NetworkAclEntryNamespaceLister
// interface.
type networkAclEntryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkAclEntries in the indexer for a given namespace.
func (s networkAclEntryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkAclEntry, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkAclEntry))
	})
	return ret, err
}

// Get retrieves the NetworkAclEntry from the indexer for a given namespace and name.
func (s networkAclEntryNamespaceLister) Get(name string) (*v1alpha1.NetworkAclEntry, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkaclentry"), name)
	}
	return obj.(*v1alpha1.NetworkAclEntry), nil
}
