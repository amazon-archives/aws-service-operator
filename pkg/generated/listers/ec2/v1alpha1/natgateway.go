/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NatGatewayLister helps list NatGateways.
type NatGatewayLister interface {
	// List lists all NatGateways in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NatGateway, err error)
	// NatGateways returns an object that can list and get NatGateways.
	NatGateways(namespace string) NatGatewayNamespaceLister
	NatGatewayListerExpansion
}

// natGatewayLister implements the NatGatewayLister interface.
type natGatewayLister struct {
	indexer cache.Indexer
}

// NewNatGatewayLister returns a new NatGatewayLister.
func NewNatGatewayLister(indexer cache.Indexer) NatGatewayLister {
	return &natGatewayLister{indexer: indexer}
}

// List lists all NatGateways in the indexer.
func (s *natGatewayLister) List(selector labels.Selector) (ret []*v1alpha1.NatGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatGateway))
	})
	return ret, err
}

// NatGateways returns an object that can list and get NatGateways.
func (s *natGatewayLister) NatGateways(namespace string) NatGatewayNamespaceLister {
	return natGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NatGatewayNamespaceLister helps list and get NatGateways.
type NatGatewayNamespaceLister interface {
	// List lists all NatGateways in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NatGateway, err error)
	// Get retrieves the NatGateway from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NatGateway, error)
	NatGatewayNamespaceListerExpansion
}

// natGatewayNamespaceLister implements the NatGatewayNamespaceLister
// interface.
type natGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NatGateways in the indexer for a given namespace.
func (s natGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NatGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatGateway))
	})
	return ret, err
}

// Get retrieves the NatGateway from the indexer for a given namespace and name.
func (s natGatewayNamespaceLister) Get(name string) (*v1alpha1.NatGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("natgateway"), name)
	}
	return obj.(*v1alpha1.NatGateway), nil
}
