/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkAclLister helps list NetworkAcls.
type NetworkAclLister interface {
	// List lists all NetworkAcls in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkAcl, err error)
	// NetworkAcls returns an object that can list and get NetworkAcls.
	NetworkAcls(namespace string) NetworkAclNamespaceLister
	NetworkAclListerExpansion
}

// networkAclLister implements the NetworkAclLister interface.
type networkAclLister struct {
	indexer cache.Indexer
}

// NewNetworkAclLister returns a new NetworkAclLister.
func NewNetworkAclLister(indexer cache.Indexer) NetworkAclLister {
	return &networkAclLister{indexer: indexer}
}

// List lists all NetworkAcls in the indexer.
func (s *networkAclLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkAcl, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkAcl))
	})
	return ret, err
}

// NetworkAcls returns an object that can list and get NetworkAcls.
func (s *networkAclLister) NetworkAcls(namespace string) NetworkAclNamespaceLister {
	return networkAclNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkAclNamespaceLister helps list and get NetworkAcls.
type NetworkAclNamespaceLister interface {
	// List lists all NetworkAcls in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkAcl, err error)
	// Get retrieves the NetworkAcl from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NetworkAcl, error)
	NetworkAclNamespaceListerExpansion
}

// networkAclNamespaceLister implements the NetworkAclNamespaceLister
// interface.
type networkAclNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkAcls in the indexer for a given namespace.
func (s networkAclNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkAcl, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkAcl))
	})
	return ret, err
}

// Get retrieves the NetworkAcl from the indexer for a given namespace and name.
func (s networkAclNamespaceLister) Get(name string) (*v1alpha1.NetworkAcl, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkacl"), name)
	}
	return obj.(*v1alpha1.NetworkAcl), nil
}
