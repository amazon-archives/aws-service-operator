/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VPCEndpointServiceLister helps list VPCEndpointServices.
type VPCEndpointServiceLister interface {
	// List lists all VPCEndpointServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointService, err error)
	// VPCEndpointServices returns an object that can list and get VPCEndpointServices.
	VPCEndpointServices(namespace string) VPCEndpointServiceNamespaceLister
	VPCEndpointServiceListerExpansion
}

// vPCEndpointServiceLister implements the VPCEndpointServiceLister interface.
type vPCEndpointServiceLister struct {
	indexer cache.Indexer
}

// NewVPCEndpointServiceLister returns a new VPCEndpointServiceLister.
func NewVPCEndpointServiceLister(indexer cache.Indexer) VPCEndpointServiceLister {
	return &vPCEndpointServiceLister{indexer: indexer}
}

// List lists all VPCEndpointServices in the indexer.
func (s *vPCEndpointServiceLister) List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VPCEndpointService))
	})
	return ret, err
}

// VPCEndpointServices returns an object that can list and get VPCEndpointServices.
func (s *vPCEndpointServiceLister) VPCEndpointServices(namespace string) VPCEndpointServiceNamespaceLister {
	return vPCEndpointServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VPCEndpointServiceNamespaceLister helps list and get VPCEndpointServices.
type VPCEndpointServiceNamespaceLister interface {
	// List lists all VPCEndpointServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointService, err error)
	// Get retrieves the VPCEndpointService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VPCEndpointService, error)
	VPCEndpointServiceNamespaceListerExpansion
}

// vPCEndpointServiceNamespaceLister implements the VPCEndpointServiceNamespaceLister
// interface.
type vPCEndpointServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VPCEndpointServices in the indexer for a given namespace.
func (s vPCEndpointServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VPCEndpointService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VPCEndpointService))
	})
	return ret, err
}

// Get retrieves the VPCEndpointService from the indexer for a given namespace and name.
func (s vPCEndpointServiceNamespaceLister) Get(name string) (*v1alpha1.VPCEndpointService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpcendpointservice"), name)
	}
	return obj.(*v1alpha1.VPCEndpointService), nil
}
