/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SpotFleetLister helps list SpotFleets.
type SpotFleetLister interface {
	// List lists all SpotFleets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SpotFleet, err error)
	// SpotFleets returns an object that can list and get SpotFleets.
	SpotFleets(namespace string) SpotFleetNamespaceLister
	SpotFleetListerExpansion
}

// spotFleetLister implements the SpotFleetLister interface.
type spotFleetLister struct {
	indexer cache.Indexer
}

// NewSpotFleetLister returns a new SpotFleetLister.
func NewSpotFleetLister(indexer cache.Indexer) SpotFleetLister {
	return &spotFleetLister{indexer: indexer}
}

// List lists all SpotFleets in the indexer.
func (s *spotFleetLister) List(selector labels.Selector) (ret []*v1alpha1.SpotFleet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SpotFleet))
	})
	return ret, err
}

// SpotFleets returns an object that can list and get SpotFleets.
func (s *spotFleetLister) SpotFleets(namespace string) SpotFleetNamespaceLister {
	return spotFleetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SpotFleetNamespaceLister helps list and get SpotFleets.
type SpotFleetNamespaceLister interface {
	// List lists all SpotFleets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SpotFleet, err error)
	// Get retrieves the SpotFleet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SpotFleet, error)
	SpotFleetNamespaceListerExpansion
}

// spotFleetNamespaceLister implements the SpotFleetNamespaceLister
// interface.
type spotFleetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SpotFleets in the indexer for a given namespace.
func (s spotFleetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SpotFleet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SpotFleet))
	})
	return ret, err
}

// Get retrieves the SpotFleet from the indexer for a given namespace and name.
func (s spotFleetNamespaceLister) Get(name string) (*v1alpha1.SpotFleet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("spotfleet"), name)
	}
	return obj.(*v1alpha1.SpotFleet), nil
}
