/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/ec2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitGatewayAttachmentLister helps list TransitGatewayAttachments.
type TransitGatewayAttachmentLister interface {
	// List lists all TransitGatewayAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayAttachment, err error)
	// TransitGatewayAttachments returns an object that can list and get TransitGatewayAttachments.
	TransitGatewayAttachments(namespace string) TransitGatewayAttachmentNamespaceLister
	TransitGatewayAttachmentListerExpansion
}

// transitGatewayAttachmentLister implements the TransitGatewayAttachmentLister interface.
type transitGatewayAttachmentLister struct {
	indexer cache.Indexer
}

// NewTransitGatewayAttachmentLister returns a new TransitGatewayAttachmentLister.
func NewTransitGatewayAttachmentLister(indexer cache.Indexer) TransitGatewayAttachmentLister {
	return &transitGatewayAttachmentLister{indexer: indexer}
}

// List lists all TransitGatewayAttachments in the indexer.
func (s *transitGatewayAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayAttachment))
	})
	return ret, err
}

// TransitGatewayAttachments returns an object that can list and get TransitGatewayAttachments.
func (s *transitGatewayAttachmentLister) TransitGatewayAttachments(namespace string) TransitGatewayAttachmentNamespaceLister {
	return transitGatewayAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitGatewayAttachmentNamespaceLister helps list and get TransitGatewayAttachments.
type TransitGatewayAttachmentNamespaceLister interface {
	// List lists all TransitGatewayAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayAttachment, err error)
	// Get retrieves the TransitGatewayAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TransitGatewayAttachment, error)
	TransitGatewayAttachmentNamespaceListerExpansion
}

// transitGatewayAttachmentNamespaceLister implements the TransitGatewayAttachmentNamespaceLister
// interface.
type transitGatewayAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitGatewayAttachments in the indexer for a given namespace.
func (s transitGatewayAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitGatewayAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitGatewayAttachment))
	})
	return ret, err
}

// Get retrieves the TransitGatewayAttachment from the indexer for a given namespace and name.
func (s transitGatewayAttachmentNamespaceLister) Get(name string) (*v1alpha1.TransitGatewayAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitgatewayattachment"), name)
	}
	return obj.(*v1alpha1.TransitGatewayAttachment), nil
}
