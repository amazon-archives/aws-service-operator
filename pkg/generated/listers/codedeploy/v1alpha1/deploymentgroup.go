/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/codedeploy/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DeploymentGroupLister helps list DeploymentGroups.
type DeploymentGroupLister interface {
	// List lists all DeploymentGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DeploymentGroup, err error)
	// DeploymentGroups returns an object that can list and get DeploymentGroups.
	DeploymentGroups(namespace string) DeploymentGroupNamespaceLister
	DeploymentGroupListerExpansion
}

// deploymentGroupLister implements the DeploymentGroupLister interface.
type deploymentGroupLister struct {
	indexer cache.Indexer
}

// NewDeploymentGroupLister returns a new DeploymentGroupLister.
func NewDeploymentGroupLister(indexer cache.Indexer) DeploymentGroupLister {
	return &deploymentGroupLister{indexer: indexer}
}

// List lists all DeploymentGroups in the indexer.
func (s *deploymentGroupLister) List(selector labels.Selector) (ret []*v1alpha1.DeploymentGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeploymentGroup))
	})
	return ret, err
}

// DeploymentGroups returns an object that can list and get DeploymentGroups.
func (s *deploymentGroupLister) DeploymentGroups(namespace string) DeploymentGroupNamespaceLister {
	return deploymentGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DeploymentGroupNamespaceLister helps list and get DeploymentGroups.
type DeploymentGroupNamespaceLister interface {
	// List lists all DeploymentGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DeploymentGroup, err error)
	// Get retrieves the DeploymentGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DeploymentGroup, error)
	DeploymentGroupNamespaceListerExpansion
}

// deploymentGroupNamespaceLister implements the DeploymentGroupNamespaceLister
// interface.
type deploymentGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DeploymentGroups in the indexer for a given namespace.
func (s deploymentGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DeploymentGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeploymentGroup))
	})
	return ret, err
}

// Get retrieves the DeploymentGroup from the indexer for a given namespace and name.
func (s deploymentGroupNamespaceLister) Get(name string) (*v1alpha1.DeploymentGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("deploymentgroup"), name)
	}
	return obj.(*v1alpha1.DeploymentGroup), nil
}
