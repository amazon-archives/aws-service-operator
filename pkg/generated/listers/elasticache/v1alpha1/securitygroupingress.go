/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/elasticache/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecurityGroupIngressLister helps list SecurityGroupIngresses.
type SecurityGroupIngressLister interface {
	// List lists all SecurityGroupIngresses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityGroupIngress, err error)
	// SecurityGroupIngresses returns an object that can list and get SecurityGroupIngresses.
	SecurityGroupIngresses(namespace string) SecurityGroupIngressNamespaceLister
	SecurityGroupIngressListerExpansion
}

// securityGroupIngressLister implements the SecurityGroupIngressLister interface.
type securityGroupIngressLister struct {
	indexer cache.Indexer
}

// NewSecurityGroupIngressLister returns a new SecurityGroupIngressLister.
func NewSecurityGroupIngressLister(indexer cache.Indexer) SecurityGroupIngressLister {
	return &securityGroupIngressLister{indexer: indexer}
}

// List lists all SecurityGroupIngresses in the indexer.
func (s *securityGroupIngressLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityGroupIngress, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityGroupIngress))
	})
	return ret, err
}

// SecurityGroupIngresses returns an object that can list and get SecurityGroupIngresses.
func (s *securityGroupIngressLister) SecurityGroupIngresses(namespace string) SecurityGroupIngressNamespaceLister {
	return securityGroupIngressNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecurityGroupIngressNamespaceLister helps list and get SecurityGroupIngresses.
type SecurityGroupIngressNamespaceLister interface {
	// List lists all SecurityGroupIngresses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityGroupIngress, err error)
	// Get retrieves the SecurityGroupIngress from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SecurityGroupIngress, error)
	SecurityGroupIngressNamespaceListerExpansion
}

// securityGroupIngressNamespaceLister implements the SecurityGroupIngressNamespaceLister
// interface.
type securityGroupIngressNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecurityGroupIngresses in the indexer for a given namespace.
func (s securityGroupIngressNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityGroupIngress, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityGroupIngress))
	})
	return ret, err
}

// Get retrieves the SecurityGroupIngress from the indexer for a given namespace and name.
func (s securityGroupIngressNamespaceLister) Get(name string) (*v1alpha1.SecurityGroupIngress, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("securitygroupingress"), name)
	}
	return obj.(*v1alpha1.SecurityGroupIngress), nil
}
