/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/elasticloadbalancingv2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TargetGroupLister helps list TargetGroups.
type TargetGroupLister interface {
	// List lists all TargetGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TargetGroup, err error)
	// TargetGroups returns an object that can list and get TargetGroups.
	TargetGroups(namespace string) TargetGroupNamespaceLister
	TargetGroupListerExpansion
}

// targetGroupLister implements the TargetGroupLister interface.
type targetGroupLister struct {
	indexer cache.Indexer
}

// NewTargetGroupLister returns a new TargetGroupLister.
func NewTargetGroupLister(indexer cache.Indexer) TargetGroupLister {
	return &targetGroupLister{indexer: indexer}
}

// List lists all TargetGroups in the indexer.
func (s *targetGroupLister) List(selector labels.Selector) (ret []*v1alpha1.TargetGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TargetGroup))
	})
	return ret, err
}

// TargetGroups returns an object that can list and get TargetGroups.
func (s *targetGroupLister) TargetGroups(namespace string) TargetGroupNamespaceLister {
	return targetGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TargetGroupNamespaceLister helps list and get TargetGroups.
type TargetGroupNamespaceLister interface {
	// List lists all TargetGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TargetGroup, err error)
	// Get retrieves the TargetGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TargetGroup, error)
	TargetGroupNamespaceListerExpansion
}

// targetGroupNamespaceLister implements the TargetGroupNamespaceLister
// interface.
type targetGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TargetGroups in the indexer for a given namespace.
func (s targetGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TargetGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TargetGroup))
	})
	return ret, err
}

// Get retrieves the TargetGroup from the indexer for a given namespace and name.
func (s targetGroupNamespaceLister) Get(name string) (*v1alpha1.TargetGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("targetgroup"), name)
	}
	return obj.(*v1alpha1.TargetGroup), nil
}
