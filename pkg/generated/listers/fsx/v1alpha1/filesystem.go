/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/fsx/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FileSystemLister helps list FileSystems.
type FileSystemLister interface {
	// List lists all FileSystems in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FileSystem, err error)
	// FileSystems returns an object that can list and get FileSystems.
	FileSystems(namespace string) FileSystemNamespaceLister
	FileSystemListerExpansion
}

// fileSystemLister implements the FileSystemLister interface.
type fileSystemLister struct {
	indexer cache.Indexer
}

// NewFileSystemLister returns a new FileSystemLister.
func NewFileSystemLister(indexer cache.Indexer) FileSystemLister {
	return &fileSystemLister{indexer: indexer}
}

// List lists all FileSystems in the indexer.
func (s *fileSystemLister) List(selector labels.Selector) (ret []*v1alpha1.FileSystem, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FileSystem))
	})
	return ret, err
}

// FileSystems returns an object that can list and get FileSystems.
func (s *fileSystemLister) FileSystems(namespace string) FileSystemNamespaceLister {
	return fileSystemNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FileSystemNamespaceLister helps list and get FileSystems.
type FileSystemNamespaceLister interface {
	// List lists all FileSystems in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FileSystem, err error)
	// Get retrieves the FileSystem from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FileSystem, error)
	FileSystemNamespaceListerExpansion
}

// fileSystemNamespaceLister implements the FileSystemNamespaceLister
// interface.
type fileSystemNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FileSystems in the indexer for a given namespace.
func (s fileSystemNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FileSystem, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FileSystem))
	})
	return ret, err
}

// Get retrieves the FileSystem from the indexer for a given namespace and name.
func (s fileSystemNamespaceLister) Get(name string) (*v1alpha1.FileSystem, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("filesystem"), name)
	}
	return obj.(*v1alpha1.FileSystem), nil
}
