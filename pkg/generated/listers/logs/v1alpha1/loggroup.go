/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/logs/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LogGroupLister helps list LogGroups.
type LogGroupLister interface {
	// List lists all LogGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LogGroup, err error)
	// LogGroups returns an object that can list and get LogGroups.
	LogGroups(namespace string) LogGroupNamespaceLister
	LogGroupListerExpansion
}

// logGroupLister implements the LogGroupLister interface.
type logGroupLister struct {
	indexer cache.Indexer
}

// NewLogGroupLister returns a new LogGroupLister.
func NewLogGroupLister(indexer cache.Indexer) LogGroupLister {
	return &logGroupLister{indexer: indexer}
}

// List lists all LogGroups in the indexer.
func (s *logGroupLister) List(selector labels.Selector) (ret []*v1alpha1.LogGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogGroup))
	})
	return ret, err
}

// LogGroups returns an object that can list and get LogGroups.
func (s *logGroupLister) LogGroups(namespace string) LogGroupNamespaceLister {
	return logGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogGroupNamespaceLister helps list and get LogGroups.
type LogGroupNamespaceLister interface {
	// List lists all LogGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LogGroup, err error)
	// Get retrieves the LogGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LogGroup, error)
	LogGroupNamespaceListerExpansion
}

// logGroupNamespaceLister implements the LogGroupNamespaceLister
// interface.
type logGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogGroups in the indexer for a given namespace.
func (s logGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogGroup))
	})
	return ret, err
}

// Get retrieves the LogGroup from the indexer for a given namespace and name.
func (s logGroupNamespaceLister) Get(name string) (*v1alpha1.LogGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("loggroup"), name)
	}
	return obj.(*v1alpha1.LogGroup), nil
}
