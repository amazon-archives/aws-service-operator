/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/logs/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LogStreamLister helps list LogStreams.
type LogStreamLister interface {
	// List lists all LogStreams in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LogStream, err error)
	// LogStreams returns an object that can list and get LogStreams.
	LogStreams(namespace string) LogStreamNamespaceLister
	LogStreamListerExpansion
}

// logStreamLister implements the LogStreamLister interface.
type logStreamLister struct {
	indexer cache.Indexer
}

// NewLogStreamLister returns a new LogStreamLister.
func NewLogStreamLister(indexer cache.Indexer) LogStreamLister {
	return &logStreamLister{indexer: indexer}
}

// List lists all LogStreams in the indexer.
func (s *logStreamLister) List(selector labels.Selector) (ret []*v1alpha1.LogStream, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogStream))
	})
	return ret, err
}

// LogStreams returns an object that can list and get LogStreams.
func (s *logStreamLister) LogStreams(namespace string) LogStreamNamespaceLister {
	return logStreamNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogStreamNamespaceLister helps list and get LogStreams.
type LogStreamNamespaceLister interface {
	// List lists all LogStreams in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LogStream, err error)
	// Get retrieves the LogStream from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LogStream, error)
	LogStreamNamespaceListerExpansion
}

// logStreamNamespaceLister implements the LogStreamNamespaceLister
// interface.
type logStreamNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogStreams in the indexer for a given namespace.
func (s logStreamNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogStream, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogStream))
	})
	return ret, err
}

// Get retrieves the LogStream from the indexer for a given namespace and name.
func (s logStreamNamespaceLister) Get(name string) (*v1alpha1.LogStream, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("logstream"), name)
	}
	return obj.(*v1alpha1.LogStream), nil
}
