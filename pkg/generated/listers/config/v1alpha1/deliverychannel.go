/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/config/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DeliveryChannelLister helps list DeliveryChannels.
type DeliveryChannelLister interface {
	// List lists all DeliveryChannels in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DeliveryChannel, err error)
	// DeliveryChannels returns an object that can list and get DeliveryChannels.
	DeliveryChannels(namespace string) DeliveryChannelNamespaceLister
	DeliveryChannelListerExpansion
}

// deliveryChannelLister implements the DeliveryChannelLister interface.
type deliveryChannelLister struct {
	indexer cache.Indexer
}

// NewDeliveryChannelLister returns a new DeliveryChannelLister.
func NewDeliveryChannelLister(indexer cache.Indexer) DeliveryChannelLister {
	return &deliveryChannelLister{indexer: indexer}
}

// List lists all DeliveryChannels in the indexer.
func (s *deliveryChannelLister) List(selector labels.Selector) (ret []*v1alpha1.DeliveryChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeliveryChannel))
	})
	return ret, err
}

// DeliveryChannels returns an object that can list and get DeliveryChannels.
func (s *deliveryChannelLister) DeliveryChannels(namespace string) DeliveryChannelNamespaceLister {
	return deliveryChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DeliveryChannelNamespaceLister helps list and get DeliveryChannels.
type DeliveryChannelNamespaceLister interface {
	// List lists all DeliveryChannels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DeliveryChannel, err error)
	// Get retrieves the DeliveryChannel from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DeliveryChannel, error)
	DeliveryChannelNamespaceListerExpansion
}

// deliveryChannelNamespaceLister implements the DeliveryChannelNamespaceLister
// interface.
type deliveryChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DeliveryChannels in the indexer for a given namespace.
func (s deliveryChannelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DeliveryChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeliveryChannel))
	})
	return ret, err
}

// Get retrieves the DeliveryChannel from the indexer for a given namespace and name.
func (s deliveryChannelNamespaceLister) Get(name string) (*v1alpha1.DeliveryChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("deliverychannel"), name)
	}
	return obj.(*v1alpha1.DeliveryChannel), nil
}
