/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/dms/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReplicationTaskLister helps list ReplicationTasks.
type ReplicationTaskLister interface {
	// List lists all ReplicationTasks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ReplicationTask, err error)
	// ReplicationTasks returns an object that can list and get ReplicationTasks.
	ReplicationTasks(namespace string) ReplicationTaskNamespaceLister
	ReplicationTaskListerExpansion
}

// replicationTaskLister implements the ReplicationTaskLister interface.
type replicationTaskLister struct {
	indexer cache.Indexer
}

// NewReplicationTaskLister returns a new ReplicationTaskLister.
func NewReplicationTaskLister(indexer cache.Indexer) ReplicationTaskLister {
	return &replicationTaskLister{indexer: indexer}
}

// List lists all ReplicationTasks in the indexer.
func (s *replicationTaskLister) List(selector labels.Selector) (ret []*v1alpha1.ReplicationTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReplicationTask))
	})
	return ret, err
}

// ReplicationTasks returns an object that can list and get ReplicationTasks.
func (s *replicationTaskLister) ReplicationTasks(namespace string) ReplicationTaskNamespaceLister {
	return replicationTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReplicationTaskNamespaceLister helps list and get ReplicationTasks.
type ReplicationTaskNamespaceLister interface {
	// List lists all ReplicationTasks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ReplicationTask, err error)
	// Get retrieves the ReplicationTask from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ReplicationTask, error)
	ReplicationTaskNamespaceListerExpansion
}

// replicationTaskNamespaceLister implements the ReplicationTaskNamespaceLister
// interface.
type replicationTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReplicationTasks in the indexer for a given namespace.
func (s replicationTaskNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReplicationTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReplicationTask))
	})
	return ret, err
}

// Get retrieves the ReplicationTask from the indexer for a given namespace and name.
func (s replicationTaskNamespaceLister) Get(name string) (*v1alpha1.ReplicationTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("replicationtask"), name)
	}
	return obj.(*v1alpha1.ReplicationTask), nil
}
