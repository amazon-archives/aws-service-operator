/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/rds/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OptionGroupLister helps list OptionGroups.
type OptionGroupLister interface {
	// List lists all OptionGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OptionGroup, err error)
	// OptionGroups returns an object that can list and get OptionGroups.
	OptionGroups(namespace string) OptionGroupNamespaceLister
	OptionGroupListerExpansion
}

// optionGroupLister implements the OptionGroupLister interface.
type optionGroupLister struct {
	indexer cache.Indexer
}

// NewOptionGroupLister returns a new OptionGroupLister.
func NewOptionGroupLister(indexer cache.Indexer) OptionGroupLister {
	return &optionGroupLister{indexer: indexer}
}

// List lists all OptionGroups in the indexer.
func (s *optionGroupLister) List(selector labels.Selector) (ret []*v1alpha1.OptionGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OptionGroup))
	})
	return ret, err
}

// OptionGroups returns an object that can list and get OptionGroups.
func (s *optionGroupLister) OptionGroups(namespace string) OptionGroupNamespaceLister {
	return optionGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OptionGroupNamespaceLister helps list and get OptionGroups.
type OptionGroupNamespaceLister interface {
	// List lists all OptionGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OptionGroup, err error)
	// Get retrieves the OptionGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OptionGroup, error)
	OptionGroupNamespaceListerExpansion
}

// optionGroupNamespaceLister implements the OptionGroupNamespaceLister
// interface.
type optionGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OptionGroups in the indexer for a given namespace.
func (s optionGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OptionGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OptionGroup))
	})
	return ret, err
}

// Get retrieves the OptionGroup from the indexer for a given namespace and name.
func (s optionGroupNamespaceLister) Get(name string) (*v1alpha1.OptionGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("optiongroup"), name)
	}
	return obj.(*v1alpha1.OptionGroup), nil
}
