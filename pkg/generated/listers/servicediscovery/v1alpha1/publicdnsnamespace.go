/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/servicediscovery/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PublicDnsNamespaceLister helps list PublicDnsNamespaces.
type PublicDnsNamespaceLister interface {
	// List lists all PublicDnsNamespaces in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PublicDnsNamespace, err error)
	// PublicDnsNamespaces returns an object that can list and get PublicDnsNamespaces.
	PublicDnsNamespaces(namespace string) PublicDnsNamespaceNamespaceLister
	PublicDnsNamespaceListerExpansion
}

// publicDnsNamespaceLister implements the PublicDnsNamespaceLister interface.
type publicDnsNamespaceLister struct {
	indexer cache.Indexer
}

// NewPublicDnsNamespaceLister returns a new PublicDnsNamespaceLister.
func NewPublicDnsNamespaceLister(indexer cache.Indexer) PublicDnsNamespaceLister {
	return &publicDnsNamespaceLister{indexer: indexer}
}

// List lists all PublicDnsNamespaces in the indexer.
func (s *publicDnsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PublicDnsNamespace, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PublicDnsNamespace))
	})
	return ret, err
}

// PublicDnsNamespaces returns an object that can list and get PublicDnsNamespaces.
func (s *publicDnsNamespaceLister) PublicDnsNamespaces(namespace string) PublicDnsNamespaceNamespaceLister {
	return publicDnsNamespaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PublicDnsNamespaceNamespaceLister helps list and get PublicDnsNamespaces.
type PublicDnsNamespaceNamespaceLister interface {
	// List lists all PublicDnsNamespaces in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PublicDnsNamespace, err error)
	// Get retrieves the PublicDnsNamespace from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PublicDnsNamespace, error)
	PublicDnsNamespaceNamespaceListerExpansion
}

// publicDnsNamespaceNamespaceLister implements the PublicDnsNamespaceNamespaceLister
// interface.
type publicDnsNamespaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PublicDnsNamespaces in the indexer for a given namespace.
func (s publicDnsNamespaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PublicDnsNamespace, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PublicDnsNamespace))
	})
	return ret, err
}

// Get retrieves the PublicDnsNamespace from the indexer for a given namespace and name.
func (s publicDnsNamespaceNamespaceLister) Get(name string) (*v1alpha1.PublicDnsNamespace, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("publicdnsnamespace"), name)
	}
	return obj.(*v1alpha1.PublicDnsNamespace), nil
}
