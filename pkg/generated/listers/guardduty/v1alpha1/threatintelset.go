/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/guardduty/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ThreatIntelSetLister helps list ThreatIntelSets.
type ThreatIntelSetLister interface {
	// List lists all ThreatIntelSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ThreatIntelSet, err error)
	// ThreatIntelSets returns an object that can list and get ThreatIntelSets.
	ThreatIntelSets(namespace string) ThreatIntelSetNamespaceLister
	ThreatIntelSetListerExpansion
}

// threatIntelSetLister implements the ThreatIntelSetLister interface.
type threatIntelSetLister struct {
	indexer cache.Indexer
}

// NewThreatIntelSetLister returns a new ThreatIntelSetLister.
func NewThreatIntelSetLister(indexer cache.Indexer) ThreatIntelSetLister {
	return &threatIntelSetLister{indexer: indexer}
}

// List lists all ThreatIntelSets in the indexer.
func (s *threatIntelSetLister) List(selector labels.Selector) (ret []*v1alpha1.ThreatIntelSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ThreatIntelSet))
	})
	return ret, err
}

// ThreatIntelSets returns an object that can list and get ThreatIntelSets.
func (s *threatIntelSetLister) ThreatIntelSets(namespace string) ThreatIntelSetNamespaceLister {
	return threatIntelSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ThreatIntelSetNamespaceLister helps list and get ThreatIntelSets.
type ThreatIntelSetNamespaceLister interface {
	// List lists all ThreatIntelSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ThreatIntelSet, err error)
	// Get retrieves the ThreatIntelSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ThreatIntelSet, error)
	ThreatIntelSetNamespaceListerExpansion
}

// threatIntelSetNamespaceLister implements the ThreatIntelSetNamespaceLister
// interface.
type threatIntelSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ThreatIntelSets in the indexer for a given namespace.
func (s threatIntelSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ThreatIntelSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ThreatIntelSet))
	})
	return ret, err
}

// Get retrieves the ThreatIntelSet from the indexer for a given namespace and name.
func (s threatIntelSetNamespaceLister) Get(name string) (*v1alpha1.ThreatIntelSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("threatintelset"), name)
	}
	return obj.(*v1alpha1.ThreatIntelSet), nil
}
