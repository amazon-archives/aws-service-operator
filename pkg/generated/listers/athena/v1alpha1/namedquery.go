/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/athena/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NamedQueryLister helps list NamedQueries.
type NamedQueryLister interface {
	// List lists all NamedQueries in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NamedQuery, err error)
	// NamedQueries returns an object that can list and get NamedQueries.
	NamedQueries(namespace string) NamedQueryNamespaceLister
	NamedQueryListerExpansion
}

// namedQueryLister implements the NamedQueryLister interface.
type namedQueryLister struct {
	indexer cache.Indexer
}

// NewNamedQueryLister returns a new NamedQueryLister.
func NewNamedQueryLister(indexer cache.Indexer) NamedQueryLister {
	return &namedQueryLister{indexer: indexer}
}

// List lists all NamedQueries in the indexer.
func (s *namedQueryLister) List(selector labels.Selector) (ret []*v1alpha1.NamedQuery, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NamedQuery))
	})
	return ret, err
}

// NamedQueries returns an object that can list and get NamedQueries.
func (s *namedQueryLister) NamedQueries(namespace string) NamedQueryNamespaceLister {
	return namedQueryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NamedQueryNamespaceLister helps list and get NamedQueries.
type NamedQueryNamespaceLister interface {
	// List lists all NamedQueries in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NamedQuery, err error)
	// Get retrieves the NamedQuery from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NamedQuery, error)
	NamedQueryNamespaceListerExpansion
}

// namedQueryNamespaceLister implements the NamedQueryNamespaceLister
// interface.
type namedQueryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NamedQueries in the indexer for a given namespace.
func (s namedQueryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NamedQuery, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NamedQuery))
	})
	return ret, err
}

// Get retrieves the NamedQuery from the indexer for a given namespace and name.
func (s namedQueryNamespaceLister) Get(name string) (*v1alpha1.NamedQuery, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("namedquery"), name)
	}
	return obj.(*v1alpha1.NamedQuery), nil
}
