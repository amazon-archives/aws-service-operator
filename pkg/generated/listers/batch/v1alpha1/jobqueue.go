/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/batch/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JobQueueLister helps list JobQueues.
type JobQueueLister interface {
	// List lists all JobQueues in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.JobQueue, err error)
	// JobQueues returns an object that can list and get JobQueues.
	JobQueues(namespace string) JobQueueNamespaceLister
	JobQueueListerExpansion
}

// jobQueueLister implements the JobQueueLister interface.
type jobQueueLister struct {
	indexer cache.Indexer
}

// NewJobQueueLister returns a new JobQueueLister.
func NewJobQueueLister(indexer cache.Indexer) JobQueueLister {
	return &jobQueueLister{indexer: indexer}
}

// List lists all JobQueues in the indexer.
func (s *jobQueueLister) List(selector labels.Selector) (ret []*v1alpha1.JobQueue, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobQueue))
	})
	return ret, err
}

// JobQueues returns an object that can list and get JobQueues.
func (s *jobQueueLister) JobQueues(namespace string) JobQueueNamespaceLister {
	return jobQueueNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobQueueNamespaceLister helps list and get JobQueues.
type JobQueueNamespaceLister interface {
	// List lists all JobQueues in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.JobQueue, err error)
	// Get retrieves the JobQueue from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.JobQueue, error)
	JobQueueNamespaceListerExpansion
}

// jobQueueNamespaceLister implements the JobQueueNamespaceLister
// interface.
type jobQueueNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobQueues in the indexer for a given namespace.
func (s jobQueueNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JobQueue, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobQueue))
	})
	return ret, err
}

// Get retrieves the JobQueue from the indexer for a given namespace and name.
func (s jobQueueNamespaceLister) Get(name string) (*v1alpha1.JobQueue, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jobqueue"), name)
	}
	return obj.(*v1alpha1.JobQueue), nil
}
