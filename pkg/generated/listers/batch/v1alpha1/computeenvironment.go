/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "awsoperator.io/pkg/apis/batch/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeEnvironmentLister helps list ComputeEnvironments.
type ComputeEnvironmentLister interface {
	// List lists all ComputeEnvironments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeEnvironment, err error)
	// ComputeEnvironments returns an object that can list and get ComputeEnvironments.
	ComputeEnvironments(namespace string) ComputeEnvironmentNamespaceLister
	ComputeEnvironmentListerExpansion
}

// computeEnvironmentLister implements the ComputeEnvironmentLister interface.
type computeEnvironmentLister struct {
	indexer cache.Indexer
}

// NewComputeEnvironmentLister returns a new ComputeEnvironmentLister.
func NewComputeEnvironmentLister(indexer cache.Indexer) ComputeEnvironmentLister {
	return &computeEnvironmentLister{indexer: indexer}
}

// List lists all ComputeEnvironments in the indexer.
func (s *computeEnvironmentLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeEnvironment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeEnvironment))
	})
	return ret, err
}

// ComputeEnvironments returns an object that can list and get ComputeEnvironments.
func (s *computeEnvironmentLister) ComputeEnvironments(namespace string) ComputeEnvironmentNamespaceLister {
	return computeEnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeEnvironmentNamespaceLister helps list and get ComputeEnvironments.
type ComputeEnvironmentNamespaceLister interface {
	// List lists all ComputeEnvironments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeEnvironment, err error)
	// Get retrieves the ComputeEnvironment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeEnvironment, error)
	ComputeEnvironmentNamespaceListerExpansion
}

// computeEnvironmentNamespaceLister implements the ComputeEnvironmentNamespaceLister
// interface.
type computeEnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeEnvironments in the indexer for a given namespace.
func (s computeEnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeEnvironment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeEnvironment))
	})
	return ret, err
}

// Get retrieves the ComputeEnvironment from the indexer for a given namespace and name.
func (s computeEnvironmentNamespaceLister) Get(name string) (*v1alpha1.ComputeEnvironment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computeenvironment"), name)
	}
	return obj.(*v1alpha1.ComputeEnvironment), nil
}
