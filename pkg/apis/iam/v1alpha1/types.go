/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/

// Code generated by make generate. DO NOT EDIT.

// Package v1alpha1 is the v1alpha1 version of the awsoperator.io api.
package v1alpha1

import (
	metav1alpha1 "awsoperator.io/pkg/apis/meta/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// AccessKey is a specification for a AccessKey resource
type AccessKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec AccessKeySpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status AccessKeyStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs AccessKeyOutputs `json:"outputs"`
}

// AccessKeySpec is the spec for the AccessKey resource
type AccessKeySpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Serial http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-serial
	Serial int32 `json:"serial,omitempty" cloudformation:"Serial,Parameter"`

	// Status http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-status
	Status string `json:"status,omitempty" cloudformation:"Status,Parameter"`

	// UserName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-username
	UserName string `json:"userName,omitempty" cloudformation:"UserName,Parameter"`
}

// AccessKeyStatus is the status for a  resource
type AccessKeyStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// AccessKeyOutputs is the status for a  resource
type AccessKeyOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// AccessKeyList is a list of AccessKey resources
type AccessKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []AccessKey `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Group is a specification for a Group resource
type Group struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec GroupSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status GroupStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs GroupOutputs `json:"outputs"`
}

// GroupSpec is the spec for the Group resource
type GroupSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// GroupName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-groupname
	GroupName string `json:"groupName,omitempty" cloudformation:"GroupName,Parameter"`

	// ManagedPolicyRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-managepolicyarns
	ManagedPolicyRef []string `json:"managedPolicyRef,omitempty" cloudformation:"ManagedPolicyArns,Parameter"`

	// Path http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-path
	Path string `json:"path,omitempty" cloudformation:"Path,Parameter"`

	// Policies http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-policies
	Policies []GroupSpecPolicy `json:"policies,omitempty" cloudformation:"Policies,Parameter"`
}

// GroupSpecPolicy is the definition for a Group resource
type GroupSpecPolicy struct {
}

// GroupSpecPolicyPolicyDocument is the definition for a Group resource
type GroupSpecPolicyPolicyDocument struct {
}

// GroupStatus is the status for a  resource
type GroupStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// GroupOutputs is the status for a  resource
type GroupOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// GroupList is a list of Group resources
type GroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Group `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// InstanceProfile is a specification for a InstanceProfile resource
type InstanceProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec InstanceProfileSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status InstanceProfileStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs InstanceProfileOutputs `json:"outputs"`
}

// InstanceProfileSpec is the spec for the InstanceProfile resource
type InstanceProfileSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// InstanceProfileName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-instanceprofilename
	InstanceProfileName string `json:"instanceProfileName,omitempty" cloudformation:"InstanceProfileName,Parameter"`

	// Path http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-path
	Path string `json:"path,omitempty" cloudformation:"Path,Parameter"`

	// Roles http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-roles
	Roles []string `json:"roles,omitempty" cloudformation:"Roles,Parameter"`
}

// InstanceProfileStatus is the status for a  resource
type InstanceProfileStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// InstanceProfileOutputs is the status for a  resource
type InstanceProfileOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// InstanceProfileList is a list of InstanceProfile resources
type InstanceProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []InstanceProfile `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ManagedPolicy is a specification for a ManagedPolicy resource
type ManagedPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ManagedPolicySpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ManagedPolicyStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ManagedPolicyOutputs `json:"outputs"`
}

// ManagedPolicySpec is the spec for the ManagedPolicy resource
type ManagedPolicySpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Description http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-description
	Description string `json:"description,omitempty" cloudformation:"Description,Parameter"`

	// Groups http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-groups
	Groups []string `json:"groups,omitempty" cloudformation:"Groups,Parameter"`

	// ManagedPolicyName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-managedpolicyname
	ManagedPolicyName string `json:"managedPolicyName,omitempty" cloudformation:"ManagedPolicyName,Parameter"`

	// Path http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-ec2-dhcpoptions-path
	Path string `json:"path,omitempty" cloudformation:"Path,Parameter"`

	// PolicyDocument http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-policydocument
	PolicyDocument ManagedPolicySpecPolicyDocument `json:"policyDocument,omitempty" cloudformation:"PolicyDocument,Parameter"`

	// Roles http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-roles
	Roles []string `json:"roles,omitempty" cloudformation:"Roles,Parameter"`

	// Users http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-users
	Users []string `json:"users,omitempty" cloudformation:"Users,Parameter"`
}

// ManagedPolicySpecPolicyDocument is the definition for a ManagedPolicy resource
type ManagedPolicySpecPolicyDocument struct {
}

// ManagedPolicyStatus is the status for a  resource
type ManagedPolicyStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ManagedPolicyOutputs is the status for a  resource
type ManagedPolicyOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ManagedPolicyList is a list of ManagedPolicy resources
type ManagedPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ManagedPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Policy is a specification for a Policy resource
type Policy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec PolicySpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status PolicyStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs PolicyOutputs `json:"outputs"`
}

// PolicySpec is the spec for the Policy resource
type PolicySpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Groups http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-groups
	Groups []string `json:"groups,omitempty" cloudformation:"Groups,Parameter"`

	// PolicyDocument http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policydocument
	PolicyDocument PolicySpecPolicyDocument `json:"policyDocument,omitempty" cloudformation:"PolicyDocument,Parameter"`

	// PolicyName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policyname
	PolicyName string `json:"policyName,omitempty" cloudformation:"PolicyName,Parameter"`

	// Roles http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-roles
	Roles []string `json:"roles,omitempty" cloudformation:"Roles,Parameter"`

	// Users http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-users
	Users []string `json:"users,omitempty" cloudformation:"Users,Parameter"`
}

// PolicySpecPolicyDocument is the definition for a Policy resource
type PolicySpecPolicyDocument struct {
}

// PolicyStatus is the status for a  resource
type PolicyStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// PolicyOutputs is the status for a  resource
type PolicyOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// PolicyList is a list of Policy resources
type PolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Policy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Role is a specification for a Role resource
type Role struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec RoleSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status RoleStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs RoleOutputs `json:"outputs"`
}

// RoleSpec is the spec for the Role resource
type RoleSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// AssumeRolePolicyDocument http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
	AssumeRolePolicyDocument RoleSpecAssumeRolePolicyDocument `json:"assumeRolePolicyDocument,omitempty" cloudformation:"AssumeRolePolicyDocument,Parameter"`

	// ManagedPolicyRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managepolicyarns
	ManagedPolicyRef []string `json:"managedPolicyRef,omitempty" cloudformation:"ManagedPolicyArns,Parameter"`

	// MaxSessionDuration http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
	MaxSessionDuration int32 `json:"maxSessionDuration,omitempty" cloudformation:"MaxSessionDuration,Parameter"`

	// Path http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
	Path string `json:"path,omitempty" cloudformation:"Path,Parameter"`

	// PermissionsBoundary http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
	PermissionsBoundary string `json:"permissionsBoundary,omitempty" cloudformation:"PermissionsBoundary,Parameter"`

	// Policies http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
	Policies []RoleSpecPolicy `json:"policies,omitempty" cloudformation:"Policies,Parameter"`

	// RoleName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
	RoleName string `json:"roleName,omitempty" cloudformation:"RoleName,Parameter"`
}

// RoleSpecAssumeRolePolicyDocument is the definition for a Role resource
type RoleSpecAssumeRolePolicyDocument struct {
}

// RoleSpecPolicy is the definition for a Role resource
type RoleSpecPolicy struct {
}

// RoleSpecPolicyPolicyDocument is the definition for a Role resource
type RoleSpecPolicyPolicyDocument struct {
}

// RoleStatus is the status for a  resource
type RoleStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// RoleOutputs is the status for a  resource
type RoleOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RoleList is a list of Role resources
type RoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Role `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ServiceLinkedRole is a specification for a ServiceLinkedRole resource
type ServiceLinkedRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ServiceLinkedRoleSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ServiceLinkedRoleStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ServiceLinkedRoleOutputs `json:"outputs"`
}

// ServiceLinkedRoleSpec is the spec for the ServiceLinkedRole resource
type ServiceLinkedRoleSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// AWSServiceName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-awsservicename
	AWSServiceName string `json:"aWSServiceName,omitempty" cloudformation:"AWSServiceName,Parameter"`

	// CustomSuffix http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-customsuffix
	CustomSuffix string `json:"customSuffix,omitempty" cloudformation:"CustomSuffix,Parameter"`

	// Description http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-description
	Description string `json:"description,omitempty" cloudformation:"Description,Parameter"`
}

// ServiceLinkedRoleStatus is the status for a  resource
type ServiceLinkedRoleStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ServiceLinkedRoleOutputs is the status for a  resource
type ServiceLinkedRoleOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ServiceLinkedRoleList is a list of ServiceLinkedRole resources
type ServiceLinkedRoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ServiceLinkedRole `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// User is a specification for a User resource
type User struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec UserSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status UserStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs UserOutputs `json:"outputs"`
}

// UserSpec is the spec for the User resource
type UserSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Groups http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-groups
	Groups []string `json:"groups,omitempty" cloudformation:"Groups,Parameter"`

	// LoginProfile http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-loginprofile
	LoginProfile UserSpecLoginProfile `json:"loginProfile,omitempty"`

	// ManagedPolicyRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-managepolicyarns
	ManagedPolicyRef []string `json:"managedPolicyRef,omitempty" cloudformation:"ManagedPolicyArns,Parameter"`

	// Path http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-path
	Path string `json:"path,omitempty" cloudformation:"Path,Parameter"`

	// PermissionsBoundary http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-permissionsboundary
	PermissionsBoundary string `json:"permissionsBoundary,omitempty" cloudformation:"PermissionsBoundary,Parameter"`

	// Policies http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-policies
	Policies []UserSpecPolicy `json:"policies,omitempty" cloudformation:"Policies,Parameter"`

	// UserName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-username
	UserName string `json:"userName,omitempty" cloudformation:"UserName,Parameter"`
}

// UserSpecLoginProfile is the definition for a User resource
type UserSpecLoginProfile struct {
	// Password http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
	Password string `json:"password,omitempty" cloudformation:"Password,Parameter"`

	// PasswordResetRequired http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
	PasswordResetRequired bool `json:"passwordResetRequired,omitempty" cloudformation:"PasswordResetRequired,Parameter"`
}

// UserSpecPolicy is the definition for a User resource
type UserSpecPolicy struct {
}

// UserSpecPolicyPolicyDocument is the definition for a User resource
type UserSpecPolicyPolicyDocument struct {
}

// UserStatus is the status for a  resource
type UserStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// UserOutputs is the status for a  resource
type UserOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// UserList is a list of User resources
type UserList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []User `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// UserToGroupAddition is a specification for a UserToGroupAddition resource
type UserToGroupAddition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec UserToGroupAdditionSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status UserToGroupAdditionStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs UserToGroupAdditionOutputs `json:"outputs"`
}

// UserToGroupAdditionSpec is the spec for the UserToGroupAddition resource
type UserToGroupAdditionSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// GroupName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-groupname
	GroupName string `json:"groupName,omitempty" cloudformation:"GroupName,Parameter"`

	// Users http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-users
	Users []string `json:"users,omitempty" cloudformation:"Users,Parameter"`
}

// UserToGroupAdditionStatus is the status for a  resource
type UserToGroupAdditionStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// UserToGroupAdditionOutputs is the status for a  resource
type UserToGroupAdditionOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// UserToGroupAdditionList is a list of UserToGroupAddition resources
type UserToGroupAdditionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []UserToGroupAddition `json:"items"`
}
