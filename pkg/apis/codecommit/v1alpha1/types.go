/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/

// Code generated by make generate. DO NOT EDIT.

// Package v1alpha1 is the v1alpha1 version of the awsoperator.io api.
package v1alpha1

import (
	metav1alpha1 "awsoperator.io/pkg/apis/meta/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Repository is a specification for a Repository resource
type Repository struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec RepositorySpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status RepositoryStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs RepositoryOutputs `json:"outputs"`
}

// RepositorySpec is the spec for the Repository resource
type RepositorySpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Code http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
	Code RepositorySpecCode `json:"code,omitempty"`

	// RepositoryDescription http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
	RepositoryDescription string `json:"repositoryDescription,omitempty" cloudformation:"RepositoryDescription,Parameter"`

	// RepositoryName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
	RepositoryName string `json:"repositoryName,omitempty" cloudformation:"RepositoryName,Parameter"`

	// Triggers http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
	Triggers []RepositorySpecTrigger `json:"triggers,omitempty" cloudformation:"Triggers,Parameter"`
}

// RepositorySpecCode is the definition for a Repository resource
type RepositorySpecCode struct {
	// S3 http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-s3
	S3 RepositorySpecCodeS3 `json:"s3,omitempty"`
}

// RepositorySpecCodeS3 is the definition for a Repository resource
type RepositorySpecCodeS3 struct {
	// Bucket http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-bucket
	Bucket string `json:"bucket,omitempty" cloudformation:"Bucket,Parameter"`

	// Key http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-key
	Key string `json:"key,omitempty" cloudformation:"Key,Parameter"`

	// ObjectVersion http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-objectversion
	ObjectVersion string `json:"objectVersion,omitempty" cloudformation:"ObjectVersion,Parameter"`
}

// RepositorySpecTrigger is the definition for a Repository resource
type RepositorySpecTrigger struct {
}

// RepositoryStatus is the status for a  resource
type RepositoryStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// RepositoryOutputs is the status for a  resource
type RepositoryOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RepositoryList is a list of Repository resources
type RepositoryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []Repository `json:"items"`
}
