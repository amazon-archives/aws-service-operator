/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/

// Code generated by make generate. DO NOT EDIT.

// Package v1alpha1 is the v1alpha1 version of the awsoperator.io api.
package v1alpha1

import (
	metav1alpha1 "awsoperator.io/pkg/apis/meta/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// AggregationAuthorization is a specification for a AggregationAuthorization resource
type AggregationAuthorization struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec AggregationAuthorizationSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status AggregationAuthorizationStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs AggregationAuthorizationOutputs `json:"outputs"`
}

// AggregationAuthorizationSpec is the spec for the AggregationAuthorization resource
type AggregationAuthorizationSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// AuthorizedAccountRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedaccountid
	AuthorizedAccountRef string `json:"authorizedAccountRef,omitempty" cloudformation:"AuthorizedAccountId,Parameter"`

	// AuthorizedAwsRegion http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedawsregion
	AuthorizedAwsRegion string `json:"authorizedAwsRegion,omitempty" cloudformation:"AuthorizedAwsRegion,Parameter"`
}

// AggregationAuthorizationStatus is the status for a  resource
type AggregationAuthorizationStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// AggregationAuthorizationOutputs is the status for a  resource
type AggregationAuthorizationOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// AggregationAuthorizationList is a list of AggregationAuthorization resources
type AggregationAuthorizationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []AggregationAuthorization `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigRule is a specification for a ConfigRule resource
type ConfigRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ConfigRuleSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ConfigRuleStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ConfigRuleOutputs `json:"outputs"`
}

// ConfigRuleSpec is the spec for the ConfigRule resource
type ConfigRuleSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// ConfigRuleName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-configrulename
	ConfigRuleName string `json:"configRuleName,omitempty" cloudformation:"ConfigRuleName,Parameter"`

	// Description http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-description
	Description string `json:"description,omitempty" cloudformation:"Description,Parameter"`

	// InputParameters http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-inputparameters
	InputParameters ConfigRuleSpecInputParameters `json:"inputParameters,omitempty" cloudformation:"InputParameters,Parameter"`

	// MaximumExecutionFrequency http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-maximumexecutionfrequency
	MaximumExecutionFrequency string `json:"maximumExecutionFrequency,omitempty" cloudformation:"MaximumExecutionFrequency,Parameter"`

	// Scope http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-scope
	Scope ConfigRuleSpecScope `json:"scope,omitempty"`

	// Source http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-source
	Source ConfigRuleSpecSource `json:"source,omitempty"`
}

// ConfigRuleSpecInputParameters is the definition for a ConfigRule resource
type ConfigRuleSpecInputParameters struct {
}

// ConfigRuleSpecScope is the definition for a ConfigRule resource
type ConfigRuleSpecScope struct {
	// ComplianceResourceRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-complianceresourceid
	ComplianceResourceRef string `json:"complianceResourceRef,omitempty" cloudformation:"ComplianceResourceId,Parameter"`

	// ComplianceResourceTypes http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-complianceresourcetypes
	ComplianceResourceTypes []string `json:"complianceResourceTypes,omitempty" cloudformation:"ComplianceResourceTypes,Parameter"`

	// TagKey http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-tagkey
	TagKey string `json:"tagKey,omitempty" cloudformation:"TagKey,Parameter"`

	// TagValue http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-tagvalue
	TagValue string `json:"tagValue,omitempty" cloudformation:"TagValue,Parameter"`
}

// ConfigRuleSpecSource is the definition for a ConfigRule resource
type ConfigRuleSpecSource struct {
	// Owner http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-owner
	Owner string `json:"owner,omitempty" cloudformation:"Owner,Parameter"`

	// SourceDetails http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-sourcedetails
	SourceDetails []ConfigRuleSpecSourceSourceDetail `json:"sourceDetails,omitempty" cloudformation:"SourceDetails,Parameter"`

	// SourceentifierRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-sourceidentifier
	SourceentifierRef string `json:"sourceentifierRef,omitempty" cloudformation:"SourceIdentifier,Parameter"`
}

// ConfigRuleSpecSourceSourceDetail is the definition for a ConfigRule resource
type ConfigRuleSpecSourceSourceDetail struct {
}

// ConfigRuleStatus is the status for a  resource
type ConfigRuleStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ConfigRuleOutputs is the status for a  resource
type ConfigRuleOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigRuleList is a list of ConfigRule resources
type ConfigRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ConfigRule `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigurationAggregator is a specification for a ConfigurationAggregator resource
type ConfigurationAggregator struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ConfigurationAggregatorSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ConfigurationAggregatorStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ConfigurationAggregatorOutputs `json:"outputs"`
}

// ConfigurationAggregatorSpec is the spec for the ConfigurationAggregator resource
type ConfigurationAggregatorSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// AccountAggregationSources http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-accountaggregationsources
	AccountAggregationSources []ConfigurationAggregatorSpecAccountAggregationSource `json:"accountAggregationSources,omitempty" cloudformation:"AccountAggregationSources,Parameter"`

	// ConfigurationAggregatorName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-configurationaggregatorname
	ConfigurationAggregatorName string `json:"configurationAggregatorName,omitempty" cloudformation:"ConfigurationAggregatorName,Parameter"`

	// OrganizationAggregationSource http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-organizationaggregationsource
	OrganizationAggregationSource ConfigurationAggregatorSpecOrganizationAggregationSource `json:"organizationAggregationSource,omitempty"`
}

// ConfigurationAggregatorSpecAccountAggregationSource is the definition for a ConfigurationAggregator resource
type ConfigurationAggregatorSpecAccountAggregationSource struct {
}

// ConfigurationAggregatorSpecOrganizationAggregationSource is the definition for a ConfigurationAggregator resource
type ConfigurationAggregatorSpecOrganizationAggregationSource struct {
	// AllAwsRegions http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-allawsregions
	AllAwsRegions bool `json:"allAwsRegions,omitempty" cloudformation:"AllAwsRegions,Parameter"`

	// AwsRegions http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-awsregions
	AwsRegions []string `json:"awsRegions,omitempty" cloudformation:"AwsRegions,Parameter"`

	// RoleRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-rolearn
	RoleRef string `json:"roleRef,omitempty" cloudformation:"RoleArn,Parameter"`
}

// ConfigurationAggregatorStatus is the status for a  resource
type ConfigurationAggregatorStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ConfigurationAggregatorOutputs is the status for a  resource
type ConfigurationAggregatorOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigurationAggregatorList is a list of ConfigurationAggregator resources
type ConfigurationAggregatorList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ConfigurationAggregator `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigurationRecorder is a specification for a ConfigurationRecorder resource
type ConfigurationRecorder struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ConfigurationRecorderSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ConfigurationRecorderStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ConfigurationRecorderOutputs `json:"outputs"`
}

// ConfigurationRecorderSpec is the spec for the ConfigurationRecorder resource
type ConfigurationRecorderSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Name http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
	Name string `json:"name,omitempty" cloudformation:"Name,Parameter"`

	// RecordingGroup http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
	RecordingGroup ConfigurationRecorderSpecRecordingGroup `json:"recordingGroup,omitempty"`

	// RoleARN http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
	RoleARN string `json:"roleARN,omitempty" cloudformation:"RoleARN,Parameter"`
}

// ConfigurationRecorderSpecRecordingGroup is the definition for a ConfigurationRecorder resource
type ConfigurationRecorderSpecRecordingGroup struct {
	// AllSupported http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-allsupported
	AllSupported bool `json:"allSupported,omitempty" cloudformation:"AllSupported,Parameter"`

	// IncludeGlobalResourceTypes http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-includeglobalresourcetypes
	IncludeGlobalResourceTypes bool `json:"includeGlobalResourceTypes,omitempty" cloudformation:"IncludeGlobalResourceTypes,Parameter"`

	// ResourceTypes http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-resourcetypes
	ResourceTypes []string `json:"resourceTypes,omitempty" cloudformation:"ResourceTypes,Parameter"`
}

// ConfigurationRecorderStatus is the status for a  resource
type ConfigurationRecorderStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ConfigurationRecorderOutputs is the status for a  resource
type ConfigurationRecorderOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ConfigurationRecorderList is a list of ConfigurationRecorder resources
type ConfigurationRecorderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ConfigurationRecorder `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DeliveryChannel is a specification for a DeliveryChannel resource
type DeliveryChannel struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec DeliveryChannelSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status DeliveryChannelStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs DeliveryChannelOutputs `json:"outputs"`
}

// DeliveryChannelSpec is the spec for the DeliveryChannel resource
type DeliveryChannelSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// ConfigSnapshotDeliveryProperties http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties
	ConfigSnapshotDeliveryProperties DeliveryChannelSpecConfigSnapshotDeliveryProperties `json:"configSnapshotDeliveryProperties,omitempty"`

	// Name http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-name
	Name string `json:"name,omitempty" cloudformation:"Name,Parameter"`

	// S3BucketName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3bucketname
	S3BucketName string `json:"s3BucketName,omitempty" cloudformation:"S3BucketName,Parameter"`

	// S3KeyPrefix http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3keyprefix
	S3KeyPrefix string `json:"s3KeyPrefix,omitempty" cloudformation:"S3KeyPrefix,Parameter"`

	// SnsTopicARN http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-snstopicarn
	SnsTopicARN string `json:"snsTopicARN,omitempty" cloudformation:"SnsTopicARN,Parameter"`
}

// DeliveryChannelSpecConfigSnapshotDeliveryProperties is the definition for a DeliveryChannel resource
type DeliveryChannelSpecConfigSnapshotDeliveryProperties struct {
	// DeliveryFrequency http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties-deliveryfrequency
	DeliveryFrequency string `json:"deliveryFrequency,omitempty" cloudformation:"DeliveryFrequency,Parameter"`
}

// DeliveryChannelStatus is the status for a  resource
type DeliveryChannelStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// DeliveryChannelOutputs is the status for a  resource
type DeliveryChannelOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DeliveryChannelList is a list of DeliveryChannel resources
type DeliveryChannelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []DeliveryChannel `json:"items"`
}
