// +build !ignore_autogenerated

/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/
// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	out.Outputs = in.Outputs
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectOutputs) DeepCopyInto(out *ProjectOutputs) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectOutputs.
func (in *ProjectOutputs) DeepCopy() *ProjectOutputs {
	if in == nil {
		return nil
	}
	out := new(ProjectOutputs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.CloudFormationMeta.DeepCopyInto(&out.CloudFormationMeta)
	out.Artifacts = in.Artifacts
	in.Cache.DeepCopyInto(&out.Cache)
	in.Environment.DeepCopyInto(&out.Environment)
	out.LogsConfig = in.LogsConfig
	if in.SecondaryArtifacts != nil {
		in, out := &in.SecondaryArtifacts, &out.SecondaryArtifacts
		*out = make([]ProjectSpecSecondaryArtifact, len(*in))
		copy(*out, *in)
	}
	if in.SecondarySourceVersions != nil {
		in, out := &in.SecondarySourceVersions, &out.SecondarySourceVersions
		*out = make([]ProjectSpecSecondarySourceVersion, len(*in))
		copy(*out, *in)
	}
	if in.SecondarySources != nil {
		in, out := &in.SecondarySources, &out.SecondarySources
		*out = make([]ProjectSpecSecondarySource, len(*in))
		copy(*out, *in)
	}
	out.Source = in.Source
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]ProjectSpecTag, len(*in))
		copy(*out, *in)
	}
	in.Triggers.DeepCopyInto(&out.Triggers)
	in.VpcConfig.DeepCopyInto(&out.VpcConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecArtifacts) DeepCopyInto(out *ProjectSpecArtifacts) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecArtifacts.
func (in *ProjectSpecArtifacts) DeepCopy() *ProjectSpecArtifacts {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecCache) DeepCopyInto(out *ProjectSpecCache) {
	*out = *in
	if in.Modes != nil {
		in, out := &in.Modes, &out.Modes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecCache.
func (in *ProjectSpecCache) DeepCopy() *ProjectSpecCache {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironment) DeepCopyInto(out *ProjectSpecEnvironment) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make([]ProjectSpecEnvironmentEnvironmentVariable, len(*in))
		copy(*out, *in)
	}
	out.RegistryCredential = in.RegistryCredential
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironment.
func (in *ProjectSpecEnvironment) DeepCopy() *ProjectSpecEnvironment {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironmentEnvironmentVariable) DeepCopyInto(out *ProjectSpecEnvironmentEnvironmentVariable) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironmentEnvironmentVariable.
func (in *ProjectSpecEnvironmentEnvironmentVariable) DeepCopy() *ProjectSpecEnvironmentEnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironmentEnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironmentRegistryCredential) DeepCopyInto(out *ProjectSpecEnvironmentRegistryCredential) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironmentRegistryCredential.
func (in *ProjectSpecEnvironmentRegistryCredential) DeepCopy() *ProjectSpecEnvironmentRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironmentRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfig) DeepCopyInto(out *ProjectSpecLogsConfig) {
	*out = *in
	out.CloudWatchLogs = in.CloudWatchLogs
	out.S3Logs = in.S3Logs
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfig.
func (in *ProjectSpecLogsConfig) DeepCopy() *ProjectSpecLogsConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfigCloudWatchLogs) DeepCopyInto(out *ProjectSpecLogsConfigCloudWatchLogs) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfigCloudWatchLogs.
func (in *ProjectSpecLogsConfigCloudWatchLogs) DeepCopy() *ProjectSpecLogsConfigCloudWatchLogs {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfigCloudWatchLogs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfigS3Logs) DeepCopyInto(out *ProjectSpecLogsConfigS3Logs) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfigS3Logs.
func (in *ProjectSpecLogsConfigS3Logs) DeepCopy() *ProjectSpecLogsConfigS3Logs {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfigS3Logs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondaryArtifact) DeepCopyInto(out *ProjectSpecSecondaryArtifact) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondaryArtifact.
func (in *ProjectSpecSecondaryArtifact) DeepCopy() *ProjectSpecSecondaryArtifact {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondaryArtifact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySource) DeepCopyInto(out *ProjectSpecSecondarySource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySource.
func (in *ProjectSpecSecondarySource) DeepCopy() *ProjectSpecSecondarySource {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySourceAuth) DeepCopyInto(out *ProjectSpecSecondarySourceAuth) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySourceAuth.
func (in *ProjectSpecSecondarySourceAuth) DeepCopy() *ProjectSpecSecondarySourceAuth {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySourceAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySourceGitSubmodulesConfig) DeepCopyInto(out *ProjectSpecSecondarySourceGitSubmodulesConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySourceGitSubmodulesConfig.
func (in *ProjectSpecSecondarySourceGitSubmodulesConfig) DeepCopy() *ProjectSpecSecondarySourceGitSubmodulesConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySourceGitSubmodulesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySourceVersion) DeepCopyInto(out *ProjectSpecSecondarySourceVersion) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySourceVersion.
func (in *ProjectSpecSecondarySourceVersion) DeepCopy() *ProjectSpecSecondarySourceVersion {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySourceVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSource) DeepCopyInto(out *ProjectSpecSource) {
	*out = *in
	out.Auth = in.Auth
	out.GitSubmodulesConfig = in.GitSubmodulesConfig
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSource.
func (in *ProjectSpecSource) DeepCopy() *ProjectSpecSource {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSourceAuth) DeepCopyInto(out *ProjectSpecSourceAuth) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSourceAuth.
func (in *ProjectSpecSourceAuth) DeepCopy() *ProjectSpecSourceAuth {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSourceAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSourceGitSubmodulesConfig) DeepCopyInto(out *ProjectSpecSourceGitSubmodulesConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSourceGitSubmodulesConfig.
func (in *ProjectSpecSourceGitSubmodulesConfig) DeepCopy() *ProjectSpecSourceGitSubmodulesConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSourceGitSubmodulesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecTag) DeepCopyInto(out *ProjectSpecTag) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecTag.
func (in *ProjectSpecTag) DeepCopy() *ProjectSpecTag {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecTriggers) DeepCopyInto(out *ProjectSpecTriggers) {
	*out = *in
	if in.FilterGroups != nil {
		in, out := &in.FilterGroups, &out.FilterGroups
		*out = make([]ProjectSpecTriggersFilterGroup, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecTriggers.
func (in *ProjectSpecTriggers) DeepCopy() *ProjectSpecTriggers {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecTriggers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecTriggersFilterGroup) DeepCopyInto(out *ProjectSpecTriggersFilterGroup) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecTriggersFilterGroup.
func (in *ProjectSpecTriggersFilterGroup) DeepCopy() *ProjectSpecTriggersFilterGroup {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecTriggersFilterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecVpcConfig) DeepCopyInto(out *ProjectSpecVpcConfig) {
	*out = *in
	if in.SecurityGroupRef != nil {
		in, out := &in.SecurityGroupRef, &out.SecurityGroupRef
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecVpcConfig.
func (in *ProjectSpecVpcConfig) DeepCopy() *ProjectSpecVpcConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecVpcConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	in.StatusMeta.DeepCopyInto(&out.StatusMeta)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}
