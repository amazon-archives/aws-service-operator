/*
Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). You may
not use this file except in compliance with the License. A copy of the
License is located at

     http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. This file is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing
permissions and limitations under the License.
*/

// Code generated by make generate. DO NOT EDIT.

// Package v1alpha1 is the v1alpha1 version of the awsoperator.io api.
package v1alpha1

import (
	metav1alpha1 "awsoperator.io/pkg/apis/meta/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverEndpoint is a specification for a ResolverEndpoint resource
type ResolverEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ResolverEndpointSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ResolverEndpointStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ResolverEndpointOutputs `json:"outputs"`
}

// ResolverEndpointSpec is the spec for the ResolverEndpoint resource
type ResolverEndpointSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Direction http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
	Direction string `json:"direction,omitempty" cloudformation:"Direction,Parameter"`

	// IpAddresses http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
	IpAddresses []ResolverEndpointSpecIpAddress `json:"ipAddresses,omitempty" cloudformation:"IpAddresses,Parameter"`

	// Name http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
	Name string `json:"name,omitempty" cloudformation:"Name,Parameter"`

	// SecurityGroupRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
	SecurityGroupRef []string `json:"securityGroupRef,omitempty" cloudformation:"SecurityGroupIds,Parameter"`

	// Tags http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
	Tags []ResolverEndpointSpecTag `json:"tags,omitempty" cloudformation:"Tags,Parameter"`
}

// ResolverEndpointSpecIpAddress is the definition for a ResolverEndpoint resource
type ResolverEndpointSpecIpAddress struct {
}

// ResolverEndpointSpecTag is the definition for a ResolverEndpoint resource
type ResolverEndpointSpecTag struct {
}

// ResolverEndpointStatus is the status for a  resource
type ResolverEndpointStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ResolverEndpointOutputs is the status for a  resource
type ResolverEndpointOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverEndpointList is a list of ResolverEndpoint resources
type ResolverEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ResolverEndpoint `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverRule is a specification for a ResolverRule resource
type ResolverRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ResolverRuleSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ResolverRuleStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ResolverRuleOutputs `json:"outputs"`
}

// ResolverRuleSpec is the spec for the ResolverRule resource
type ResolverRuleSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// DomainName http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
	DomainName string `json:"domainName,omitempty" cloudformation:"DomainName,Parameter"`

	// Name http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
	Name string `json:"name,omitempty" cloudformation:"Name,Parameter"`

	// ResolverEndpointRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
	ResolverEndpointRef string `json:"resolverEndpointRef,omitempty" cloudformation:"ResolverEndpointId,Parameter"`

	// RuleType http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
	RuleType string `json:"ruleType,omitempty" cloudformation:"RuleType,Parameter"`

	// Tags http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
	Tags []ResolverRuleSpecTag `json:"tags,omitempty" cloudformation:"Tags,Parameter"`

	// TargetIps http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
	TargetIps []ResolverRuleSpecTargetIp `json:"targetIps,omitempty" cloudformation:"TargetIps,Parameter"`
}

// ResolverRuleSpecTag is the definition for a ResolverRule resource
type ResolverRuleSpecTag struct {
}

// ResolverRuleSpecTargetIp is the definition for a ResolverRule resource
type ResolverRuleSpecTargetIp struct {
}

// ResolverRuleStatus is the status for a  resource
type ResolverRuleStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ResolverRuleOutputs is the status for a  resource
type ResolverRuleOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverRuleList is a list of ResolverRule resources
type ResolverRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ResolverRule `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverRuleAssociation is a specification for a ResolverRuleAssociation resource
type ResolverRuleAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" cloudformation:"Name,Parameter"`

	// Spec stores all the CRD information
	Spec ResolverRuleAssociationSpec `json:"spec"`

	// +optional
	// Status stores the CloudFormation Status
	Status ResolverRuleAssociationStatus `json:"status"`

	// +optional
	// Outputs store any Cloudformation outputs
	Outputs ResolverRuleAssociationOutputs `json:"outputs"`
}

// ResolverRuleAssociationSpec is the spec for the ResolverRuleAssociation resource
type ResolverRuleAssociationSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Name http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
	Name string `json:"name,omitempty" cloudformation:"Name,Parameter"`

	// ResolverRuleRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
	ResolverRuleRef string `json:"resolverRuleRef,omitempty" cloudformation:"ResolverRuleId,Parameter"`

	// VPCRef http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
	VPCRef string `json:"vPCRef,omitempty" cloudformation:"VPCId,Parameter"`
}

// ResolverRuleAssociationStatus is the status for a  resource
type ResolverRuleAssociationStatus struct {
	metav1alpha1.StatusMeta `json:",inline" `
}

// ResolverRuleAssociationOutputs is the status for a  resource
type ResolverRuleAssociationOutputs struct {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ResolverRuleAssociationList is a list of ResolverRuleAssociation resources
type ResolverRuleAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ResolverRuleAssociation `json:"items"`
}
